// Generated by view binder compiler. Do not edit!
package com.onegravity.bloc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.onegravity.bloc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PostDetailsFragmentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final View divider;

  @NonNull
  public final ProgressBar indeterminateBar;

  @NonNull
  public final TextView postBody;

  @NonNull
  public final TextView postCommentCount;

  @NonNull
  public final RecyclerView postCommentsList;

  @NonNull
  public final TextView postTitle;

  @NonNull
  public final ConstraintLayout postdetails;

  @NonNull
  public final CoordinatorLayout root;

  @NonNull
  public final Toolbar toolbar;

  private PostDetailsFragmentBinding(@NonNull CoordinatorLayout rootView, @NonNull View divider,
      @NonNull ProgressBar indeterminateBar, @NonNull TextView postBody,
      @NonNull TextView postCommentCount, @NonNull RecyclerView postCommentsList,
      @NonNull TextView postTitle, @NonNull ConstraintLayout postdetails,
      @NonNull CoordinatorLayout root, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.divider = divider;
    this.indeterminateBar = indeterminateBar;
    this.postBody = postBody;
    this.postCommentCount = postCommentCount;
    this.postCommentsList = postCommentsList;
    this.postTitle = postTitle;
    this.postdetails = postdetails;
    this.root = root;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PostDetailsFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PostDetailsFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.post_details_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PostDetailsFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.indeterminateBar;
      ProgressBar indeterminateBar = ViewBindings.findChildViewById(rootView, id);
      if (indeterminateBar == null) {
        break missingId;
      }

      id = R.id.post_body;
      TextView postBody = ViewBindings.findChildViewById(rootView, id);
      if (postBody == null) {
        break missingId;
      }

      id = R.id.post_comment_count;
      TextView postCommentCount = ViewBindings.findChildViewById(rootView, id);
      if (postCommentCount == null) {
        break missingId;
      }

      id = R.id.post_comments_list;
      RecyclerView postCommentsList = ViewBindings.findChildViewById(rootView, id);
      if (postCommentsList == null) {
        break missingId;
      }

      id = R.id.post_title;
      TextView postTitle = ViewBindings.findChildViewById(rootView, id);
      if (postTitle == null) {
        break missingId;
      }

      id = R.id.postdetails;
      ConstraintLayout postdetails = ViewBindings.findChildViewById(rootView, id);
      if (postdetails == null) {
        break missingId;
      }

      CoordinatorLayout root = (CoordinatorLayout) rootView;

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new PostDetailsFragmentBinding((CoordinatorLayout) rootView, divider, indeterminateBar,
          postBody, postCommentCount, postCommentsList, postTitle, postdetails, root, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
