// Generated by view binder compiler. Do not edit!
package com.onegravity.bloc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.onegravity.bloc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBooksBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView hint;

  @NonNull
  public final PartBooksContentBinding pageContent;

  @NonNull
  public final PartBooksEmptyBinding pageEmpty;

  @NonNull
  public final PartBooksErrorBinding pageError;

  @NonNull
  public final PartBooksLoadingBinding pageLoading;

  private ActivityBooksBinding(@NonNull LinearLayout rootView, @NonNull TextView hint,
      @NonNull PartBooksContentBinding pageContent, @NonNull PartBooksEmptyBinding pageEmpty,
      @NonNull PartBooksErrorBinding pageError, @NonNull PartBooksLoadingBinding pageLoading) {
    this.rootView = rootView;
    this.hint = hint;
    this.pageContent = pageContent;
    this.pageEmpty = pageEmpty;
    this.pageError = pageError;
    this.pageLoading = pageLoading;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBooksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBooksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_books, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBooksBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.hint;
      TextView hint = ViewBindings.findChildViewById(rootView, id);
      if (hint == null) {
        break missingId;
      }

      id = R.id.pageContent;
      View pageContent = ViewBindings.findChildViewById(rootView, id);
      if (pageContent == null) {
        break missingId;
      }
      PartBooksContentBinding binding_pageContent = PartBooksContentBinding.bind(pageContent);

      id = R.id.pageEmpty;
      View pageEmpty = ViewBindings.findChildViewById(rootView, id);
      if (pageEmpty == null) {
        break missingId;
      }
      PartBooksEmptyBinding binding_pageEmpty = PartBooksEmptyBinding.bind(pageEmpty);

      id = R.id.pageError;
      View pageError = ViewBindings.findChildViewById(rootView, id);
      if (pageError == null) {
        break missingId;
      }
      PartBooksErrorBinding binding_pageError = PartBooksErrorBinding.bind(pageError);

      id = R.id.pageLoading;
      View pageLoading = ViewBindings.findChildViewById(rootView, id);
      if (pageLoading == null) {
        break missingId;
      }
      PartBooksLoadingBinding binding_pageLoading = PartBooksLoadingBinding.bind(pageLoading);

      return new ActivityBooksBinding((LinearLayout) rootView, hint, binding_pageContent,
          binding_pageEmpty, binding_pageError, binding_pageLoading);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
