[{"name":"fun <State : Any, Proposal : Any, Model : Any, ReduxModel : Any> <ERROR CLASS><ReduxModel>.toBlocState(context: <ERROR CLASS>, select: <ERROR CLASS><ReduxModel, Model>, map: <ERROR CLASS><Model, State>): <ERROR CLASS><State, Proposal>","description":"com.onegravity.bloc.redux.toBlocState","location":"bloc-redux/com.onegravity.bloc.redux/to-bloc-state.html","searchKeys":["toBlocState","fun <State : Any, Proposal : Any, Model : Any, ReduxModel : Any> <ERROR CLASS><ReduxModel>.toBlocState(context: <ERROR CLASS>, select: <ERROR CLASS><ReduxModel, Model>, map: <ERROR CLASS><Model, State>): <ERROR CLASS><State, Proposal>","com.onegravity.bloc.redux.toBlocState"]},{"name":"fun <State : Any, SelectedState : Any> <ERROR CLASS><State>.select(selector: (State) -> SelectedState, onChange: (SelectedState) -> Unit): <ERROR CLASS>","description":"com.onegravity.bloc.redux.select.select","location":"bloc-redux/com.onegravity.bloc.redux.select/select.html","searchKeys":["select","fun <State : Any, SelectedState : Any> <ERROR CLASS><State>.select(selector: (State) -> SelectedState, onChange: (SelectedState) -> Unit): <ERROR CLASS>","com.onegravity.bloc.redux.select.select"]}]
