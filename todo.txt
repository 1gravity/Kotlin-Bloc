- TODO Fix Subscriber extension functions aren't published...
- TODO implement Subscriber tests
- TODO fix the theming

- TODO implements Bloc tests with initializer, reducer, thunk, side effect
- TODO implements BlocState tests
- TODO implements all the other tests

- TODO think about composition of blocs, one for ui state, one for domain logic?

- TODO replace the buildSrc with a composite build so we don't need to maintain separate versions
       for dependencies
- TODO document the behavior of the collect function, some states can be dropped
- TODO create an FAQ
- TODO think about the initial value, who/what provides it? should be have a mechanism to populate
       the BlocState upon start? especially ReduxBlocState has TWO initial values (one for the
       ReduxStore and one in the BlocState)
       how about using the redux mechanism using an ActionTypes.INIT to initialize state?
- TODO are side effects sufficient for navigation? should the framework include a navigation
       component like Decompose does? we can also just use reducers instead of side effects.
- TODO Action / Redux style vs. Function style (extensions to BlocOwner), the latter requires some
       component / class like the PostsComponent / PostsComponentImpl class so we can use functions
       in iOS too. Come up with a solution that combines both styles for Android and iOS without
       the need for a "container" component.
- TODO time travel + debugger
- TODO implement `sideEffects` in the Bloc DSL to allow emission of multiple side effects
       (`sideEffect` allows only a single side effect)
- TODO compiler plugin to have compile-time checks when building Blocs and BlocStates
