"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7838],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1987:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return u}});var r=n(3117),a=(n(7294),n(3905));const o={id:"redux_bloc_state",title:"Redux Bloc State",sidebar_label:"Redux Bloc State",hide_title:!0},i=void 0,l={unversionedId:"extensions/redux/redux_bloc_state",id:"extensions/redux/redux_bloc_state",title:"Redux Bloc State",description:"ReduxBlocState",source:"@site/docs/extensions/redux/redux_bloc_state.md",sourceDirName:"extensions/redux",slug:"/extensions/redux/redux_bloc_state",permalink:"/Kotlin-Bloc/docs/extensions/redux/redux_bloc_state",draft:!1,tags:[],version:"current",frontMatter:{id:"redux_bloc_state",title:"Redux Bloc State",sidebar_label:"Redux Bloc State",hide_title:!0},sidebar:"extensionsSidebar",previous:{title:"Setup",permalink:"/Kotlin-Bloc/docs/extensions/redux/redux_setup"}},c={},u=[{value:"ReduxBlocState",id:"reduxblocstate",level:2},{value:"Building ReduxBlocState",id:"building-reduxblocstate",level:3}],s={toc:u};function d(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"reduxblocstate"},"ReduxBlocState"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Bloc Redux",src:n(6373).Z,width:"2776",height:"858"})),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ReduxBlocState")," is a ",(0,a.kt)("inlineCode",{parentName:"p"},"BlocState"),' with some "superpowers":'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Proposals")," are dispatched to the Redux store without modification -> ",(0,a.kt)("inlineCode",{parentName:"li"},"Proposals")," are the ",(0,a.kt)("a",{parentName:"li",href:"https://redux.js.org/tutorials/fundamentals/part-3-state-actions-reducers"},"Redux actions")),(0,a.kt)("li",{parentName:"ul"},"a selector function selects sub state from the global state tree -> ",(0,a.kt)("inlineCode",{parentName:"li"},"ReduxModel")),(0,a.kt)("li",{parentName:"ul"},"a mapper function maps the selected sub state / ",(0,a.kt)("inlineCode",{parentName:"li"},"ReduxModel")," to bloc ",(0,a.kt)("inlineCode",{parentName:"li"},"State")," ")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Combining Redux with ",(0,a.kt)("inlineCode",{parentName:"p"},"Kotlin Bloc")," can mean more than using the store as a global state container. We can leverage all the Redux functionality the library has to offer, e.g.:"),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"when ",(0,a.kt)("inlineCode",{parentName:"li"},"Proposals")," are dispatched to the Redux store, they can be processed directly or go through middleware (e.g. thunk-middleware) before state is altered"),(0,a.kt)("li",{parentName:"ul"},"the store can have its own reducers that work in conjunction with the Bloc reducers"),(0,a.kt)("li",{parentName:"ul"},"state can be altered by dispatching actions directly to the store"))),(0,a.kt)("h3",{id:"building-reduxblocstate"},"Building ReduxBlocState"),(0,a.kt)("p",null,"Like for regular ",(0,a.kt)("inlineCode",{parentName:"p"},"BlocState"),", there's also a builder for ",(0,a.kt)("inlineCode",{parentName:"p"},"ReduxBlocState")," although the builder itself is used only internally. To create a ReduxBlocState there's an extension function ",(0,a.kt)("inlineCode",{parentName:"p"},"toBlocState()"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"val blocState = reduxStore.toBlocState(\n    context = context,\n    select = { reduxModel ->  reduxModel.counter },\n    map = { model -> model.count }\n)\n")),(0,a.kt)("p",null,"To use a Redux store as ",(0,a.kt)("inlineCode",{parentName:"p"},"BlocState"),", create the store first, then call ",(0,a.kt)("inlineCode",{parentName:"p"},"toBlocState()")," providing the ",(0,a.kt)("inlineCode",{parentName:"p"},"BlocContext"),", a ",(0,a.kt)("inlineCode",{parentName:"p"},"select")," and a ",(0,a.kt)("inlineCode",{parentName:"p"},"map")," function.  "),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ReduxBlocState")," built above can be used like any regular ",(0,a.kt)("inlineCode",{parentName:"p"},"BlocState")," when creating a ",(0,a.kt)("inlineCode",{parentName:"p"},"Bloc"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"bloc<Int, Action, Nothing, ReduxAction>(context, blocState) {\n    // reducer, thunks etc.\n}\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"BlocContext")," is needed because ",(0,a.kt)("inlineCode",{parentName:"p"},"ReduxBlocState")," subscribes to the Redux store and needs to unsubscribe when the bloc is destroyed (see also ",(0,a.kt)("a",{parentName:"p",href:"./redux_setup#reselect"},"Reselect"),").")))}d.isMDXComponent=!0},6373:function(e,t,n){t.Z=n.p+"assets/images/Bloc Architecture - ReduxBlocState-cff50002c2e01e90efb99137ba716b4c.svg"}}]);