"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[761],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return n?o.createElement(h,i(i({ref:t},p),{},{components:n})):o.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8393:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var o=n(7462),a=n(3366),r=(n(7294),n(3905)),i=["components"],s={id:"books",title:"Books",sidebar_label:"Books",hide_title:!0},l=void 0,c={unversionedId:"examples/books",id:"examples/books",title:"Books",description:"Books",source:"@site/docs/examples/books.md",sourceDirName:"examples",slug:"/examples/books",permalink:"/Kotlin-Bloc/docs/examples/books",draft:!1,tags:[],version:"current",frontMatter:{id:"books",title:"Books",sidebar_label:"Books",hide_title:!0},sidebar:"exampleSidebar",previous:{title:"Counter",permalink:"/Kotlin-Bloc/docs/examples/counter"},next:{title:"Calculator",permalink:"/Kotlin-Bloc/docs/examples/calculator"}},p={},d=[{value:"Books",id:"books",level:2},{value:"Share State",id:"share-state",level:3},{value:"Asynchronous Code",id:"asynchronous-code",level:3}],u={toc:d};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"books"},"Books"),(0,r.kt)("p",null,"The books sample apps (taken from ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/genaku/Reduce"},"Reduce"),"), demonstrates:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"how to share ",(0,r.kt)("inlineCode",{parentName:"li"},"BlocState")," between ",(0,r.kt)("inlineCode",{parentName:"li"},"Blocs")),(0,r.kt)("li",{parentName:"ul"},"how to run asynchronous code")),(0,r.kt)("h3",{id:"share-state"},"Share State"),(0,r.kt)("p",null,"One advantage of separating the business logic component (",(0,r.kt)("inlineCode",{parentName:"p"},"Bloc"),") from the actual state holder (",(0,r.kt)("inlineCode",{parentName:"p"},"BlocState"),") is that the latter can be shared by multiple blocs.\nThe books example "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"// define the shared state\nprivate val commonState = blocState<BookState>(BookState.Empty)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"// first Bloc to use the commonState\nprivate val clearBloc = bloc<BookState, BookAction.Clear>(\n  context, \n  commonState\n) {\n  // business logic\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"// second Bloc to use the commonState\nprivate val loadBloc = bloc<BookState, BookAction>(\n  context, \n  commonState\n) {\n  // business logic\n}\n")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Since both blocs share the same state, only one of them needs to be observed by the view (they expose the same state):"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"val observable = loadBloc.toObservable()\n")))),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If the blocs had side effects, they would not be shared and thus an observer needed to observe both blocs."))),(0,r.kt)("h3",{id:"asynchronous-code"},"Asynchronous Code"),(0,r.kt)("p",null,"The example uses a ",(0,r.kt)("a",{parentName:"p",href:"/Kotlin-Bloc/docs/architecture/bloc/thunk"},"Thunk"),' to load the data "asynchronously" (the repository uses ',(0,r.kt)("inlineCode",{parentName:"p"},"delay()")," to simulate an asynchronous call):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"thunk<BookAction.Load> {\n  dispatch(BookAction.Loading)\n  val nextAction = repository.loadBooks().toAction()\n  dispatch(nextAction)\n}\n\nreduce<BookAction.Loading> { BookState.Loading }\nreduce<BookAction.LoadComplete> { action.result.toState() }\n")),(0,r.kt)("p",null,"The code shows a typical pattern for thunks:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},'it dispatches a loading action which a reducer reduces to some "loading" state'),(0,r.kt)("li",{parentName:"ol"},"it executes an asynchronous operation"),(0,r.kt)("li",{parentName:"ol"},"it dispatches an action with the result of that asynchronous operation which will result in another state update by a reducer ")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Reducers are suspended functions as well and also have access to a CoroutineScope so reducers can theoretically run asynchronous code as well. While there's nothing preventing you from doing that, don't:"),(0,r.kt)("ol",{parentName:"div"},(0,r.kt)("li",{parentName:"ol"},"A thunk's purpose is to run asynchronous code, a reducer's purpose is to reduce state based on ui events. Trying to use a component for something they aren't built for, will inevitably lead to problems."),(0,r.kt)("li",{parentName:"ol"},"Reducers run sequentially. Consequentially this will update the state to ",(0,r.kt)("inlineCode",{parentName:"li"},"SomeState")," first before processing ",(0,r.kt)("inlineCode",{parentName:"li"},"SomeAction"),":")),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"reduce {\n  bloc.send(<SomeAction>)\n  <SomeState>\n}\n")),(0,r.kt)("ol",{parentName:"div",start:3},(0,r.kt)("li",{parentName:"ol"},"Reducers expect ",(0,r.kt)("inlineCode",{parentName:"li"},"State")," as return value. You can theoretically do something like this:")),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"withContext(coroutineScope.coroutineContext) {\n  // do asynchronous stuff\n  BookState.Loading\n}\n")),(0,r.kt)("p",{parentName:"div"},"or:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"coroutineScope.async {\n // do asynchronous stuff\n BookState.Loading\n}.await()\n")),(0,r.kt)("p",{parentName:"div"},"The ui however is waiting for a state update in response to some user interaction (responsiveness) -> this is an anti-pattern."))))}m.isMDXComponent=!0}}]);