"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4381],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=s(n),f=r,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||i;return n?o.createElement(m,l(l({ref:t},p),{},{components:n})):o.createElement(m,l({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:r,l[1]=a;for(var s=2;s<i;s++)l[s]=n[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7553:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return i},metadata:function(){return a},toc:function(){return s}});var o=n(3117),r=(n(7294),n(3905));const i={id:"ios_bloc_holder",title:"Bloc Holder",sidebar_label:"Bloc Holder",hide_title:!0},l=void 0,a={unversionedId:"extensions/ios/ios_bloc_holder",id:"extensions/ios/ios_bloc_holder",title:"Bloc Holder",description:"BlocHolder",source:"@site/docs/extensions/ios/bloc_holder.md",sourceDirName:"extensions/ios",slug:"/extensions/ios/ios_bloc_holder",permalink:"/Kotlin-Bloc/docs/extensions/ios/ios_bloc_holder",draft:!1,tags:[],version:"current",frontMatter:{id:"ios_bloc_holder",title:"Bloc Holder",sidebar_label:"Bloc Holder",hide_title:!0},sidebar:"extensionsSidebar",previous:{title:"Overview",permalink:"/Kotlin-Bloc/docs/extensions/ios/ios_overview"},next:{title:"Bloc Component",permalink:"/Kotlin-Bloc/docs/extensions/ios/ios_bloc_component"}},c={},s=[{value:"BlocHolder",id:"blocholder",level:2}],p={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"blocholder"},"BlocHolder"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/1gravity/Kotlin-Bloc/blob/master/iosApp/iosApp/utils/BlocHolder.swift"},"BlocHolder")," is the iOS equivalent of ",(0,r.kt)("a",{parentName:"p",href:"/Kotlin-Bloc/docs/extensions/android/android_bloc_context#activityfragment"},"getOrCreate()")," on Android:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"it creates a ",(0,r.kt)("inlineCode",{parentName:"li"},"BlocContext"),' with a lifecycle tied to the "lifecycle" of the ',(0,r.kt)("inlineCode",{parentName:"li"},"BlocHolder")," object itself"),(0,r.kt)("li",{parentName:"ul"},"it calls a factory method with the ",(0,r.kt)("inlineCode",{parentName:"li"},"BlocContext")," as parameter in order to create the ",(0,r.kt)("inlineCode",{parentName:"li"},"Bloc")),(0,r.kt)("li",{parentName:"ul"},"it exposes the ",(0,r.kt)("inlineCode",{parentName:"li"},"Bloc")," and the lifecycle as properties")),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"struct CalculatorView: View {\n    private let holder = BlocHolder { CalculatorKt.bloc(context: $0) }\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"The lifecycle is tied to the lifecycle of the ",(0,r.kt)("inlineCode",{parentName:"p"},"BlocHolder")," object itself. Unfortunately that means that you need to keep an explicit reference to that object like in the example above."),(0,r.kt)("p",{parentName:"admonition"},"It's not good enough to create the ",(0,r.kt)("inlineCode",{parentName:"p"},"BlocHolder")," and only keep a reference to the bloc and/or the lifecycle. The wrapper class (that is the ",(0,r.kt)("inlineCode",{parentName:"p"},"BlocHolder"),") will be removed from memory eventually, even if the bloc is still in use. When that happens the bloc will be stopped/destroyed prematurely."),(0,r.kt)("p",{parentName:"admonition"},"Experiments with tying the lifecycle to a ",(0,r.kt)("inlineCode",{parentName:"p"},"View")," e.g. by using ",(0,r.kt)("inlineCode",{parentName:"p"},"onAppear()")," / ",(0,r.kt)("inlineCode",{parentName:"p"},"onDisappear()"),", didn't yield the expected results.")))}d.isMDXComponent=!0}}]);