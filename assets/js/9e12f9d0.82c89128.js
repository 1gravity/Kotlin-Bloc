"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[204],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(r),f=a,d=m["".concat(s,".").concat(f)]||m[f]||u[f]||i;return r?n.createElement(d,o(o({ref:t},p),{},{components:r})):n.createElement(d,o({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9076:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],l={id:"overview",title:"Overview",sidebar_label:"Overview",hide_title:!0},s="Overview",c={unversionedId:"getting_started/overview",id:"getting_started/overview",title:"Overview",description:"Kotlin BLoC is a Multiplatform UI framework combining the best of MVI, MVVM and SAM. It's",source:"@site/docs/getting_started/overview.md",sourceDirName:"getting_started",slug:"/getting_started/overview",permalink:"/Kotlin-Bloc/docs/getting_started/overview",draft:!1,tags:[],version:"current",frontMatter:{id:"overview",title:"Overview",sidebar_label:"Overview",hide_title:!0},sidebar:"gettingStartedSidebar",next:{title:"Setup",permalink:"/Kotlin-Bloc/docs/getting_started/setup"}},p={},u=[],m={toc:u};function f(e){var t=e.components,l=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"overview"},"Overview"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Kotlin BLoC")," is a Multiplatform UI framework combining the best of MVI, MVVM and ",(0,i.kt)("a",{parentName:"p",href:"https://sam.js.org/"},"SAM"),". It's "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"simple"),": designed from the ground up for simplicity with a super concise syntax"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"adaptable"),": supports different programming styles"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"predictable"),": write reactive applications that behave consistently and are easy to debug and test"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"composable"),": grows with the complexity of app and the size of the team")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Bloc Architecture - Overview",src:r(8564).Z,width:"1595",height:"982"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("strong",{parentName:"li"},"Bloc")," (Business Logic Component) encapsulates your application's business logic. It receives ",(0,i.kt)("strong",{parentName:"li"},"Action(s)")," from the view, processes those actions and outputs ",(0,i.kt)("strong",{parentName:"li"},"Proposals")," and optionally ",(0,i.kt)("strong",{parentName:"li"},"SideEffect(s)"),"."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("strong",{parentName:"li"},"BlocState")," holds the component's ",(0,i.kt)("strong",{parentName:"li"},"State"),". It's separate from the actual Bloc to support different scenarios like:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"share state between business logic components"),(0,i.kt)("li",{parentName:"ul"},"persist state (database, network)"),(0,i.kt)("li",{parentName:"ul"},"use a global state container like Redux")))))}f.isMDXComponent=!0},8564:function(e,t,r){t.Z=r.p+"assets/images/BLoC Architecture - BLoC Overview-a1d57721f285c1f191d386c96d6ea69d.svg"}}]);