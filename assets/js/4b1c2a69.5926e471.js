"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1622],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),s=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return n?o.createElement(f,a(a({ref:t},p),{},{components:n})):o.createElement(f,a({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6018:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return m}});var o=n(7462),r=n(3366),i=(n(7294),n(3905)),a=["components"],c={id:"ios_bloc_component",title:"Bloc Component",sidebar_label:"Bloc Component",hide_title:!0},l=void 0,s={unversionedId:"extensions/ios/ios_bloc_component",id:"extensions/ios/ios_bloc_component",title:"Bloc Component",description:"BlocComponent",source:"@site/docs/extensions/ios/bloc_component.md",sourceDirName:"extensions/ios",slug:"/extensions/ios/ios_bloc_component",permalink:"/Kotlin-Bloc/docs/extensions/ios/ios_bloc_component",draft:!1,tags:[],version:"current",frontMatter:{id:"ios_bloc_component",title:"Bloc Component",sidebar_label:"Bloc Component",hide_title:!0},sidebar:"extensionsSidebar",previous:{title:"Bloc Holder",permalink:"/Kotlin-Bloc/docs/extensions/ios/ios_bloc_holder"},next:{title:"Bloc Observer",permalink:"/Kotlin-Bloc/docs/extensions/ios/ios_bloc_observer"}},p={},m=[{value:"BlocComponent",id:"bloccomponent",level:2}],u={toc:m};function d(e){var t=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"bloccomponent"},"BlocComponent"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/1gravity/Kotlin-Bloc/blob/master/iosApp/iosApp/utils/BlocComponent.swift"},"BlocComponent")," class is very similar to ",(0,i.kt)("inlineCode",{parentName:"p"},"BlocHolder"),". The only difference is that the latter always wraps a ",(0,i.kt)("inlineCode",{parentName:"p"},"Bloc")," while the former wraps an arbitrary component that needs a ",(0,i.kt)("inlineCode",{parentName:"p"},"BlocContext")," to be instantiated, e.g.:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"struct PostListView: View {\n    private let component = BlocComponent<PostsComponent> { PostsComponentImpl(context: $0) }\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"class PostsComponentImpl(context: BlocContext) {\n\n    val bloc by lazy {\n        bloc<PostsRootState, PostsAction>(context, blocState) {\n            // build the bloc\n        }\n    }\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"In both cases the generic types will be preserved.\nIn the case of a ",(0,i.kt)("inlineCode",{parentName:"p"},"BlocHolder"),", the ",(0,i.kt)("inlineCode",{parentName:"p"},"BlocHolder")," itself declares the generic types (and also the bloc it wraps).\nIn the case of a ",(0,i.kt)("inlineCode",{parentName:"p"},"BlocComponent"),", the wrapped component or rather the bloc it contains declares the generic types."))))}d.isMDXComponent=!0}}]);