"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[204],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),f=i,d=m["".concat(s,".").concat(f)]||m[f]||u[f]||a;return n?r.createElement(d,o(o({ref:t},p),{},{components:n})):r.createElement(d,o({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9076:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],l={id:"overview",title:"Overview",sidebar_label:"Overview",hide_title:!0},s="Overview",c={unversionedId:"getting_started/overview",id:"getting_started/overview",title:"Overview",description:"Kotlin Bloc is a Multiplatform UI framework combining the best of MVI, MVVM and SAM. It's",source:"@site/docs/getting_started/overview.md",sourceDirName:"getting_started",slug:"/getting_started/overview",permalink:"/Kotlin-Bloc/docs/getting_started/overview",draft:!1,tags:[],version:"current",frontMatter:{id:"overview",title:"Overview",sidebar_label:"Overview",hide_title:!0},sidebar:"gettingStartedSidebar",next:{title:"Setup",permalink:"/Kotlin-Bloc/docs/getting_started/setup"}},p={},u=[],m={toc:u};function f(e){var t=e.components,l=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"overview"},"Overview"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Kotlin Bloc")," is a Multiplatform UI framework combining the best of MVI, MVVM and ",(0,a.kt)("a",{parentName:"p",href:"https://sam.js.org/"},"SAM"),". It's "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"simple"),": designed from the ground up for simplicity with a super concise syntax"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"adaptable"),": supports different programming styles (MVI, MVVM+, Redux...)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"predictable"),": write reactive applications that behave consistently and are easy to debug and test"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"composable"),": grows with the complexity of app and the size of the team")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Bloc Architecture - Overview",src:n(2131).Z,width:"1595",height:"982"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"Bloc")," (Business Logic Component) encapsulates the application's business logic. It receives ",(0,a.kt)("inlineCode",{parentName:"li"},"Action(s)")," from the view, processes those actions and outputs ",(0,a.kt)("inlineCode",{parentName:"li"},"Proposals")," and optionally ",(0,a.kt)("inlineCode",{parentName:"li"},"SideEffect(s)"),"."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"BlocState")," holds the component's ",(0,a.kt)("inlineCode",{parentName:"li"},"State"),". It's separate from the actual ",(0,a.kt)("inlineCode",{parentName:"li"},"Bloc")," to support different scenarios like:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"share state between business logic components"),(0,a.kt)("li",{parentName:"ul"},"persist state (database, network)"),(0,a.kt)("li",{parentName:"ul"},"use a global state container like Redux")))))}f.isMDXComponent=!0},2131:function(e,t,n){t.Z=n.p+"assets/images/Bloc Architecture - Bloc Overview-b26fa075737aadf3f3553a44d8d9c0e4.svg"}}]);