[{"name":"abstract fun isChanged(): Boolean","description":"com.onegravity.bloc.redux.select.Selector.isChanged","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector/is-changed.html","searchKeys":["isChanged","abstract fun isChanged(): Boolean","com.onegravity.bloc.redux.select.Selector.isChanged"]},{"name":"abstract fun map(mapper: <ERROR CLASS><Model, State>)","description":"com.onegravity.bloc.redux.ReduxBlocStateBuilder.map","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/-redux-bloc-state-builder/map.html","searchKeys":["map","abstract fun map(mapper: <ERROR CLASS><Model, State>)","com.onegravity.bloc.redux.ReduxBlocStateBuilder.map"]},{"name":"abstract fun memoize(state: Any, vararg inputs: SelectorInput<Any, Any>): T","description":"com.onegravity.bloc.redux.select.Memoizer.memoize","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-memoizer/memoize.html","searchKeys":["memoize","abstract fun memoize(state: Any, vararg inputs: SelectorInput<Any, Any>): T","com.onegravity.bloc.redux.select.Memoizer.memoize"]},{"name":"abstract fun resetChanged()","description":"com.onegravity.bloc.redux.select.Selector.resetChanged","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector/reset-changed.html","searchKeys":["resetChanged","abstract fun resetChanged()","com.onegravity.bloc.redux.select.Selector.resetChanged"]},{"name":"abstract fun select(selector: <ERROR CLASS><ReduxModel, Model>)","description":"com.onegravity.bloc.redux.ReduxBlocStateBuilder.select","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/-redux-bloc-state-builder/select.html","searchKeys":["select","abstract fun select(selector: <ERROR CLASS><ReduxModel, Model>)","com.onegravity.bloc.redux.ReduxBlocStateBuilder.select"]},{"name":"abstract fun signalChanged()","description":"com.onegravity.bloc.redux.select.Selector.signalChanged","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector/signal-changed.html","searchKeys":["signalChanged","abstract fun signalChanged()","com.onegravity.bloc.redux.select.Selector.signalChanged"]},{"name":"abstract operator fun invoke(state: S): I","description":"com.onegravity.bloc.redux.select.SelectorInput.invoke","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector-input/invoke.html","searchKeys":["invoke","abstract operator fun invoke(state: S): I","com.onegravity.bloc.redux.select.SelectorInput.invoke"]},{"name":"abstract val equalityCheck: EqualityCheckFn","description":"com.onegravity.bloc.redux.select.SelectorInput.equalityCheck","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector-input/equality-check.html","searchKeys":["equalityCheck","abstract val equalityCheck: EqualityCheckFn","com.onegravity.bloc.redux.select.SelectorInput.equalityCheck"]},{"name":"abstract val recomputations: Long","description":"com.onegravity.bloc.redux.select.Selector.recomputations","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector/recomputations.html","searchKeys":["recomputations","abstract val recomputations: Long","com.onegravity.bloc.redux.select.Selector.recomputations"]},{"name":"fun <I : Any> withSingleField(fn: S.() -> I): AbstractSelector<S, I>","description":"com.onegravity.bloc.redux.select.SelectorBuilder.withSingleField","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector-builder/with-single-field.html","searchKeys":["withSingleField","fun <I : Any> withSingleField(fn: S.() -> I): AbstractSelector<S, I>","com.onegravity.bloc.redux.select.SelectorBuilder.withSingleField"]},{"name":"fun <I : Any> withSingleFieldByValue(fn: S.() -> I): AbstractSelector<S, I>","description":"com.onegravity.bloc.redux.select.SelectorBuilder.withSingleFieldByValue","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector-builder/with-single-field-by-value.html","searchKeys":["withSingleFieldByValue","fun <I : Any> withSingleFieldByValue(fn: S.() -> I): AbstractSelector<S, I>","com.onegravity.bloc.redux.select.SelectorBuilder.withSingleFieldByValue"]},{"name":"fun <Proposal : Any> build(disposableScope: <ERROR CLASS>, store: <ERROR CLASS><ReduxModel>): ReduxBlocState<State, Proposal, Model, ReduxModel>","description":"com.onegravity.bloc.redux.ReduxBlocStateBuilderImpl.build","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/-redux-bloc-state-builder-impl/build.html","searchKeys":["build","fun <Proposal : Any> build(disposableScope: <ERROR CLASS>, store: <ERROR CLASS><ReduxModel>): ReduxBlocState<State, Proposal, Model, ReduxModel>","com.onegravity.bloc.redux.ReduxBlocStateBuilderImpl.build"]},{"name":"fun <S, I> InputField(fn: S.() -> I, equalityCheck: EqualityCheckFn)","description":"com.onegravity.bloc.redux.select.InputField.InputField","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-input-field/-input-field.html","searchKeys":["InputField","fun <S, I> InputField(fn: S.() -> I, equalityCheck: EqualityCheckFn)","com.onegravity.bloc.redux.select.InputField.InputField"]},{"name":"fun <SelectedState : Any> select(selector: (State) -> SelectedState, action: (SelectedState) -> Unit)","description":"com.onegravity.bloc.redux.select.SelectorSubscriberBuilder.select","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector-subscriber-builder/select.html","searchKeys":["select","fun <SelectedState : Any> select(selector: (State) -> SelectedState, action: (SelectedState) -> Unit)","com.onegravity.bloc.redux.select.SelectorSubscriberBuilder.select"]},{"name":"fun <State : Any, Model : Any, ReduxModel : Any> ReduxBlocState(disposableScope: <ERROR CLASS>, store: <ERROR CLASS><ReduxModel>, select: <ERROR CLASS><ReduxModel, Model>, map: <ERROR CLASS><Model, State>)","description":"com.onegravity.bloc.redux.ReduxBlocState.ReduxBlocState","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/-redux-bloc-state/-redux-bloc-state.html","searchKeys":["ReduxBlocState","fun <State : Any, Model : Any, ReduxModel : Any> ReduxBlocState(disposableScope: <ERROR CLASS>, store: <ERROR CLASS><ReduxModel>, select: <ERROR CLASS><ReduxModel, Model>, map: <ERROR CLASS><Model, State>)","com.onegravity.bloc.redux.ReduxBlocState.ReduxBlocState"]},{"name":"fun <State : Any, Proposal : Any, Model : Any, ReduxModel : Any> <ERROR CLASS><ReduxModel>.toBlocState(context: <ERROR CLASS>, select: <ERROR CLASS><ReduxModel, Model>, map: <ERROR CLASS><Model, State>): <ERROR CLASS><State, Proposal>","description":"com.onegravity.bloc.redux.toBlocState","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/to-bloc-state.html","searchKeys":["toBlocState","fun <State : Any, Proposal : Any, Model : Any, ReduxModel : Any> <ERROR CLASS><ReduxModel>.toBlocState(context: <ERROR CLASS>, select: <ERROR CLASS><ReduxModel, Model>, map: <ERROR CLASS><Model, State>): <ERROR CLASS><State, Proposal>","com.onegravity.bloc.redux.toBlocState"]},{"name":"fun <State : Any, SelectedState : Any> <ERROR CLASS><State>.select(selector: (State) -> SelectedState, onChange: (SelectedState) -> Unit): <ERROR CLASS>","description":"com.onegravity.bloc.redux.select.select","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/select.html","searchKeys":["select","fun <State : Any, SelectedState : Any> <ERROR CLASS><State>.select(selector: (State) -> SelectedState, onChange: (SelectedState) -> Unit): <ERROR CLASS>","com.onegravity.bloc.redux.select.select"]},{"name":"fun <State : Any> SelectorSubscriberBuilder(store: <ERROR CLASS><State>)","description":"com.onegravity.bloc.redux.select.SelectorSubscriberBuilder.SelectorSubscriberBuilder","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector-subscriber-builder/-selector-subscriber-builder.html","searchKeys":["SelectorSubscriberBuilder","fun <State : Any> SelectorSubscriberBuilder(store: <ERROR CLASS><State>)","com.onegravity.bloc.redux.select.SelectorSubscriberBuilder.SelectorSubscriberBuilder"]},{"name":"fun AbstractSelector()","description":"com.onegravity.bloc.redux.select.AbstractSelector.AbstractSelector","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-abstract-selector/-abstract-selector.html","searchKeys":["AbstractSelector","fun AbstractSelector()","com.onegravity.bloc.redux.select.AbstractSelector.AbstractSelector"]},{"name":"fun ReduxBlocStateBuilderImpl()","description":"com.onegravity.bloc.redux.ReduxBlocStateBuilderImpl.ReduxBlocStateBuilderImpl","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/-redux-bloc-state-builder-impl/-redux-bloc-state-builder-impl.html","searchKeys":["ReduxBlocStateBuilderImpl","fun ReduxBlocStateBuilderImpl()","com.onegravity.bloc.redux.ReduxBlocStateBuilderImpl.ReduxBlocStateBuilderImpl"]},{"name":"fun SelectorBuilder()","description":"com.onegravity.bloc.redux.select.SelectorBuilder.SelectorBuilder","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector-builder/-selector-builder.html","searchKeys":["SelectorBuilder","fun SelectorBuilder()","com.onegravity.bloc.redux.select.SelectorBuilder.SelectorBuilder"]},{"name":"fun withAnyChange(f: () -> Unit)","description":"com.onegravity.bloc.redux.select.SelectorSubscriberBuilder.withAnyChange","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector-subscriber-builder/with-any-change.html","searchKeys":["withAnyChange","fun withAnyChange(f: () -> Unit)","com.onegravity.bloc.redux.select.SelectorSubscriberBuilder.withAnyChange"]},{"name":"internal abstract class AbstractSelector<S, O> : Selector<S, O> ","description":"com.onegravity.bloc.redux.select.AbstractSelector","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-abstract-selector/index.html","searchKeys":["AbstractSelector","internal abstract class AbstractSelector<S, O> : Selector<S, O> ","com.onegravity.bloc.redux.select.AbstractSelector"]},{"name":"internal class InputField<S, I>(fn: S.() -> I, equalityCheck: EqualityCheckFn) : SelectorInput<S, I> ","description":"com.onegravity.bloc.redux.select.InputField","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-input-field/index.html","searchKeys":["InputField","internal class InputField<S, I>(fn: S.() -> I, equalityCheck: EqualityCheckFn) : SelectorInput<S, I> ","com.onegravity.bloc.redux.select.InputField"]},{"name":"internal class ReduxBlocState<State : Any, Proposal : Any, Model : Any, ReduxModel : Any>(disposableScope: <ERROR CLASS>, store: <ERROR CLASS><ReduxModel>, select: <ERROR CLASS><ReduxModel, Model>, map: <ERROR CLASS><Model, State>)","description":"com.onegravity.bloc.redux.ReduxBlocState","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/-redux-bloc-state/index.html","searchKeys":["ReduxBlocState","internal class ReduxBlocState<State : Any, Proposal : Any, Model : Any, ReduxModel : Any>(disposableScope: <ERROR CLASS>, store: <ERROR CLASS><ReduxModel>, select: <ERROR CLASS><ReduxModel, Model>, map: <ERROR CLASS><Model, State>)","com.onegravity.bloc.redux.ReduxBlocState"]},{"name":"internal class ReduxBlocStateBuilderImpl<State : Any, Model : Any, ReduxModel : Any> : ReduxBlocStateBuilder<State, Model, ReduxModel> ","description":"com.onegravity.bloc.redux.ReduxBlocStateBuilderImpl","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/-redux-bloc-state-builder-impl/index.html","searchKeys":["ReduxBlocStateBuilderImpl","internal class ReduxBlocStateBuilderImpl<State : Any, Model : Any, ReduxModel : Any> : ReduxBlocStateBuilder<State, Model, ReduxModel> ","com.onegravity.bloc.redux.ReduxBlocStateBuilderImpl"]},{"name":"internal class SelectorBuilder<S : Any>","description":"com.onegravity.bloc.redux.select.SelectorBuilder","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector-builder/index.html","searchKeys":["SelectorBuilder","internal class SelectorBuilder<S : Any>","com.onegravity.bloc.redux.select.SelectorBuilder"]},{"name":"internal class SelectorSubscriberBuilder<State : Any>(store: <ERROR CLASS><State>)","description":"com.onegravity.bloc.redux.select.SelectorSubscriberBuilder","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector-subscriber-builder/index.html","searchKeys":["SelectorSubscriberBuilder","internal class SelectorSubscriberBuilder<State : Any>(store: <ERROR CLASS><State>)","com.onegravity.bloc.redux.select.SelectorSubscriberBuilder"]},{"name":"internal fun <State : Any, Proposal : Any, Model : Any, ReduxModel : Any> reduxBlocState(disposableScope: <ERROR CLASS>, store: <ERROR CLASS><ReduxModel>, block: ReduxBlocStateBuilder<State, Model, ReduxModel>.() -> Unit): <ERROR CLASS><State, Proposal>","description":"com.onegravity.bloc.redux.reduxBlocState","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/redux-bloc-state.html","searchKeys":["reduxBlocState","internal fun <State : Any, Proposal : Any, Model : Any, ReduxModel : Any> reduxBlocState(disposableScope: <ERROR CLASS>, store: <ERROR CLASS><ReduxModel>, block: ReduxBlocStateBuilder<State, Model, ReduxModel>.() -> Unit): <ERROR CLASS><State, Proposal>","com.onegravity.bloc.redux.reduxBlocState"]},{"name":"internal fun <State : Any, SelectedState : Any> <ERROR CLASS>.selectScoped(store: <ERROR CLASS><State>, select: (State) -> SelectedState, block: (SelectedState) -> Unit)","description":"com.onegravity.bloc.redux.selectScoped","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/select-scoped.html","searchKeys":["selectScoped","internal fun <State : Any, SelectedState : Any> <ERROR CLASS>.selectScoped(store: <ERROR CLASS><State>, select: (State) -> SelectedState, block: (SelectedState) -> Unit)","com.onegravity.bloc.redux.selectScoped"]},{"name":"internal fun <State : Any, SelectedState : Any> <ERROR CLASS><State>.selectScoped(disposableScope: <ERROR CLASS>, select: (State) -> SelectedState, block: (SelectedState) -> Unit)","description":"com.onegravity.bloc.redux.selectScoped","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/select-scoped.html","searchKeys":["selectScoped","internal fun <State : Any, SelectedState : Any> <ERROR CLASS><State>.selectScoped(disposableScope: <ERROR CLASS>, select: (State) -> SelectedState, block: (SelectedState) -> Unit)","com.onegravity.bloc.redux.selectScoped"]},{"name":"internal fun <State : Any> <ERROR CLASS><State>.selectors(subscriberBuilderBlock: SelectorSubscriberBuilder<State>.() -> Unit): <ERROR CLASS>","description":"com.onegravity.bloc.redux.select.selectors","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/selectors.html","searchKeys":["selectors","internal fun <State : Any> <ERROR CLASS><State>.selectors(subscriberBuilderBlock: SelectorSubscriberBuilder<State>.() -> Unit): <ERROR CLASS>","com.onegravity.bloc.redux.select.selectors"]},{"name":"internal fun <T> computationMemoizer(computeFn: (Array<out Any>) -> T): Memoizer<T>","description":"com.onegravity.bloc.redux.select.computationMemoizer","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/computation-memoizer.html","searchKeys":["computationMemoizer","internal fun <T> computationMemoizer(computeFn: (Array<out Any>) -> T): Memoizer<T>","com.onegravity.bloc.redux.select.computationMemoizer"]},{"name":"internal fun <T> singleInputMemoizer(func: (Array<out Any>) -> T): Memoizer<T>","description":"com.onegravity.bloc.redux.select.singleInputMemoizer","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/single-input-memoizer.html","searchKeys":["singleInputMemoizer","internal fun <T> singleInputMemoizer(func: (Array<out Any>) -> T): Memoizer<T>","com.onegravity.bloc.redux.select.singleInputMemoizer"]},{"name":"internal interface Memoizer<T>","description":"com.onegravity.bloc.redux.select.Memoizer","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-memoizer/index.html","searchKeys":["Memoizer","internal interface Memoizer<T>","com.onegravity.bloc.redux.select.Memoizer"]},{"name":"internal interface ReduxBlocStateBuilder<State : Any, Model : Any, ReduxModel : Any>","description":"com.onegravity.bloc.redux.ReduxBlocStateBuilder","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/-redux-bloc-state-builder/index.html","searchKeys":["ReduxBlocStateBuilder","internal interface ReduxBlocStateBuilder<State : Any, Model : Any, ReduxModel : Any>","com.onegravity.bloc.redux.ReduxBlocStateBuilder"]},{"name":"internal interface Selector<S, O> : SelectorInput<S, O> ","description":"com.onegravity.bloc.redux.select.Selector","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector/index.html","searchKeys":["Selector","internal interface Selector<S, O> : SelectorInput<S, O> ","com.onegravity.bloc.redux.select.Selector"]},{"name":"internal interface SelectorInput<S, I>","description":"com.onegravity.bloc.redux.select.SelectorInput","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector-input/index.html","searchKeys":["SelectorInput","internal interface SelectorInput<S, I>","com.onegravity.bloc.redux.select.SelectorInput"]},{"name":"internal val byRefEqualityCheck: EqualityCheckFn","description":"com.onegravity.bloc.redux.select.byRefEqualityCheck","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/by-ref-equality-check.html","searchKeys":["byRefEqualityCheck","internal val byRefEqualityCheck: EqualityCheckFn","com.onegravity.bloc.redux.select.byRefEqualityCheck"]},{"name":"internal val byValEqualityCheck: EqualityCheckFn","description":"com.onegravity.bloc.redux.select.byValEqualityCheck","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/by-val-equality-check.html","searchKeys":["byValEqualityCheck","internal val byValEqualityCheck: EqualityCheckFn","com.onegravity.bloc.redux.select.byValEqualityCheck"]},{"name":"open fun getIfChangedIn(state: S): O?","description":"com.onegravity.bloc.redux.select.Selector.getIfChangedIn","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector/get-if-changed-in.html","searchKeys":["getIfChangedIn","open fun getIfChangedIn(state: S): O?","com.onegravity.bloc.redux.select.Selector.getIfChangedIn"]},{"name":"open fun onChangeIn(state: S, blockFn: (O) -> Unit)","description":"com.onegravity.bloc.redux.select.Selector.onChangeIn","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector/on-change-in.html","searchKeys":["onChangeIn","open fun onChangeIn(state: S, blockFn: (O) -> Unit)","com.onegravity.bloc.redux.select.Selector.onChangeIn"]},{"name":"open fun send(proposal: Proposal)","description":"com.onegravity.bloc.redux.ReduxBlocState.send","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/-redux-bloc-state/send.html","searchKeys":["send","open fun send(proposal: Proposal)","com.onegravity.bloc.redux.ReduxBlocState.send"]},{"name":"open operator override fun invoke(state: S): I","description":"com.onegravity.bloc.redux.select.InputField.invoke","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-input-field/invoke.html","searchKeys":["invoke","open operator override fun invoke(state: S): I","com.onegravity.bloc.redux.select.InputField.invoke"]},{"name":"open override fun isChanged(): Boolean","description":"com.onegravity.bloc.redux.select.AbstractSelector.isChanged","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-abstract-selector/is-changed.html","searchKeys":["isChanged","open override fun isChanged(): Boolean","com.onegravity.bloc.redux.select.AbstractSelector.isChanged"]},{"name":"open override fun map(mapper: <ERROR CLASS><Model, State>)","description":"com.onegravity.bloc.redux.ReduxBlocStateBuilderImpl.map","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/-redux-bloc-state-builder-impl/map.html","searchKeys":["map","open override fun map(mapper: <ERROR CLASS><Model, State>)","com.onegravity.bloc.redux.ReduxBlocStateBuilderImpl.map"]},{"name":"open override fun resetChanged()","description":"com.onegravity.bloc.redux.select.AbstractSelector.resetChanged","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-abstract-selector/reset-changed.html","searchKeys":["resetChanged","open override fun resetChanged()","com.onegravity.bloc.redux.select.AbstractSelector.resetChanged"]},{"name":"open override fun select(selector: <ERROR CLASS><ReduxModel, Model>)","description":"com.onegravity.bloc.redux.ReduxBlocStateBuilderImpl.select","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/-redux-bloc-state-builder-impl/select.html","searchKeys":["select","open override fun select(selector: <ERROR CLASS><ReduxModel, Model>)","com.onegravity.bloc.redux.ReduxBlocStateBuilderImpl.select"]},{"name":"open override fun signalChanged()","description":"com.onegravity.bloc.redux.select.AbstractSelector.signalChanged","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-abstract-selector/signal-changed.html","searchKeys":["signalChanged","open override fun signalChanged()","com.onegravity.bloc.redux.select.AbstractSelector.signalChanged"]},{"name":"open override val equalityCheck: EqualityCheckFn","description":"com.onegravity.bloc.redux.select.InputField.equalityCheck","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-input-field/equality-check.html","searchKeys":["equalityCheck","open override val equalityCheck: EqualityCheckFn","com.onegravity.bloc.redux.select.InputField.equalityCheck"]},{"name":"open override val recomputations: Long","description":"com.onegravity.bloc.redux.select.AbstractSelector.recomputations","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-abstract-selector/recomputations.html","searchKeys":["recomputations","open override val recomputations: Long","com.onegravity.bloc.redux.select.AbstractSelector.recomputations"]},{"name":"open val memoizer: <ERROR CLASS>","description":"com.onegravity.bloc.redux.select.AbstractSelector.memoizer","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-abstract-selector/memoizer.html","searchKeys":["memoizer","open val memoizer: <ERROR CLASS>","com.onegravity.bloc.redux.select.AbstractSelector.memoizer"]},{"name":"private fun <ERROR CLASS>.disposableScope(): <ERROR CLASS>","description":"com.onegravity.bloc.redux.disposableScope","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/disposable-scope.html","searchKeys":["disposableScope","private fun <ERROR CLASS>.disposableScope(): <ERROR CLASS>","com.onegravity.bloc.redux.disposableScope"]},{"name":"private val store: <ERROR CLASS><ReduxModel>","description":"com.onegravity.bloc.redux.ReduxBlocState.store","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/-redux-bloc-state/store.html","searchKeys":["store","private val store: <ERROR CLASS><ReduxModel>","com.onegravity.bloc.redux.ReduxBlocState.store"]},{"name":"private var _mapper: <ERROR CLASS><Model, State>? = null","description":"com.onegravity.bloc.redux.ReduxBlocStateBuilderImpl._mapper","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/-redux-bloc-state-builder-impl/_mapper.html","searchKeys":["_mapper","private var _mapper: <ERROR CLASS><Model, State>? = null","com.onegravity.bloc.redux.ReduxBlocStateBuilderImpl._mapper"]},{"name":"private var _selector: <ERROR CLASS><ReduxModel, Model>? = null","description":"com.onegravity.bloc.redux.ReduxBlocStateBuilderImpl._selector","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux/-redux-bloc-state-builder-impl/_selector.html","searchKeys":["_selector","private var _selector: <ERROR CLASS><ReduxModel, Model>? = null","com.onegravity.bloc.redux.ReduxBlocStateBuilderImpl._selector"]},{"name":"protected abstract val computeAndCount: (i: Array<out Any>) -> O","description":"com.onegravity.bloc.redux.select.AbstractSelector.computeAndCount","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-abstract-selector/compute-and-count.html","searchKeys":["computeAndCount","protected abstract val computeAndCount: (i: Array<out Any>) -> O","com.onegravity.bloc.redux.select.AbstractSelector.computeAndCount"]},{"name":"protected var _recomputations: Long = 0L","description":"com.onegravity.bloc.redux.select.AbstractSelector._recomputations","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-abstract-selector/_recomputations.html","searchKeys":["_recomputations","protected var _recomputations: Long = 0L","com.onegravity.bloc.redux.select.AbstractSelector._recomputations"]},{"name":"protected var recomputationsLastChanged: Long = 0L","description":"com.onegravity.bloc.redux.select.AbstractSelector.recomputationsLastChanged","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-abstract-selector/recomputations-last-changed.html","searchKeys":["recomputationsLastChanged","protected var recomputationsLastChanged: Long = 0L","com.onegravity.bloc.redux.select.AbstractSelector.recomputationsLastChanged"]},{"name":"val fn: S.() -> I","description":"com.onegravity.bloc.redux.select.InputField.fn","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-input-field/fn.html","searchKeys":["fn","val fn: S.() -> I","com.onegravity.bloc.redux.select.InputField.fn"]},{"name":"val selectorList2: <ERROR CLASS>","description":"com.onegravity.bloc.redux.select.SelectorSubscriberBuilder.selectorList2","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector-subscriber-builder/selector-list2.html","searchKeys":["selectorList2","val selectorList2: <ERROR CLASS>","com.onegravity.bloc.redux.select.SelectorSubscriberBuilder.selectorList2"]},{"name":"val selectorList: <ERROR CLASS>","description":"com.onegravity.bloc.redux.select.SelectorSubscriberBuilder.selectorList","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector-subscriber-builder/selector-list.html","searchKeys":["selectorList","val selectorList: <ERROR CLASS>","com.onegravity.bloc.redux.select.SelectorSubscriberBuilder.selectorList"]},{"name":"val state: State","description":"com.onegravity.bloc.redux.select.SelectorSubscriberBuilder.state","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector-subscriber-builder/state.html","searchKeys":["state","val state: State","com.onegravity.bloc.redux.select.SelectorSubscriberBuilder.state"]},{"name":"val store: <ERROR CLASS><State>","description":"com.onegravity.bloc.redux.select.SelectorSubscriberBuilder.store","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector-subscriber-builder/store.html","searchKeys":["store","val store: <ERROR CLASS><State>","com.onegravity.bloc.redux.select.SelectorSubscriberBuilder.store"]},{"name":"var withAnyChangeFun: () -> Unit? = null","description":"com.onegravity.bloc.redux.select.SelectorSubscriberBuilder.withAnyChangeFun","location":"bloc-redux/-bloc -redux/com.onegravity.bloc.redux.select/-selector-subscriber-builder/with-any-change-fun.html","searchKeys":["withAnyChangeFun","var withAnyChangeFun: () -> Unit? = null","com.onegravity.bloc.redux.select.SelectorSubscriberBuilder.withAnyChangeFun"]},{"name":"abstract class Bloc<out State : Any, in Action : Any, SideEffect : Any> : BlocState<State, Action> ","description":"com.onegravity.bloc.Bloc","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc/index.html","searchKeys":["Bloc","abstract class Bloc<out State : Any, in Action : Any, SideEffect : Any> : BlocState<State, Action> ","com.onegravity.bloc.Bloc"]},{"name":"abstract class BlocObservable<out State : Any, out SideEffect : Any>","description":"com.onegravity.bloc.BlocObservable","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc-observable/index.html","searchKeys":["BlocObservable","abstract class BlocObservable<out State : Any, out SideEffect : Any>","com.onegravity.bloc.BlocObservable"]},{"name":"abstract class BlocState<out State : Any, in Proposal : Any> : StateStream<State> , Sink<Proposal> ","description":"com.onegravity.bloc.state.BlocState","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state/index.html","searchKeys":["BlocState","abstract class BlocState<out State : Any, in Proposal : Any> : StateStream<State> , Sink<Proposal> ","com.onegravity.bloc.state.BlocState"]},{"name":"abstract class BlocStateBase<State : Any, Proposal : Any>(initialState: State) : BlocState<State, Proposal> ","description":"com.onegravity.bloc.state.BlocStateBase","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state-base/index.html","searchKeys":["BlocStateBase","abstract class BlocStateBase<State : Any, Proposal : Any>(initialState: State) : BlocState<State, Proposal> ","com.onegravity.bloc.state.BlocStateBase"]},{"name":"abstract fun accept(accept: Acceptor<Proposal, State>)","description":"com.onegravity.bloc.state.BlocStateBuilder.accept","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state-builder/accept.html","searchKeys":["accept","abstract fun accept(accept: Acceptor<Proposal, State>)","com.onegravity.bloc.state.BlocStateBuilder.accept"]},{"name":"abstract fun build(): BlocState<State, State>","description":"com.onegravity.bloc.state.SimpleBlocStateBuilder.build","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-simple-bloc-state-builder/build.html","searchKeys":["build","abstract fun build(): BlocState<State, State>","com.onegravity.bloc.state.SimpleBlocStateBuilder.build"]},{"name":"abstract fun d(msg: String)","description":"com.onegravity.bloc.utils.Logger.d","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-logger/d.html","searchKeys":["d","abstract fun d(msg: String)","com.onegravity.bloc.utils.Logger.d"]},{"name":"abstract fun e(msg: String, t: Throwable? = null)","description":"com.onegravity.bloc.utils.Logger.e","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-logger/e.html","searchKeys":["e","abstract fun e(msg: String, t: Throwable? = null)","com.onegravity.bloc.utils.Logger.e"]},{"name":"abstract fun i(msg: String)","description":"com.onegravity.bloc.utils.Logger.i","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-logger/i.html","searchKeys":["i","abstract fun i(msg: String)","com.onegravity.bloc.utils.Logger.i"]},{"name":"abstract fun initialize(initialize: Initializer<State, Action>)","description":"com.onegravity.bloc.internal.BlocExtension.initialize","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-extension/initialize.html","searchKeys":["initialize","abstract fun initialize(initialize: Initializer<State, Action>)","com.onegravity.bloc.internal.BlocExtension.initialize"]},{"name":"abstract fun observe(observerLifecycle: <ERROR CLASS>, state: BlocObserver<State>?, sideEffect: BlocObserver<SideEffect>?)","description":"com.onegravity.bloc.Bloc.observe","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc/observe.html","searchKeys":["observe","abstract fun observe(observerLifecycle: <ERROR CLASS>, state: BlocObserver<State>?, sideEffect: BlocObserver<SideEffect>?)","com.onegravity.bloc.Bloc.observe"]},{"name":"abstract fun reduce(reduce: ReducerNoAction<State, Effect<Proposal, SideEffect>>)","description":"com.onegravity.bloc.internal.BlocExtension.reduce","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-extension/reduce.html","searchKeys":["reduce","abstract fun reduce(reduce: ReducerNoAction<State, Effect<Proposal, SideEffect>>)","com.onegravity.bloc.internal.BlocExtension.reduce"]},{"name":"abstract fun send(value: Value)","description":"com.onegravity.bloc.Sink.send","location":"bloc-core/-bloc -core/com.onegravity.bloc/-sink/send.html","searchKeys":["send","abstract fun send(value: Value)","com.onegravity.bloc.Sink.send"]},{"name":"abstract fun subscribe(lifecycle: <ERROR CLASS>, state: suspend (State) -> Unit? = null, sideEffect: suspend (SideEffect) -> Unit? = null)","description":"com.onegravity.bloc.BlocObservable.subscribe","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc-observable/subscribe.html","searchKeys":["subscribe","abstract fun subscribe(lifecycle: <ERROR CLASS>, state: suspend (State) -> Unit? = null, sideEffect: suspend (SideEffect) -> Unit? = null)","com.onegravity.bloc.BlocObservable.subscribe"]},{"name":"abstract fun thunk(thunk: ThunkNoAction<State, Action>)","description":"com.onegravity.bloc.internal.BlocExtension.thunk","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-extension/thunk.html","searchKeys":["thunk","abstract fun thunk(thunk: ThunkNoAction<State, Action>)","com.onegravity.bloc.internal.BlocExtension.thunk"]},{"name":"abstract fun w(msg: String)","description":"com.onegravity.bloc.utils.Logger.w","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-logger/w.html","searchKeys":["w","abstract fun w(msg: String)","com.onegravity.bloc.utils.Logger.w"]},{"name":"abstract override fun send(proposal: Proposal)","description":"com.onegravity.bloc.state.BlocState.send","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state/send.html","searchKeys":["send","abstract override fun send(proposal: Proposal)","com.onegravity.bloc.state.BlocState.send"]},{"name":"abstract override val value: State","description":"com.onegravity.bloc.state.BlocState.value","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state/value.html","searchKeys":["value","abstract override val value: State","com.onegravity.bloc.state.BlocState.value"]},{"name":"abstract suspend fun collect(collector: <ERROR CLASS><Value>)","description":"com.onegravity.bloc.StateStream.collect","location":"bloc-core/-bloc -core/com.onegravity.bloc/-state-stream/collect.html","searchKeys":["collect","abstract suspend fun collect(collector: <ERROR CLASS><Value>)","com.onegravity.bloc.StateStream.collect"]},{"name":"abstract suspend override fun collect(collector: <ERROR CLASS><State>)","description":"com.onegravity.bloc.state.BlocState.collect","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state/collect.html","searchKeys":["collect","abstract suspend override fun collect(collector: <ERROR CLASS><State>)","com.onegravity.bloc.state.BlocState.collect"]},{"name":"abstract val bloc: Bloc<State, Action, SideEffect>","description":"com.onegravity.bloc.BlocOwner.bloc","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc-owner/bloc.html","searchKeys":["bloc","abstract val bloc: Bloc<State, Action, SideEffect>","com.onegravity.bloc.BlocOwner.bloc"]},{"name":"abstract val observable: BlocObservable<State, SideEffect>","description":"com.onegravity.bloc.BlocObservableOwner.observable","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc-observable-owner/observable.html","searchKeys":["observable","abstract val observable: BlocObservable<State, SideEffect>","com.onegravity.bloc.BlocObservableOwner.observable"]},{"name":"abstract val sideEffects: <ERROR CLASS><Value>","description":"com.onegravity.bloc.Bloc.sideEffects","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc/side-effects.html","searchKeys":["sideEffects","abstract val sideEffects: <ERROR CLASS><Value>","com.onegravity.bloc.Bloc.sideEffects"]},{"name":"abstract val value: State","description":"com.onegravity.bloc.BlocObservable.value","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc-observable/value.html","searchKeys":["value","abstract val value: State","com.onegravity.bloc.BlocObservable.value"]},{"name":"abstract val value: Value","description":"com.onegravity.bloc.StateStream.value","location":"bloc-core/-bloc -core/com.onegravity.bloc/-state-stream/value.html","searchKeys":["value","abstract val value: Value","com.onegravity.bloc.StateStream.value"]},{"name":"abstract var initialState: State","description":"com.onegravity.bloc.state.BlocStateBuilder.initialState","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state-builder/initial-state.html","searchKeys":["initialState","abstract var initialState: State","com.onegravity.bloc.state.BlocStateBuilder.initialState"]},{"name":"abstract var initialState: State","description":"com.onegravity.bloc.state.SimpleBlocStateBuilder.initialState","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-simple-bloc-state-builder/initial-state.html","searchKeys":["initialState","abstract var initialState: State","com.onegravity.bloc.state.SimpleBlocStateBuilder.initialState"]},{"name":"annotation class BlocDSL","description":"com.onegravity.bloc.utils.BlocDSL","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-bloc-d-s-l/index.html","searchKeys":["BlocDSL","annotation class BlocDSL","com.onegravity.bloc.utils.BlocDSL"]},{"name":"annotation class BlocInternal","description":"com.onegravity.bloc.utils.BlocInternal","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-bloc-internal/index.html","searchKeys":["BlocInternal","annotation class BlocInternal","com.onegravity.bloc.utils.BlocInternal"]},{"name":"annotation class BlocProtected","description":"com.onegravity.bloc.utils.BlocProtected","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-bloc-protected/index.html","searchKeys":["BlocProtected","annotation class BlocProtected","com.onegravity.bloc.utils.BlocProtected"]},{"name":"class BlocBuilder<State : Any, Action : Any, SE : Any, Proposal : Any>","description":"com.onegravity.bloc.internal.builder.BlocBuilder","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/index.html","searchKeys":["BlocBuilder","class BlocBuilder<State : Any, Action : Any, SE : Any, Proposal : Any>","com.onegravity.bloc.internal.builder.BlocBuilder"]},{"name":"class BlocExecutionTests","description":"com.onegravity.bloc.internal.BlocExecutionTests","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-execution-tests/index.html","searchKeys":["BlocExecutionTests","class BlocExecutionTests","com.onegravity.bloc.internal.BlocExecutionTests"]},{"name":"class BlocLifecycleTests","description":"com.onegravity.bloc.internal.BlocLifecycleTests","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-lifecycle-tests/index.html","searchKeys":["BlocLifecycleTests","class BlocLifecycleTests","com.onegravity.bloc.internal.BlocLifecycleTests"]},{"name":"class ComponentLazy<A : ViewModelStoreOwner, Component : Any>(owner: Lazy<A>, key: Any, create: (context: BlocContext) -> Component) : Lazy<Component> ","description":"com.onegravity.bloc.ComponentLazy","location":"bloc-core/-bloc -core/com.onegravity.bloc/-component-lazy/index.html","searchKeys":["ComponentLazy","class ComponentLazy<A : ViewModelStoreOwner, Component : Any>(owner: Lazy<A>, key: Any, create: (context: BlocContext) -> Component) : Lazy<Component> ","com.onegravity.bloc.ComponentLazy"]},{"name":"class FragmentViewBindingDelegate<T : ViewBinding>(fragment: Fragment, viewBindingFactory: (View) -> T) : ReadOnlyProperty<Fragment, T> ","description":"com.onegravity.bloc.utils.FragmentViewBindingDelegate","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-fragment-view-binding-delegate/index.html","searchKeys":["FragmentViewBindingDelegate","class FragmentViewBindingDelegate<T : ViewBinding>(fragment: Fragment, viewBindingFactory: (View) -> T) : ReadOnlyProperty<Fragment, T> ","com.onegravity.bloc.utils.FragmentViewBindingDelegate"]},{"name":"class Matcher<SuperClazz : Any, out ChildClazz : SuperClazz>(clazz: KClass<ChildClazz>, value: SuperClazz?)","description":"com.onegravity.bloc.internal.builder.Matcher","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher/index.html","searchKeys":["Matcher","class Matcher<SuperClazz : Any, out ChildClazz : SuperClazz>(clazz: KClass<ChildClazz>, value: SuperClazz?)","com.onegravity.bloc.internal.builder.Matcher"]},{"name":"class MutableStateStream<Value : Any>(initialValue: Value) : StateStream<Value> , Sink<Value> ","description":"com.onegravity.bloc.utils.MutableStateStream","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-mutable-state-stream/index.html","searchKeys":["MutableStateStream","class MutableStateStream<Value : Any>(initialValue: Value) : StateStream<Value> , Sink<Value> ","com.onegravity.bloc.utils.MutableStateStream"]},{"name":"data class Effect<Proposal : Any, SideEffect : Any>(proposal: Proposal?, sideEffects: List<SideEffect>)","description":"com.onegravity.bloc.utils.Effect","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-effect/index.html","searchKeys":["Effect","data class Effect<Proposal : Any, SideEffect : Any>(proposal: Proposal?, sideEffects: List<SideEffect>)","com.onegravity.bloc.utils.Effect"]},{"name":"data class InitializerContext<State, Action>(state: State, dispatch: Dispatcher<Action>, coroutineScope: <ERROR CLASS>)","description":"com.onegravity.bloc.utils.InitializerContext","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-initializer-context/index.html","searchKeys":["InitializerContext","data class InitializerContext<State, Action>(state: State, dispatch: Dispatcher<Action>, coroutineScope: <ERROR CLASS>)","com.onegravity.bloc.utils.InitializerContext"]},{"name":"data class ReducerContext<State, Action>(state: State, action: Action, coroutineScope: <ERROR CLASS>)","description":"com.onegravity.bloc.utils.ReducerContext","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-reducer-context/index.html","searchKeys":["ReducerContext","data class ReducerContext<State, Action>(state: State, action: Action, coroutineScope: <ERROR CLASS>)","com.onegravity.bloc.utils.ReducerContext"]},{"name":"data class ReducerContextNoAction<State>(state: State, coroutineScope: <ERROR CLASS>)","description":"com.onegravity.bloc.utils.ReducerContextNoAction","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-reducer-context-no-action/index.html","searchKeys":["ReducerContextNoAction","data class ReducerContextNoAction<State>(state: State, coroutineScope: <ERROR CLASS>)","com.onegravity.bloc.utils.ReducerContextNoAction"]},{"name":"data class ThunkContext<State, Action, A : Action>(getState: GetState<State>, action: A, dispatch: Dispatcher<Action>, coroutineScope: <ERROR CLASS>)","description":"com.onegravity.bloc.utils.ThunkContext","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-thunk-context/index.html","searchKeys":["ThunkContext","data class ThunkContext<State, Action, A : Action>(getState: GetState<State>, action: A, dispatch: Dispatcher<Action>, coroutineScope: <ERROR CLASS>)","com.onegravity.bloc.utils.ThunkContext"]},{"name":"data class ThunkContextNoAction<State, Action>(getState: GetState<State>, dispatch: Dispatcher<Action>, coroutineScope: <ERROR CLASS>)","description":"com.onegravity.bloc.utils.ThunkContextNoAction","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-thunk-context-no-action/index.html","searchKeys":["ThunkContextNoAction","data class ThunkContextNoAction<State, Action>(getState: GetState<State>, dispatch: Dispatcher<Action>, coroutineScope: <ERROR CLASS>)","com.onegravity.bloc.utils.ThunkContextNoAction"]},{"name":"fun <A : Action> ThunkContext(getState: GetState<State>, action: A, dispatch: Dispatcher<Action>, coroutineScope: <ERROR CLASS>)","description":"com.onegravity.bloc.utils.ThunkContext.ThunkContext","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-thunk-context/-thunk-context.html","searchKeys":["ThunkContext","fun <A : Action> ThunkContext(getState: GetState<State>, action: A, dispatch: Dispatcher<Action>, coroutineScope: <ERROR CLASS>)","com.onegravity.bloc.utils.ThunkContext.ThunkContext"]},{"name":"fun <A : Action> addReducer(matcher: Matcher<Action, A>, reducer: Reducer<State, Action, Effect<Proposal, SE>>, expectsProposal: Boolean)","description":"com.onegravity.bloc.internal.builder.BlocBuilder.addReducer","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/add-reducer.html","searchKeys":["addReducer","fun <A : Action> addReducer(matcher: Matcher<Action, A>, reducer: Reducer<State, Action, Effect<Proposal, SE>>, expectsProposal: Boolean)","com.onegravity.bloc.internal.builder.BlocBuilder.addReducer"]},{"name":"fun <A : Action> addThunk(matcher: Matcher<Action, A>, thunk: Thunk<State, Action, A>)","description":"com.onegravity.bloc.internal.builder.BlocBuilder.addThunk","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/add-thunk.html","searchKeys":["addThunk","fun <A : Action> addThunk(matcher: Matcher<Action, A>, thunk: Thunk<State, Action, A>)","com.onegravity.bloc.internal.builder.BlocBuilder.addThunk"]},{"name":"fun <A : ViewModelStoreOwner, Component : Any> ComponentLazy(owner: Lazy<A>, key: Any, create: (context: BlocContext) -> Component)","description":"com.onegravity.bloc.ComponentLazy.ComponentLazy","location":"bloc-core/-bloc -core/com.onegravity.bloc/-component-lazy/-component-lazy.html","searchKeys":["ComponentLazy","fun <A : ViewModelStoreOwner, Component : Any> ComponentLazy(owner: Lazy<A>, key: Any, create: (context: BlocContext) -> Component)","com.onegravity.bloc.ComponentLazy.ComponentLazy"]},{"name":"fun <Action : Any> MatcherReducer(matcher: Matcher<Action, Action>?, reducer: Reducer<State, Action, Proposal>, expectsProposal: Boolean)","description":"com.onegravity.bloc.internal.builder.MatcherReducer.MatcherReducer","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher-reducer/-matcher-reducer.html","searchKeys":["MatcherReducer","fun <Action : Any> MatcherReducer(matcher: Matcher<Action, Action>?, reducer: Reducer<State, Action, Proposal>, expectsProposal: Boolean)","com.onegravity.bloc.internal.builder.MatcherReducer.MatcherReducer"]},{"name":"fun <Action : Any> MatcherThunk(matcher: Matcher<Action, Action>?, thunk: Thunk<State, Action, A>)","description":"com.onegravity.bloc.internal.builder.MatcherThunk.MatcherThunk","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher-thunk/-matcher-thunk.html","searchKeys":["MatcherThunk","fun <Action : Any> MatcherThunk(matcher: Matcher<Action, Action>?, thunk: Thunk<State, Action, A>)","com.onegravity.bloc.internal.builder.MatcherThunk.MatcherThunk"]},{"name":"fun <Action : Any> ReduceChannelElement(action: Action? = null, reducer: ReducerNoAction<State, Effect<Proposal, SideEffect>>? = null)","description":"com.onegravity.bloc.internal.ReduceChannelElement.ReduceChannelElement","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-channel-element/-reduce-channel-element.html","searchKeys":["ReduceChannelElement","fun <Action : Any> ReduceChannelElement(action: Action? = null, reducer: ReducerNoAction<State, Effect<Proposal, SideEffect>>? = null)","com.onegravity.bloc.internal.ReduceChannelElement.ReduceChannelElement"]},{"name":"fun <C> InstanceWrapper(component: C)","description":"com.onegravity.bloc.ComponentLazy.InstanceWrapper.InstanceWrapper","location":"bloc-core/-bloc -core/com.onegravity.bloc/-component-lazy/-instance-wrapper/-instance-wrapper.html","searchKeys":["InstanceWrapper","fun <C> InstanceWrapper(component: C)","com.onegravity.bloc.ComponentLazy.InstanceWrapper.InstanceWrapper"]},{"name":"fun <Proposal : Any, SideEffect : Any> Effect(proposal: Proposal?, sideEffect: SideEffect)","description":"com.onegravity.bloc.utils.Effect.Effect","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-effect/-effect.html","searchKeys":["Effect","fun <Proposal : Any, SideEffect : Any> Effect(proposal: Proposal?, sideEffect: SideEffect)","com.onegravity.bloc.utils.Effect.Effect"]},{"name":"fun <Proposal : Any, SideEffect : Any> Effect(proposal: Proposal?, sideEffects: List<SideEffect>)","description":"com.onegravity.bloc.utils.Effect.Effect","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-effect/-effect.html","searchKeys":["Effect","fun <Proposal : Any, SideEffect : Any> Effect(proposal: Proposal?, sideEffects: List<SideEffect>)","com.onegravity.bloc.utils.Effect.Effect"]},{"name":"fun <State : Any, Action : Any, Proposal : Any> InitializeProcessor(blocContext: BlocContext, blocState: BlocState<State, Proposal>, initialize: Initializer<State, Action>? = null, initDispatcher: <ERROR CLASS> = Dispatchers.Default, dispatch: (Action) -> Unit)","description":"com.onegravity.bloc.internal.InitializeProcessor.InitializeProcessor","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-initialize-processor/-initialize-processor.html","searchKeys":["InitializeProcessor","fun <State : Any, Action : Any, Proposal : Any> InitializeProcessor(blocContext: BlocContext, blocState: BlocState<State, Proposal>, initialize: Initializer<State, Action>? = null, initDispatcher: <ERROR CLASS> = Dispatchers.Default, dispatch: (Action) -> Unit)","com.onegravity.bloc.internal.InitializeProcessor.InitializeProcessor"]},{"name":"fun <State : Any, Action : Any, Proposal : Any> ThunkProcessor(blocContext: BlocContext, blocState: BlocState<State, Proposal>, thunks: List<MatcherThunk<State, Action, Action>> = emptyList(), thunkDispatcher: <ERROR CLASS> = Dispatchers.Default, runReducers: (Action) -> Unit)","description":"com.onegravity.bloc.internal.ThunkProcessor.ThunkProcessor","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-thunk-processor/-thunk-processor.html","searchKeys":["ThunkProcessor","fun <State : Any, Action : Any, Proposal : Any> ThunkProcessor(blocContext: BlocContext, blocState: BlocState<State, Proposal>, thunks: List<MatcherThunk<State, Action, Action>> = emptyList(), thunkDispatcher: <ERROR CLASS> = Dispatchers.Default, runReducers: (Action) -> Unit)","com.onegravity.bloc.internal.ThunkProcessor.ThunkProcessor"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> Bloc<State, Action, SideEffect>.onCreate(initializer: Initializer<State, Action>)","description":"com.onegravity.bloc.onCreate","location":"bloc-core/-bloc -core/com.onegravity.bloc/on-create.html","searchKeys":["onCreate","fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> Bloc<State, Action, SideEffect>.onCreate(initializer: Initializer<State, Action>)","com.onegravity.bloc.onCreate"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> Bloc<State, Action, SideEffect>.reduce(reducer: ReducerNoAction<State, Proposal>)","description":"com.onegravity.bloc.reduce","location":"bloc-core/-bloc -core/com.onegravity.bloc/reduce.html","searchKeys":["reduce","fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> Bloc<State, Action, SideEffect>.reduce(reducer: ReducerNoAction<State, Proposal>)","com.onegravity.bloc.reduce"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> Bloc<State, Action, SideEffect>.reduceAnd(reducer: ReducerNoAction<State, Effect<Proposal, SideEffect>>)","description":"com.onegravity.bloc.reduceAnd","location":"bloc-core/-bloc -core/com.onegravity.bloc/reduce-and.html","searchKeys":["reduceAnd","fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> Bloc<State, Action, SideEffect>.reduceAnd(reducer: ReducerNoAction<State, Effect<Proposal, SideEffect>>)","com.onegravity.bloc.reduceAnd"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> Bloc<State, Action, SideEffect>.sideEffect(sideEffect: SideEffectNoAction<State, SideEffect>)","description":"com.onegravity.bloc.sideEffect","location":"bloc-core/-bloc -core/com.onegravity.bloc/side-effect.html","searchKeys":["sideEffect","fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> Bloc<State, Action, SideEffect>.sideEffect(sideEffect: SideEffectNoAction<State, SideEffect>)","com.onegravity.bloc.sideEffect"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> Bloc<State, Action, SideEffect>.thunk(thunk: ThunkNoAction<State, Action>)","description":"com.onegravity.bloc.thunk","location":"bloc-core/-bloc -core/com.onegravity.bloc/thunk.html","searchKeys":["thunk","fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> Bloc<State, Action, SideEffect>.thunk(thunk: ThunkNoAction<State, Action>)","com.onegravity.bloc.thunk"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> BlocImpl(blocContext: BlocContext, blocState: BlocState<State, Proposal>, initialize: Initializer<State, Action>? = null, thunks: List<MatcherThunk<State, Action, Action>> = emptyList(), reducers: List<MatcherReducer<State, Action, Effect<Proposal, SideEffect>>>, initDispatcher: <ERROR CLASS> = Dispatchers.Default, thunkDispatcher: <ERROR CLASS> = Dispatchers.Default, reduceDispatcher: <ERROR CLASS> = Dispatchers.Default)","description":"com.onegravity.bloc.internal.BlocImpl.BlocImpl","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-impl/-bloc-impl.html","searchKeys":["BlocImpl","fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> BlocImpl(blocContext: BlocContext, blocState: BlocState<State, Proposal>, initialize: Initializer<State, Action>? = null, thunks: List<MatcherThunk<State, Action, Action>> = emptyList(), reducers: List<MatcherReducer<State, Action, Effect<Proposal, SideEffect>>>, initDispatcher: <ERROR CLASS> = Dispatchers.Default, thunkDispatcher: <ERROR CLASS> = Dispatchers.Default, reduceDispatcher: <ERROR CLASS> = Dispatchers.Default)","com.onegravity.bloc.internal.BlocImpl.BlocImpl"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> BlocOwner<State, Action, SideEffect, Proposal>.onCreate(initializer: Initializer<State, Action>)","description":"com.onegravity.bloc.onCreate","location":"bloc-core/-bloc -core/com.onegravity.bloc/on-create.html","searchKeys":["onCreate","fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> BlocOwner<State, Action, SideEffect, Proposal>.onCreate(initializer: Initializer<State, Action>)","com.onegravity.bloc.onCreate"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> BlocOwner<State, Action, SideEffect, Proposal>.reduce(reducer: ReducerNoAction<State, Proposal>)","description":"com.onegravity.bloc.reduce","location":"bloc-core/-bloc -core/com.onegravity.bloc/reduce.html","searchKeys":["reduce","fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> BlocOwner<State, Action, SideEffect, Proposal>.reduce(reducer: ReducerNoAction<State, Proposal>)","com.onegravity.bloc.reduce"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> BlocOwner<State, Action, SideEffect, Proposal>.reduceAnd(reducer: ReducerNoAction<State, Effect<Proposal, SideEffect>>)","description":"com.onegravity.bloc.reduceAnd","location":"bloc-core/-bloc -core/com.onegravity.bloc/reduce-and.html","searchKeys":["reduceAnd","fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> BlocOwner<State, Action, SideEffect, Proposal>.reduceAnd(reducer: ReducerNoAction<State, Effect<Proposal, SideEffect>>)","com.onegravity.bloc.reduceAnd"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> BlocOwner<State, Action, SideEffect, Proposal>.sideEffect(sideEffect: SideEffectNoAction<State, SideEffect>)","description":"com.onegravity.bloc.sideEffect","location":"bloc-core/-bloc -core/com.onegravity.bloc/side-effect.html","searchKeys":["sideEffect","fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> BlocOwner<State, Action, SideEffect, Proposal>.sideEffect(sideEffect: SideEffectNoAction<State, SideEffect>)","com.onegravity.bloc.sideEffect"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> BlocOwner<State, Action, SideEffect, Proposal>.subscribe(lifecycle: <ERROR CLASS>, state: suspend (State) -> Unit? = null, sideEffect: suspend (SideEffect) -> Unit? = null)","description":"com.onegravity.bloc.utils.subscribe","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/subscribe.html","searchKeys":["subscribe","fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> BlocOwner<State, Action, SideEffect, Proposal>.subscribe(lifecycle: <ERROR CLASS>, state: suspend (State) -> Unit? = null, sideEffect: suspend (SideEffect) -> Unit? = null)","com.onegravity.bloc.utils.subscribe"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> BlocOwner<State, Action, SideEffect, Proposal>.subscribe(lifecycleOwner: LifecycleOwner, state: suspend (State) -> Unit? = null, sideEffect: suspend (SideEffect) -> Unit? = null)","description":"com.onegravity.bloc.subscribe","location":"bloc-core/-bloc -core/com.onegravity.bloc/subscribe.html","searchKeys":["subscribe","fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> BlocOwner<State, Action, SideEffect, Proposal>.subscribe(lifecycleOwner: LifecycleOwner, state: suspend (State) -> Unit? = null, sideEffect: suspend (SideEffect) -> Unit? = null)","com.onegravity.bloc.subscribe"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> BlocOwner<State, Action, SideEffect, Proposal>.thunk(thunk: ThunkNoAction<State, Action>)","description":"com.onegravity.bloc.thunk","location":"bloc-core/-bloc -core/com.onegravity.bloc/thunk.html","searchKeys":["thunk","fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> BlocOwner<State, Action, SideEffect, Proposal>.thunk(thunk: ThunkNoAction<State, Action>)","com.onegravity.bloc.thunk"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> ReduceProcessor(blocContext: BlocContext, blocState: BlocState<State, Proposal>, reducers: List<MatcherReducer<State, Action, Effect<Proposal, SideEffect>>>, reduceDispatcher: <ERROR CLASS> = Dispatchers.Default)","description":"com.onegravity.bloc.internal.ReduceProcessor.ReduceProcessor","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/-reduce-processor.html","searchKeys":["ReduceProcessor","fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> ReduceProcessor(blocContext: BlocContext, blocState: BlocState<State, Proposal>, reducers: List<MatcherReducer<State, Action, Effect<Proposal, SideEffect>>>, reduceDispatcher: <ERROR CLASS> = Dispatchers.Default)","com.onegravity.bloc.internal.ReduceProcessor.ReduceProcessor"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> bloc(context: BlocContext, blocState: BlocState<State, Proposal>, block: BlocBuilder<State, Action, SideEffect, Proposal>.() -> Unit = {}): Bloc<State, Action, SideEffect>","description":"com.onegravity.bloc.bloc","location":"bloc-core/-bloc -core/com.onegravity.bloc/[common]bloc.html","searchKeys":["bloc","fun <State : Any, Action : Any, SideEffect : Any, Proposal : Any> bloc(context: BlocContext, blocState: BlocState<State, Proposal>, block: BlocBuilder<State, Action, SideEffect, Proposal>.() -> Unit = {}): Bloc<State, Action, SideEffect>","com.onegravity.bloc.bloc"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any> Bloc<State, Action, SideEffect>.subscribe(lifecycle: <ERROR CLASS>, state: suspend (State) -> Unit? = null, sideEffect: suspend (SideEffect) -> Unit? = null)","description":"com.onegravity.bloc.utils.subscribe","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/subscribe.html","searchKeys":["subscribe","fun <State : Any, Action : Any, SideEffect : Any> Bloc<State, Action, SideEffect>.subscribe(lifecycle: <ERROR CLASS>, state: suspend (State) -> Unit? = null, sideEffect: suspend (SideEffect) -> Unit? = null)","com.onegravity.bloc.utils.subscribe"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any> Bloc<State, Action, SideEffect>.subscribe(lifecycleOwner: LifecycleOwner, state: suspend (State) -> Unit? = null, sideEffect: suspend (SideEffect) -> Unit? = null)","description":"com.onegravity.bloc.subscribe","location":"bloc-core/-bloc -core/com.onegravity.bloc/subscribe.html","searchKeys":["subscribe","fun <State : Any, Action : Any, SideEffect : Any> Bloc<State, Action, SideEffect>.subscribe(lifecycleOwner: LifecycleOwner, state: suspend (State) -> Unit? = null, sideEffect: suspend (SideEffect) -> Unit? = null)","com.onegravity.bloc.subscribe"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any> Bloc<State, Action, SideEffect>.toObservable(): BlocObservable<State, SideEffect>","description":"com.onegravity.bloc.toObservable","location":"bloc-core/-bloc -core/com.onegravity.bloc/to-observable.html","searchKeys":["toObservable","fun <State : Any, Action : Any, SideEffect : Any> Bloc<State, Action, SideEffect>.toObservable(): BlocObservable<State, SideEffect>","com.onegravity.bloc.toObservable"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any> Bloc<State, Action, SideEffect>.toObservable(bloc: Bloc<State, Action, SideEffect>): BlocObservable<State, SideEffect>","description":"com.onegravity.bloc.toObservable","location":"bloc-core/-bloc -core/com.onegravity.bloc/to-observable.html","searchKeys":["toObservable","fun <State : Any, Action : Any, SideEffect : Any> Bloc<State, Action, SideEffect>.toObservable(bloc: Bloc<State, Action, SideEffect>): BlocObservable<State, SideEffect>","com.onegravity.bloc.toObservable"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any> LifecycleOwner.toLiveData(bloc: Bloc<State, Action, SideEffect>): LiveData<State>","description":"com.onegravity.bloc.toLiveData","location":"bloc-core/-bloc -core/com.onegravity.bloc/to-live-data.html","searchKeys":["toLiveData","fun <State : Any, Action : Any, SideEffect : Any> LifecycleOwner.toLiveData(bloc: Bloc<State, Action, SideEffect>): LiveData<State>","com.onegravity.bloc.toLiveData"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any> List<Bloc<State, Action, SideEffect>>.toObservable(): BlocObservable<State, SideEffect>","description":"com.onegravity.bloc.toObservable","location":"bloc-core/-bloc -core/com.onegravity.bloc/to-observable.html","searchKeys":["toObservable","fun <State : Any, Action : Any, SideEffect : Any> List<Bloc<State, Action, SideEffect>>.toObservable(): BlocObservable<State, SideEffect>","com.onegravity.bloc.toObservable"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any> ViewModel.toLiveData(bloc: Bloc<State, Action, SideEffect>): LiveData<State>","description":"com.onegravity.bloc.toLiveData","location":"bloc-core/-bloc -core/com.onegravity.bloc/to-live-data.html","searchKeys":["toLiveData","fun <State : Any, Action : Any, SideEffect : Any> ViewModel.toLiveData(bloc: Bloc<State, Action, SideEffect>): LiveData<State>","com.onegravity.bloc.toLiveData"]},{"name":"fun <State : Any, Action : Any, SideEffect : Any> bloc(context: BlocContext, initialValue: State, block: BlocBuilder<State, Action, SideEffect, State>.() -> Unit = {}): Bloc<State, Action, SideEffect>","description":"com.onegravity.bloc.bloc","location":"bloc-core/-bloc -core/com.onegravity.bloc/bloc.html","searchKeys":["bloc","fun <State : Any, Action : Any, SideEffect : Any> bloc(context: BlocContext, initialValue: State, block: BlocBuilder<State, Action, SideEffect, State>.() -> Unit = {}): Bloc<State, Action, SideEffect>","com.onegravity.bloc.bloc"]},{"name":"fun <State : Any, Action : Any> bloc(context: BlocContext, blocState: BlocState<State, State>, block: BlocBuilder<State, Action, Unit, State>.() -> Unit = {}): Bloc<State, Action, Unit>","description":"com.onegravity.bloc.bloc","location":"bloc-core/-bloc -core/com.onegravity.bloc/bloc.html","searchKeys":["bloc","fun <State : Any, Action : Any> bloc(context: BlocContext, blocState: BlocState<State, State>, block: BlocBuilder<State, Action, Unit, State>.() -> Unit = {}): Bloc<State, Action, Unit>","com.onegravity.bloc.bloc"]},{"name":"fun <State : Any, Action : Any> bloc(context: BlocContext, initialValue: State, block: BlocBuilder<State, Action, Unit, State>.() -> Unit = {}): Bloc<State, Action, Unit>","description":"com.onegravity.bloc.bloc","location":"bloc-core/-bloc -core/com.onegravity.bloc/bloc.html","searchKeys":["bloc","fun <State : Any, Action : Any> bloc(context: BlocContext, initialValue: State, block: BlocBuilder<State, Action, Unit, State>.() -> Unit = {}): Bloc<State, Action, Unit>","com.onegravity.bloc.bloc"]},{"name":"fun <State : Any, Proposal : Any> blocState(block: BlocStateBuilder<State, Proposal>.() -> Unit): BlocState<State, Proposal>","description":"com.onegravity.bloc.state.blocState","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/bloc-state.html","searchKeys":["blocState","fun <State : Any, Proposal : Any> blocState(block: BlocStateBuilder<State, Proposal>.() -> Unit): BlocState<State, Proposal>","com.onegravity.bloc.state.blocState"]},{"name":"fun <State : Any, SideEffect : Any, Proposal : Any> Bloc<State, Proposal, SideEffect>.asBlocState(): BlocState<State, Proposal>","description":"com.onegravity.bloc.state.asBlocState","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/as-bloc-state.html","searchKeys":["asBlocState","fun <State : Any, SideEffect : Any, Proposal : Any> Bloc<State, Proposal, SideEffect>.asBlocState(): BlocState<State, Proposal>","com.onegravity.bloc.state.asBlocState"]},{"name":"fun <State : Any, SideEffect : Any> BlocObservableOwner<State, SideEffect>.subscribe(lifecycle: <ERROR CLASS>, state: suspend (State) -> Unit? = null, sideEffect: suspend (SideEffect) -> Unit? = null)","description":"com.onegravity.bloc.utils.subscribe","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/subscribe.html","searchKeys":["subscribe","fun <State : Any, SideEffect : Any> BlocObservableOwner<State, SideEffect>.subscribe(lifecycle: <ERROR CLASS>, state: suspend (State) -> Unit? = null, sideEffect: suspend (SideEffect) -> Unit? = null)","com.onegravity.bloc.utils.subscribe"]},{"name":"fun <State : Any, SideEffect : Any> BlocObservableOwner<State, SideEffect>.subscribe(lifecycleOwner: LifecycleOwner, state: suspend (State) -> Unit? = null, sideEffect: suspend (SideEffect) -> Unit? = null)","description":"com.onegravity.bloc.subscribe","location":"bloc-core/-bloc -core/com.onegravity.bloc/subscribe.html","searchKeys":["subscribe","fun <State : Any, SideEffect : Any> BlocObservableOwner<State, SideEffect>.subscribe(lifecycleOwner: LifecycleOwner, state: suspend (State) -> Unit? = null, sideEffect: suspend (SideEffect) -> Unit? = null)","com.onegravity.bloc.subscribe"]},{"name":"fun <State : Any> BlocStateBase(initialState: State)","description":"com.onegravity.bloc.state.BlocStateBase.BlocStateBase","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state-base/-bloc-state-base.html","searchKeys":["BlocStateBase","fun <State : Any> BlocStateBase(initialState: State)","com.onegravity.bloc.state.BlocStateBase.BlocStateBase"]},{"name":"fun <State : Any> DefaultBlocState(initialState: State, accept: Acceptor<Proposal, State>)","description":"com.onegravity.bloc.state.DefaultBlocState.DefaultBlocState","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-default-bloc-state/-default-bloc-state.html","searchKeys":["DefaultBlocState","fun <State : Any> DefaultBlocState(initialState: State, accept: Acceptor<Proposal, State>)","com.onegravity.bloc.state.DefaultBlocState.DefaultBlocState"]},{"name":"fun <State : Any> blocState(initialState: State): BlocState<State, State>","description":"com.onegravity.bloc.state.blocState","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/bloc-state.html","searchKeys":["blocState","fun <State : Any> blocState(initialState: State): BlocState<State, State>","com.onegravity.bloc.state.blocState"]},{"name":"fun <State, Action> ReducerContext(state: State, action: Action, coroutineScope: <ERROR CLASS>)","description":"com.onegravity.bloc.utils.ReducerContext.ReducerContext","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-reducer-context/-reducer-context.html","searchKeys":["ReducerContext","fun <State, Action> ReducerContext(state: State, action: Action, coroutineScope: <ERROR CLASS>)","com.onegravity.bloc.utils.ReducerContext.ReducerContext"]},{"name":"fun <State> InitializerContext(state: State, dispatch: Dispatcher<Action>, coroutineScope: <ERROR CLASS>)","description":"com.onegravity.bloc.utils.InitializerContext.InitializerContext","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-initializer-context/-initializer-context.html","searchKeys":["InitializerContext","fun <State> InitializerContext(state: State, dispatch: Dispatcher<Action>, coroutineScope: <ERROR CLASS>)","com.onegravity.bloc.utils.InitializerContext.InitializerContext"]},{"name":"fun <State> ReducerContextNoAction(state: State, coroutineScope: <ERROR CLASS>)","description":"com.onegravity.bloc.utils.ReducerContextNoAction.ReducerContextNoAction","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-reducer-context-no-action/-reducer-context-no-action.html","searchKeys":["ReducerContextNoAction","fun <State> ReducerContextNoAction(state: State, coroutineScope: <ERROR CLASS>)","com.onegravity.bloc.utils.ReducerContextNoAction.ReducerContextNoAction"]},{"name":"fun <SuperClazz : Any, out ChildClazz : SuperClazz> Matcher(clazz: KClass<ChildClazz>, value: SuperClazz? = null)","description":"com.onegravity.bloc.internal.builder.Matcher.Matcher","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher/-matcher.html","searchKeys":["Matcher","fun <SuperClazz : Any, out ChildClazz : SuperClazz> Matcher(clazz: KClass<ChildClazz>, value: SuperClazz? = null)","com.onegravity.bloc.internal.builder.Matcher.Matcher"]},{"name":"fun <T : ViewBinding> FragmentViewBindingDelegate(fragment: Fragment, viewBindingFactory: (View) -> T)","description":"com.onegravity.bloc.utils.FragmentViewBindingDelegate.FragmentViewBindingDelegate","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-fragment-view-binding-delegate/-fragment-view-binding-delegate.html","searchKeys":["FragmentViewBindingDelegate","fun <T : ViewBinding> FragmentViewBindingDelegate(fragment: Fragment, viewBindingFactory: (View) -> T)","com.onegravity.bloc.utils.FragmentViewBindingDelegate.FragmentViewBindingDelegate"]},{"name":"fun <T : ViewDataBinding> ComponentActivity.bind(layoutId: Int, bindLayout2Component: (T) -> Unit)","description":"com.onegravity.bloc.bind","location":"bloc-core/-bloc -core/com.onegravity.bloc/bind.html","searchKeys":["bind","fun <T : ViewDataBinding> ComponentActivity.bind(layoutId: Int, bindLayout2Component: (T) -> Unit)","com.onegravity.bloc.bind"]},{"name":"fun <Value : Any> MutableStateStream(initialValue: Value)","description":"com.onegravity.bloc.utils.MutableStateStream.MutableStateStream","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-mutable-state-stream/-mutable-state-stream.html","searchKeys":["MutableStateStream","fun <Value : Any> MutableStateStream(initialValue: Value)","com.onegravity.bloc.utils.MutableStateStream.MutableStateStream"]},{"name":"fun Bloc()","description":"com.onegravity.bloc.Bloc.Bloc","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc/-bloc.html","searchKeys":["Bloc","fun Bloc()","com.onegravity.bloc.Bloc.Bloc"]},{"name":"fun BlocBuilder()","description":"com.onegravity.bloc.internal.builder.BlocBuilder.BlocBuilder","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/-bloc-builder.html","searchKeys":["BlocBuilder","fun BlocBuilder()","com.onegravity.bloc.internal.builder.BlocBuilder.BlocBuilder"]},{"name":"fun BlocContextImpl(lifecycle: <ERROR CLASS>)","description":"com.onegravity.bloc.internal.BlocContextImpl.BlocContextImpl","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-context-impl/-bloc-context-impl.html","searchKeys":["BlocContextImpl","fun BlocContextImpl(lifecycle: <ERROR CLASS>)","com.onegravity.bloc.internal.BlocContextImpl.BlocContextImpl"]},{"name":"fun BlocDSL()","description":"com.onegravity.bloc.utils.BlocDSL.BlocDSL","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-bloc-d-s-l/-bloc-d-s-l.html","searchKeys":["BlocDSL","fun BlocDSL()","com.onegravity.bloc.utils.BlocDSL.BlocDSL"]},{"name":"fun BlocExecutionTests()","description":"com.onegravity.bloc.internal.BlocExecutionTests.BlocExecutionTests","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-execution-tests/-bloc-execution-tests.html","searchKeys":["BlocExecutionTests","fun BlocExecutionTests()","com.onegravity.bloc.internal.BlocExecutionTests.BlocExecutionTests"]},{"name":"fun BlocInternal()","description":"com.onegravity.bloc.utils.BlocInternal.BlocInternal","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-bloc-internal/-bloc-internal.html","searchKeys":["BlocInternal","fun BlocInternal()","com.onegravity.bloc.utils.BlocInternal.BlocInternal"]},{"name":"fun BlocLifecycleTests()","description":"com.onegravity.bloc.internal.BlocLifecycleTests.BlocLifecycleTests","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-lifecycle-tests/-bloc-lifecycle-tests.html","searchKeys":["BlocLifecycleTests","fun BlocLifecycleTests()","com.onegravity.bloc.internal.BlocLifecycleTests.BlocLifecycleTests"]},{"name":"fun BlocObservable()","description":"com.onegravity.bloc.BlocObservable.BlocObservable","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc-observable/-bloc-observable.html","searchKeys":["BlocObservable","fun BlocObservable()","com.onegravity.bloc.BlocObservable.BlocObservable"]},{"name":"fun BlocProtected()","description":"com.onegravity.bloc.utils.BlocProtected.BlocProtected","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-bloc-protected/-bloc-protected.html","searchKeys":["BlocProtected","fun BlocProtected()","com.onegravity.bloc.utils.BlocProtected.BlocProtected"]},{"name":"fun BlocState()","description":"com.onegravity.bloc.state.BlocState.BlocState","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state/-bloc-state.html","searchKeys":["BlocState","fun BlocState()","com.onegravity.bloc.state.BlocState.BlocState"]},{"name":"fun BlocStateBuilderImpl()","description":"com.onegravity.bloc.state.BlocStateBuilderImpl.BlocStateBuilderImpl","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state-builder-impl/-bloc-state-builder-impl.html","searchKeys":["BlocStateBuilderImpl","fun BlocStateBuilderImpl()","com.onegravity.bloc.state.BlocStateBuilderImpl.BlocStateBuilderImpl"]},{"name":"fun BlocViewModel()","description":"com.onegravity.bloc.BlocViewModel.BlocViewModel","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc-view-model/-bloc-view-model.html","searchKeys":["BlocViewModel","fun BlocViewModel()","com.onegravity.bloc.BlocViewModel.BlocViewModel"]},{"name":"fun Proposal.noSideEffect(): Effect<Proposal, SE>","description":"com.onegravity.bloc.internal.builder.BlocBuilder.noSideEffect","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/no-side-effect.html","searchKeys":["noSideEffect","fun Proposal.noSideEffect(): Effect<Proposal, SE>","com.onegravity.bloc.internal.builder.BlocBuilder.noSideEffect"]},{"name":"fun SimpleBlocStateBuilderImpl()","description":"com.onegravity.bloc.state.SimpleBlocStateBuilderImpl.SimpleBlocStateBuilderImpl","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-simple-bloc-state-builder-impl/-simple-bloc-state-builder-impl.html","searchKeys":["SimpleBlocStateBuilderImpl","fun SimpleBlocStateBuilderImpl()","com.onegravity.bloc.state.SimpleBlocStateBuilderImpl.SimpleBlocStateBuilderImpl"]},{"name":"fun ThunkContextNoAction(getState: GetState<State>, dispatch: Dispatcher<Action>, coroutineScope: <ERROR CLASS>)","description":"com.onegravity.bloc.utils.ThunkContextNoAction.ThunkContextNoAction","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-thunk-context-no-action/-thunk-context-no-action.html","searchKeys":["ThunkContextNoAction","fun ThunkContextNoAction(getState: GetState<State>, dispatch: Dispatcher<Action>, coroutineScope: <ERROR CLASS>)","com.onegravity.bloc.utils.ThunkContextNoAction.ThunkContextNoAction"]},{"name":"fun ViewModel.blocContext(): BlocContext","description":"com.onegravity.bloc.blocContext","location":"bloc-core/-bloc -core/com.onegravity.bloc/bloc-context.html","searchKeys":["blocContext","fun ViewModel.blocContext(): BlocContext","com.onegravity.bloc.blocContext"]},{"name":"fun initializerLifecycleTest(): <ERROR CLASS>","description":"com.onegravity.bloc.internal.BlocLifecycleTests.initializerLifecycleTest","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-lifecycle-tests/initializer-lifecycle-test.html","searchKeys":["initializerLifecycleTest","fun initializerLifecycleTest(): <ERROR CLASS>","com.onegravity.bloc.internal.BlocLifecycleTests.initializerLifecycleTest"]},{"name":"fun lifecycleTransitions(): <ERROR CLASS>","description":"com.onegravity.bloc.internal.BlocExecutionTests.lifecycleTransitions","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-execution-tests/lifecycle-transitions.html","searchKeys":["lifecycleTransitions","fun lifecycleTransitions(): <ERROR CLASS>","com.onegravity.bloc.internal.BlocExecutionTests.lifecycleTransitions"]},{"name":"fun lifecycleTransitions(): <ERROR CLASS>","description":"com.onegravity.bloc.internal.BlocLifecycleTests.lifecycleTransitions","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-lifecycle-tests/lifecycle-transitions.html","searchKeys":["lifecycleTransitions","fun lifecycleTransitions(): <ERROR CLASS>","com.onegravity.bloc.internal.BlocLifecycleTests.lifecycleTransitions"]},{"name":"fun logger(): <ERROR CLASS>","description":"com.onegravity.bloc.utils.logger","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/logger.html","searchKeys":["logger","fun logger(): <ERROR CLASS>","com.onegravity.bloc.utils.logger"]},{"name":"fun onCreate(initialize: Initializer<State, Action>)","description":"com.onegravity.bloc.internal.builder.BlocBuilder.onCreate","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/on-create.html","searchKeys":["onCreate","fun onCreate(initialize: Initializer<State, Action>)","com.onegravity.bloc.internal.builder.BlocBuilder.onCreate"]},{"name":"fun reduce(reducer: Reducer<State, Action, Proposal>)","description":"com.onegravity.bloc.internal.builder.BlocBuilder.reduce","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/reduce.html","searchKeys":["reduce","fun reduce(reducer: Reducer<State, Action, Proposal>)","com.onegravity.bloc.internal.builder.BlocBuilder.reduce"]},{"name":"fun reduceAnd(reducer: Reducer<State, Action, Effect<Proposal, SE>>)","description":"com.onegravity.bloc.internal.builder.BlocBuilder.reduceAnd","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/reduce-and.html","searchKeys":["reduceAnd","fun reduceAnd(reducer: Reducer<State, Action, Effect<Proposal, SE>>)","com.onegravity.bloc.internal.builder.BlocBuilder.reduceAnd"]},{"name":"fun reducerLifecycleTest(): <ERROR CLASS>","description":"com.onegravity.bloc.internal.BlocLifecycleTests.reducerLifecycleTest","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-lifecycle-tests/reducer-lifecycle-test.html","searchKeys":["reducerLifecycleTest","fun reducerLifecycleTest(): <ERROR CLASS>","com.onegravity.bloc.internal.BlocLifecycleTests.reducerLifecycleTest"]},{"name":"fun runTests(block: suspend () -> Unit): <ERROR CLASS>","description":"com.onegravity.bloc.runTests","location":"bloc-core/-bloc -core/com.onegravity.bloc/run-tests.html","searchKeys":["runTests","fun runTests(block: suspend () -> Unit): <ERROR CLASS>","com.onegravity.bloc.runTests"]},{"name":"fun sideEffect(sideEffect: SideEffect<State, Action, SE>)","description":"com.onegravity.bloc.internal.builder.BlocBuilder.sideEffect","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/side-effect.html","searchKeys":["sideEffect","fun sideEffect(sideEffect: SideEffect<State, Action, SE>)","com.onegravity.bloc.internal.builder.BlocBuilder.sideEffect"]},{"name":"fun thunk(thunk: Thunk<State, Action, Action>)","description":"com.onegravity.bloc.internal.builder.BlocBuilder.thunk","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/thunk.html","searchKeys":["thunk","fun thunk(thunk: Thunk<State, Action, Action>)","com.onegravity.bloc.internal.builder.BlocBuilder.thunk"]},{"name":"fun thunkLifecycleTest(): <ERROR CLASS>","description":"com.onegravity.bloc.internal.BlocLifecycleTests.thunkLifecycleTest","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-lifecycle-tests/thunk-lifecycle-test.html","searchKeys":["thunkLifecycleTest","fun thunkLifecycleTest(): <ERROR CLASS>","com.onegravity.bloc.internal.BlocLifecycleTests.thunkLifecycleTest"]},{"name":"fun where(predicate: ChildClazz.() -> Boolean): Matcher<SuperClazz, ChildClazz>","description":"com.onegravity.bloc.internal.builder.Matcher.where","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher/where.html","searchKeys":["where","fun where(predicate: ChildClazz.() -> Boolean): Matcher<SuperClazz, ChildClazz>","com.onegravity.bloc.internal.builder.Matcher.where"]},{"name":"infix fun Proposal.and(sideEffect: SE): Effect<Proposal, SE>","description":"com.onegravity.bloc.internal.builder.BlocBuilder.and","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/and.html","searchKeys":["and","infix fun Proposal.and(sideEffect: SE): Effect<Proposal, SE>","com.onegravity.bloc.internal.builder.BlocBuilder.and"]},{"name":"infix fun and(sideEffect: SideEffect): Effect<Proposal, SideEffect>","description":"com.onegravity.bloc.utils.Effect.and","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-effect/and.html","searchKeys":["and","infix fun and(sideEffect: SideEffect): Effect<Proposal, SideEffect>","com.onegravity.bloc.utils.Effect.and"]},{"name":"inline fun <A : Action> reduce(noinline reducer: Reducer<State, A, Proposal>)","description":"com.onegravity.bloc.internal.builder.BlocBuilder.reduce","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/reduce.html","searchKeys":["reduce","inline fun <A : Action> reduce(noinline reducer: Reducer<State, A, Proposal>)","com.onegravity.bloc.internal.builder.BlocBuilder.reduce"]},{"name":"inline fun <A : Action> sideEffect(noinline sideEffect: SideEffect<State, A, SE>)","description":"com.onegravity.bloc.internal.builder.BlocBuilder.sideEffect","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/side-effect.html","searchKeys":["sideEffect","inline fun <A : Action> sideEffect(noinline sideEffect: SideEffect<State, A, SE>)","com.onegravity.bloc.internal.builder.BlocBuilder.sideEffect"]},{"name":"inline fun <A : Action> thunk(noinline thunk: Thunk<State, Action, A>)","description":"com.onegravity.bloc.internal.builder.BlocBuilder.thunk","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/thunk.html","searchKeys":["thunk","inline fun <A : Action> thunk(noinline thunk: Thunk<State, Action, A>)","com.onegravity.bloc.internal.builder.BlocBuilder.thunk"]},{"name":"inline fun <A : ViewModelStoreOwner, Component : Any> A.getOrCreate(key: Any = Component::class, noinline create: (context: BlocContext) -> Component): Lazy<Component>","description":"com.onegravity.bloc.getOrCreate","location":"bloc-core/-bloc -core/com.onegravity.bloc/get-or-create.html","searchKeys":["getOrCreate","inline fun <A : ViewModelStoreOwner, Component : Any> A.getOrCreate(key: Any = Component::class, noinline create: (context: BlocContext) -> Component): Lazy<Component>","com.onegravity.bloc.getOrCreate"]},{"name":"inline fun <ActionEnum : Enum<ActionEnum>, A : ActionEnum> reduce(childClazz: A, noinline reducer: Reducer<State, A, Proposal>)","description":"com.onegravity.bloc.internal.builder.BlocBuilder.reduce","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/reduce.html","searchKeys":["reduce","inline fun <ActionEnum : Enum<ActionEnum>, A : ActionEnum> reduce(childClazz: A, noinline reducer: Reducer<State, A, Proposal>)","com.onegravity.bloc.internal.builder.BlocBuilder.reduce"]},{"name":"inline fun <ActionEnum : Enum<ActionEnum>, A : ActionEnum> reduceAnd(childClazz: A, noinline reducer: Reducer<State, Action, Effect<Proposal, SE>>)","description":"com.onegravity.bloc.internal.builder.BlocBuilder.reduceAnd","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/reduce-and.html","searchKeys":["reduceAnd","inline fun <ActionEnum : Enum<ActionEnum>, A : ActionEnum> reduceAnd(childClazz: A, noinline reducer: Reducer<State, Action, Effect<Proposal, SE>>)","com.onegravity.bloc.internal.builder.BlocBuilder.reduceAnd"]},{"name":"inline fun <ActionEnum : Enum<ActionEnum>, A : ActionEnum> sideEffect(childClazz: A, noinline sideEffect: SideEffect<State, A, SE>)","description":"com.onegravity.bloc.internal.builder.BlocBuilder.sideEffect","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/side-effect.html","searchKeys":["sideEffect","inline fun <ActionEnum : Enum<ActionEnum>, A : ActionEnum> sideEffect(childClazz: A, noinline sideEffect: SideEffect<State, A, SE>)","com.onegravity.bloc.internal.builder.BlocBuilder.sideEffect"]},{"name":"inline fun <ActionEnum : Enum<ActionEnum>, A : ActionEnum> thunk(childClazz: A, noinline thunk: Thunk<State, ActionEnum, A>)","description":"com.onegravity.bloc.internal.builder.BlocBuilder.thunk","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/thunk.html","searchKeys":["thunk","inline fun <ActionEnum : Enum<ActionEnum>, A : ActionEnum> thunk(childClazz: A, noinline thunk: Thunk<State, ActionEnum, A>)","com.onegravity.bloc.internal.builder.BlocBuilder.thunk"]},{"name":"inline fun <SuperClazz : Any, ChildClazz : SuperClazz> any(value: SuperClazz? = null): Matcher<SuperClazz, ChildClazz>","description":"com.onegravity.bloc.internal.builder.Matcher.Companion.any","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher/-companion/any.html","searchKeys":["any","inline fun <SuperClazz : Any, ChildClazz : SuperClazz> any(value: SuperClazz? = null): Matcher<SuperClazz, ChildClazz>","com.onegravity.bloc.internal.builder.Matcher.Companion.any"]},{"name":"inline fun <SuperClazz : Any, ChildClazz : SuperClazz> eq(value: ChildClazz): Matcher<SuperClazz, ChildClazz>","description":"com.onegravity.bloc.internal.builder.Matcher.Companion.eq","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher/-companion/eq.html","searchKeys":["eq","inline fun <SuperClazz : Any, ChildClazz : SuperClazz> eq(value: ChildClazz): Matcher<SuperClazz, ChildClazz>","com.onegravity.bloc.internal.builder.Matcher.Companion.eq"]},{"name":"inline fun <SuperClazz : Enum<SuperClazz>, ChildClazz : SuperClazz> eq(value: ChildClazz): Matcher<SuperClazz, ChildClazz>","description":"com.onegravity.bloc.internal.builder.Matcher.Companion.eq","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher/-companion/eq.html","searchKeys":["eq","inline fun <SuperClazz : Enum<SuperClazz>, ChildClazz : SuperClazz> eq(value: ChildClazz): Matcher<SuperClazz, ChildClazz>","com.onegravity.bloc.internal.builder.Matcher.Companion.eq"]},{"name":"inline fun <T : ViewBinding> Fragment.viewBinding(): FragmentViewBindingDelegate<T>","description":"com.onegravity.bloc.utils.viewBinding","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/view-binding.html","searchKeys":["viewBinding","inline fun <T : ViewBinding> Fragment.viewBinding(): FragmentViewBindingDelegate<T>","com.onegravity.bloc.utils.viewBinding"]},{"name":"interface BlocContext","description":"com.onegravity.bloc.BlocContext","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc-context/index.html","searchKeys":["BlocContext","interface BlocContext","com.onegravity.bloc.BlocContext"]},{"name":"interface BlocObservableOwner<out State : Any, out SideEffect : Any>","description":"com.onegravity.bloc.BlocObservableOwner","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc-observable-owner/index.html","searchKeys":["BlocObservableOwner","interface BlocObservableOwner<out State : Any, out SideEffect : Any>","com.onegravity.bloc.BlocObservableOwner"]},{"name":"interface BlocOwner<out State : Any, in Action : Any, SideEffect : Any, Proposal : Any>","description":"com.onegravity.bloc.BlocOwner","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc-owner/index.html","searchKeys":["BlocOwner","interface BlocOwner<out State : Any, in Action : Any, SideEffect : Any, Proposal : Any>","com.onegravity.bloc.BlocOwner"]},{"name":"interface BlocStateBuilder<State : Any, Proposal : Any>","description":"com.onegravity.bloc.state.BlocStateBuilder","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state-builder/index.html","searchKeys":["BlocStateBuilder","interface BlocStateBuilder<State : Any, Proposal : Any>","com.onegravity.bloc.state.BlocStateBuilder"]},{"name":"interface Logger","description":"com.onegravity.bloc.utils.Logger","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-logger/index.html","searchKeys":["Logger","interface Logger","com.onegravity.bloc.utils.Logger"]},{"name":"interface Sink<in Value : Any>","description":"com.onegravity.bloc.Sink","location":"bloc-core/-bloc -core/com.onegravity.bloc/-sink/index.html","searchKeys":["Sink","interface Sink<in Value : Any>","com.onegravity.bloc.Sink"]},{"name":"interface StateStream<out Value : Any>","description":"com.onegravity.bloc.StateStream","location":"bloc-core/-bloc -core/com.onegravity.bloc/-state-stream/index.html","searchKeys":["StateStream","interface StateStream<out Value : Any>","com.onegravity.bloc.StateStream"]},{"name":"internal class BlocContextImpl(lifecycle: <ERROR CLASS>) : BlocContext","description":"com.onegravity.bloc.internal.BlocContextImpl","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-context-impl/index.html","searchKeys":["BlocContextImpl","internal class BlocContextImpl(lifecycle: <ERROR CLASS>) : BlocContext","com.onegravity.bloc.internal.BlocContextImpl"]},{"name":"internal class BlocImpl<State : Any, Action : Any, SideEffect : Any, Proposal : Any>(blocContext: BlocContext, blocState: BlocState<State, Proposal>, initialize: Initializer<State, Action>?, thunks: List<MatcherThunk<State, Action, Action>>, reducers: List<MatcherReducer<State, Action, Effect<Proposal, SideEffect>>>, initDispatcher: <ERROR CLASS>, thunkDispatcher: <ERROR CLASS>, reduceDispatcher: <ERROR CLASS>) : Bloc<State, Action, SideEffect> , BlocExtension<State, Action, SideEffect, Proposal> ","description":"com.onegravity.bloc.internal.BlocImpl","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-impl/index.html","searchKeys":["BlocImpl","internal class BlocImpl<State : Any, Action : Any, SideEffect : Any, Proposal : Any>(blocContext: BlocContext, blocState: BlocState<State, Proposal>, initialize: Initializer<State, Action>?, thunks: List<MatcherThunk<State, Action, Action>>, reducers: List<MatcherReducer<State, Action, Effect<Proposal, SideEffect>>>, initDispatcher: <ERROR CLASS>, thunkDispatcher: <ERROR CLASS>, reduceDispatcher: <ERROR CLASS>) : Bloc<State, Action, SideEffect> , BlocExtension<State, Action, SideEffect, Proposal> ","com.onegravity.bloc.internal.BlocImpl"]},{"name":"internal class BlocStateBuilderImpl<State : Any, Proposal : Any> : BlocStateBuilder<State, Proposal> ","description":"com.onegravity.bloc.state.BlocStateBuilderImpl","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state-builder-impl/index.html","searchKeys":["BlocStateBuilderImpl","internal class BlocStateBuilderImpl<State : Any, Proposal : Any> : BlocStateBuilder<State, Proposal> ","com.onegravity.bloc.state.BlocStateBuilderImpl"]},{"name":"internal class BlocViewModel : ViewModel","description":"com.onegravity.bloc.BlocViewModel","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc-view-model/index.html","searchKeys":["BlocViewModel","internal class BlocViewModel : ViewModel","com.onegravity.bloc.BlocViewModel"]},{"name":"internal class InitializeProcessor<State : Any, Action : Any, Proposal : Any>(blocContext: BlocContext, blocState: BlocState<State, Proposal>, initialize: Initializer<State, Action>?, initDispatcher: <ERROR CLASS>, dispatch: (Action) -> Unit)","description":"com.onegravity.bloc.internal.InitializeProcessor","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-initialize-processor/index.html","searchKeys":["InitializeProcessor","internal class InitializeProcessor<State : Any, Action : Any, Proposal : Any>(blocContext: BlocContext, blocState: BlocState<State, Proposal>, initialize: Initializer<State, Action>?, initDispatcher: <ERROR CLASS>, dispatch: (Action) -> Unit)","com.onegravity.bloc.internal.InitializeProcessor"]},{"name":"internal class ReduceProcessor<State : Any, Action : Any, SideEffect : Any, Proposal : Any>(blocContext: BlocContext, blocState: BlocState<State, Proposal>, reducers: List<MatcherReducer<State, Action, Effect<Proposal, SideEffect>>>, reduceDispatcher: <ERROR CLASS>)","description":"com.onegravity.bloc.internal.ReduceProcessor","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/index.html","searchKeys":["ReduceProcessor","internal class ReduceProcessor<State : Any, Action : Any, SideEffect : Any, Proposal : Any>(blocContext: BlocContext, blocState: BlocState<State, Proposal>, reducers: List<MatcherReducer<State, Action, Effect<Proposal, SideEffect>>>, reduceDispatcher: <ERROR CLASS>)","com.onegravity.bloc.internal.ReduceProcessor"]},{"name":"internal class SimpleBlocStateBuilderImpl<State : Any> : SimpleBlocStateBuilder<State> ","description":"com.onegravity.bloc.state.SimpleBlocStateBuilderImpl","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-simple-bloc-state-builder-impl/index.html","searchKeys":["SimpleBlocStateBuilderImpl","internal class SimpleBlocStateBuilderImpl<State : Any> : SimpleBlocStateBuilder<State> ","com.onegravity.bloc.state.SimpleBlocStateBuilderImpl"]},{"name":"internal class ThunkProcessor<State : Any, Action : Any, Proposal : Any>(blocContext: BlocContext, blocState: BlocState<State, Proposal>, thunks: List<MatcherThunk<State, Action, Action>>, thunkDispatcher: <ERROR CLASS>, runReducers: (Action) -> Unit)","description":"com.onegravity.bloc.internal.ThunkProcessor","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-thunk-processor/index.html","searchKeys":["ThunkProcessor","internal class ThunkProcessor<State : Any, Action : Any, Proposal : Any>(blocContext: BlocContext, blocState: BlocState<State, Proposal>, thunks: List<MatcherThunk<State, Action, Action>>, thunkDispatcher: <ERROR CLASS>, runReducers: (Action) -> Unit)","com.onegravity.bloc.internal.ThunkProcessor"]},{"name":"internal data class MatcherReducer<State : Any, Action : Any, Proposal : Any>(matcher: Matcher<Action, Action>?, reducer: Reducer<State, Action, Proposal>, expectsProposal: Boolean)","description":"com.onegravity.bloc.internal.builder.MatcherReducer","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher-reducer/index.html","searchKeys":["MatcherReducer","internal data class MatcherReducer<State : Any, Action : Any, Proposal : Any>(matcher: Matcher<Action, Action>?, reducer: Reducer<State, Action, Proposal>, expectsProposal: Boolean)","com.onegravity.bloc.internal.builder.MatcherReducer"]},{"name":"internal data class MatcherThunk<State : Any, Action : Any, A : Action>(matcher: Matcher<Action, Action>?, thunk: Thunk<State, Action, A>)","description":"com.onegravity.bloc.internal.builder.MatcherThunk","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher-thunk/index.html","searchKeys":["MatcherThunk","internal data class MatcherThunk<State : Any, Action : Any, A : Action>(matcher: Matcher<Action, Action>?, thunk: Thunk<State, Action, A>)","com.onegravity.bloc.internal.builder.MatcherThunk"]},{"name":"internal data class ReduceChannelElement<State : Any, Action : Any, SideEffect : Any, Proposal : Any>(action: Action?, reducer: ReducerNoAction<State, Effect<Proposal, SideEffect>>?)","description":"com.onegravity.bloc.internal.ReduceChannelElement","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-channel-element/index.html","searchKeys":["ReduceChannelElement","internal data class ReduceChannelElement<State : Any, Action : Any, SideEffect : Any, Proposal : Any>(action: Action?, reducer: ReducerNoAction<State, Effect<Proposal, SideEffect>>?)","com.onegravity.bloc.internal.ReduceChannelElement"]},{"name":"internal fun Any.trimOutput(): <ERROR CLASS>","description":"com.onegravity.bloc.internal.trimOutput","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/trim-output.html","searchKeys":["trimOutput","internal fun Any.trimOutput(): <ERROR CLASS>","com.onegravity.bloc.internal.trimOutput"]},{"name":"internal fun build(): <ERROR CLASS>","description":"com.onegravity.bloc.state.BlocStateBuilderImpl.build","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state-builder-impl/build.html","searchKeys":["build","internal fun build(): <ERROR CLASS>","com.onegravity.bloc.state.BlocStateBuilderImpl.build"]},{"name":"internal fun build(context: BlocContext, blocState: BlocState<State, Proposal>): Bloc<State, Action, SE>","description":"com.onegravity.bloc.internal.builder.BlocBuilder.build","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/build.html","searchKeys":["build","internal fun build(context: BlocContext, blocState: BlocState<State, Proposal>): Bloc<State, Action, SE>","com.onegravity.bloc.internal.builder.BlocBuilder.build"]},{"name":"internal fun clazzName(): String","description":"com.onegravity.bloc.internal.builder.Matcher.clazzName","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher/clazz-name.html","searchKeys":["clazzName","internal fun clazzName(): String","com.onegravity.bloc.internal.builder.Matcher.clazzName"]},{"name":"internal fun initialize(initialize: Initializer<State, Action>): <ERROR CLASS>","description":"com.onegravity.bloc.internal.InitializeProcessor.initialize","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-initialize-processor/initialize.html","searchKeys":["initialize","internal fun initialize(initialize: Initializer<State, Action>): <ERROR CLASS>","com.onegravity.bloc.internal.InitializeProcessor.initialize"]},{"name":"internal fun matches(value: SuperClazz): <ERROR CLASS>","description":"com.onegravity.bloc.internal.builder.Matcher.matches","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher/matches.html","searchKeys":["matches","internal fun matches(value: SuperClazz): <ERROR CLASS>","com.onegravity.bloc.internal.builder.Matcher.matches"]},{"name":"internal fun reduce(reduce: ReducerNoAction<State, Effect<Proposal, SideEffect>>)","description":"com.onegravity.bloc.internal.ReduceProcessor.reduce","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/reduce.html","searchKeys":["reduce","internal fun reduce(reduce: ReducerNoAction<State, Effect<Proposal, SideEffect>>)","com.onegravity.bloc.internal.ReduceProcessor.reduce"]},{"name":"internal fun send(action: Action)","description":"com.onegravity.bloc.internal.ReduceProcessor.send","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/send.html","searchKeys":["send","internal fun send(action: Action)","com.onegravity.bloc.internal.ReduceProcessor.send"]},{"name":"internal fun send(action: Action)","description":"com.onegravity.bloc.internal.ThunkProcessor.send","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-thunk-processor/send.html","searchKeys":["send","internal fun send(action: Action)","com.onegravity.bloc.internal.ThunkProcessor.send"]},{"name":"internal fun thunk(thunk: ThunkNoAction<State, Action>): <ERROR CLASS>","description":"com.onegravity.bloc.internal.ThunkProcessor.thunk","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-thunk-processor/thunk.html","searchKeys":["thunk","internal fun thunk(thunk: ThunkNoAction<State, Action>): <ERROR CLASS>","com.onegravity.bloc.internal.ThunkProcessor.thunk"]},{"name":"internal interface BlocExtension<State : Any, Action : Any, SideEffect : Any, Proposal : Any>","description":"com.onegravity.bloc.internal.BlocExtension","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-extension/index.html","searchKeys":["BlocExtension","internal interface BlocExtension<State : Any, Action : Any, SideEffect : Any, Proposal : Any>","com.onegravity.bloc.internal.BlocExtension"]},{"name":"internal interface SimpleBlocStateBuilder<State : Any>","description":"com.onegravity.bloc.state.SimpleBlocStateBuilder","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-simple-bloc-state-builder/index.html","searchKeys":["SimpleBlocStateBuilder","internal interface SimpleBlocStateBuilder<State : Any>","com.onegravity.bloc.state.SimpleBlocStateBuilder"]},{"name":"internal object LoggerImpl : Logger","description":"com.onegravity.bloc.utils.LoggerImpl","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-logger-impl/index.html","searchKeys":["LoggerImpl","internal object LoggerImpl : Logger","com.onegravity.bloc.utils.LoggerImpl"]},{"name":"internal open class DefaultBlocState<State : Any, Proposal : Any>(initialState: State, accept: Acceptor<Proposal, State>) : BlocStateBase<State, Proposal> ","description":"com.onegravity.bloc.state.DefaultBlocState","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-default-bloc-state/index.html","searchKeys":["DefaultBlocState","internal open class DefaultBlocState<State : Any, Proposal : Any>(initialState: State, accept: Acceptor<Proposal, State>) : BlocStateBase<State, Proposal> ","com.onegravity.bloc.state.DefaultBlocState"]},{"name":"internal val expectsProposal: Boolean","description":"com.onegravity.bloc.internal.builder.MatcherReducer.expectsProposal","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher-reducer/expects-proposal.html","searchKeys":["expectsProposal","internal val expectsProposal: Boolean","com.onegravity.bloc.internal.builder.MatcherReducer.expectsProposal"]},{"name":"internal val matcher: Matcher<Action, Action>?","description":"com.onegravity.bloc.internal.builder.MatcherReducer.matcher","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher-reducer/matcher.html","searchKeys":["matcher","internal val matcher: Matcher<Action, Action>?","com.onegravity.bloc.internal.builder.MatcherReducer.matcher"]},{"name":"internal val matcher: Matcher<Action, Action>?","description":"com.onegravity.bloc.internal.builder.MatcherThunk.matcher","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher-thunk/matcher.html","searchKeys":["matcher","internal val matcher: Matcher<Action, Action>?","com.onegravity.bloc.internal.builder.MatcherThunk.matcher"]},{"name":"internal val reducer: Reducer<State, Action, Proposal>","description":"com.onegravity.bloc.internal.builder.MatcherReducer.reducer","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher-reducer/reducer.html","searchKeys":["reducer","internal val reducer: Reducer<State, Action, Proposal>","com.onegravity.bloc.internal.builder.MatcherReducer.reducer"]},{"name":"internal val sideEffects: <ERROR CLASS><Value>","description":"com.onegravity.bloc.internal.ReduceProcessor.sideEffects","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/side-effects.html","searchKeys":["sideEffects","internal val sideEffects: <ERROR CLASS><Value>","com.onegravity.bloc.internal.ReduceProcessor.sideEffects"]},{"name":"internal val thunk: Thunk<State, Action, A>","description":"com.onegravity.bloc.internal.builder.MatcherThunk.thunk","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher-thunk/thunk.html","searchKeys":["thunk","internal val thunk: Thunk<State, Action, A>","com.onegravity.bloc.internal.builder.MatcherThunk.thunk"]},{"name":"object Companion","description":"com.onegravity.bloc.internal.builder.Matcher.Companion","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher/-companion/index.html","searchKeys":["Companion","object Companion","com.onegravity.bloc.internal.builder.Matcher.Companion"]},{"name":"object Decrement : BlocExecutionTests.Action","description":"com.onegravity.bloc.internal.BlocExecutionTests.Decrement","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-execution-tests/-decrement/index.html","searchKeys":["Decrement","object Decrement : BlocExecutionTests.Action","com.onegravity.bloc.internal.BlocExecutionTests.Decrement"]},{"name":"object Increment : BlocExecutionTests.Action","description":"com.onegravity.bloc.internal.BlocExecutionTests.Increment","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-execution-tests/-increment/index.html","searchKeys":["Increment","object Increment : BlocExecutionTests.Action","com.onegravity.bloc.internal.BlocExecutionTests.Increment"]},{"name":"open fun Proposal.noSideEffect(): Effect<Proposal, SideEffect>","description":"com.onegravity.bloc.BlocOwner.noSideEffect","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc-owner/no-side-effect.html","searchKeys":["noSideEffect","open fun Proposal.noSideEffect(): Effect<Proposal, SideEffect>","com.onegravity.bloc.BlocOwner.noSideEffect"]},{"name":"open infix fun Proposal.and(sideEffect: SideEffect): Effect<Proposal, SideEffect>","description":"com.onegravity.bloc.BlocOwner.and","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc-owner/and.html","searchKeys":["and","open infix fun Proposal.and(sideEffect: SideEffect): Effect<Proposal, SideEffect>","com.onegravity.bloc.BlocOwner.and"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.onegravity.bloc.internal.builder.Matcher.equals","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.onegravity.bloc.internal.builder.Matcher.equals"]},{"name":"open operator override fun getValue(thisRef: Fragment, property: KProperty<*>): T","description":"com.onegravity.bloc.utils.FragmentViewBindingDelegate.getValue","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-fragment-view-binding-delegate/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: Fragment, property: KProperty<*>): T","com.onegravity.bloc.utils.FragmentViewBindingDelegate.getValue"]},{"name":"open override fun accept(accept: Acceptor<Proposal, State>)","description":"com.onegravity.bloc.state.BlocStateBuilderImpl.accept","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state-builder-impl/accept.html","searchKeys":["accept","open override fun accept(accept: Acceptor<Proposal, State>)","com.onegravity.bloc.state.BlocStateBuilderImpl.accept"]},{"name":"open override fun build(): DefaultBlocState<State, State>","description":"com.onegravity.bloc.state.SimpleBlocStateBuilderImpl.build","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-simple-bloc-state-builder-impl/build.html","searchKeys":["build","open override fun build(): DefaultBlocState<State, State>","com.onegravity.bloc.state.SimpleBlocStateBuilderImpl.build"]},{"name":"open override fun d(msg: String)","description":"com.onegravity.bloc.utils.LoggerImpl.d","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-logger-impl/d.html","searchKeys":["d","open override fun d(msg: String)","com.onegravity.bloc.utils.LoggerImpl.d"]},{"name":"open override fun e(msg: String, t: Throwable?)","description":"com.onegravity.bloc.utils.LoggerImpl.e","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-logger-impl/e.html","searchKeys":["e","open override fun e(msg: String, t: Throwable?)","com.onegravity.bloc.utils.LoggerImpl.e"]},{"name":"open override fun hashCode(): Int","description":"com.onegravity.bloc.internal.builder.Matcher.hashCode","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.onegravity.bloc.internal.builder.Matcher.hashCode"]},{"name":"open override fun i(msg: String)","description":"com.onegravity.bloc.utils.LoggerImpl.i","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-logger-impl/i.html","searchKeys":["i","open override fun i(msg: String)","com.onegravity.bloc.utils.LoggerImpl.i"]},{"name":"open override fun initialize(initialize: Initializer<State, Action>)","description":"com.onegravity.bloc.internal.BlocImpl.initialize","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-impl/initialize.html","searchKeys":["initialize","open override fun initialize(initialize: Initializer<State, Action>)","com.onegravity.bloc.internal.BlocImpl.initialize"]},{"name":"open override fun isInitialized(): Boolean","description":"com.onegravity.bloc.ComponentLazy.isInitialized","location":"bloc-core/-bloc -core/com.onegravity.bloc/-component-lazy/is-initialized.html","searchKeys":["isInitialized","open override fun isInitialized(): Boolean","com.onegravity.bloc.ComponentLazy.isInitialized"]},{"name":"open override fun observe(observerLifecycle: <ERROR CLASS>, state: BlocObserver<State>?, sideEffect: BlocObserver<SideEffect>?)","description":"com.onegravity.bloc.internal.BlocImpl.observe","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-impl/observe.html","searchKeys":["observe","open override fun observe(observerLifecycle: <ERROR CLASS>, state: BlocObserver<State>?, sideEffect: BlocObserver<SideEffect>?)","com.onegravity.bloc.internal.BlocImpl.observe"]},{"name":"open override fun onDestroy()","description":"com.onegravity.bloc.ComponentLazy.InstanceWrapper.onDestroy","location":"bloc-core/-bloc -core/com.onegravity.bloc/-component-lazy/-instance-wrapper/on-destroy.html","searchKeys":["onDestroy","open override fun onDestroy()","com.onegravity.bloc.ComponentLazy.InstanceWrapper.onDestroy"]},{"name":"open override fun reduce(reduce: ReducerNoAction<State, Effect<Proposal, SideEffect>>)","description":"com.onegravity.bloc.internal.BlocImpl.reduce","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-impl/reduce.html","searchKeys":["reduce","open override fun reduce(reduce: ReducerNoAction<State, Effect<Proposal, SideEffect>>)","com.onegravity.bloc.internal.BlocImpl.reduce"]},{"name":"open override fun send(action: Action)","description":"com.onegravity.bloc.internal.BlocImpl.send","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-impl/send.html","searchKeys":["send","open override fun send(action: Action)","com.onegravity.bloc.internal.BlocImpl.send"]},{"name":"open override fun send(proposal: Proposal)","description":"com.onegravity.bloc.state.DefaultBlocState.send","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-default-bloc-state/send.html","searchKeys":["send","open override fun send(proposal: Proposal)","com.onegravity.bloc.state.DefaultBlocState.send"]},{"name":"open override fun send(value: Value)","description":"com.onegravity.bloc.utils.MutableStateStream.send","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-mutable-state-stream/send.html","searchKeys":["send","open override fun send(value: Value)","com.onegravity.bloc.utils.MutableStateStream.send"]},{"name":"open override fun thunk(thunk: ThunkNoAction<State, Action>)","description":"com.onegravity.bloc.internal.BlocImpl.thunk","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-impl/thunk.html","searchKeys":["thunk","open override fun thunk(thunk: ThunkNoAction<State, Action>)","com.onegravity.bloc.internal.BlocImpl.thunk"]},{"name":"open override fun w(msg: String)","description":"com.onegravity.bloc.utils.LoggerImpl.w","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-logger-impl/w.html","searchKeys":["w","open override fun w(msg: String)","com.onegravity.bloc.utils.LoggerImpl.w"]},{"name":"open override val sideEffects: <ERROR CLASS><Value>","description":"com.onegravity.bloc.internal.BlocImpl.sideEffects","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-impl/side-effects.html","searchKeys":["sideEffects","open override val sideEffects: <ERROR CLASS><Value>","com.onegravity.bloc.internal.BlocImpl.sideEffects"]},{"name":"open override val value: Component","description":"com.onegravity.bloc.ComponentLazy.value","location":"bloc-core/-bloc -core/com.onegravity.bloc/-component-lazy/value.html","searchKeys":["value","open override val value: Component","com.onegravity.bloc.ComponentLazy.value"]},{"name":"open override val value: State","description":"com.onegravity.bloc.internal.BlocImpl.value","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-impl/value.html","searchKeys":["value","open override val value: State","com.onegravity.bloc.internal.BlocImpl.value"]},{"name":"open override val value: State","description":"com.onegravity.bloc.state.BlocStateBase.value","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state-base/value.html","searchKeys":["value","open override val value: State","com.onegravity.bloc.state.BlocStateBase.value"]},{"name":"open override val value: Value","description":"com.onegravity.bloc.utils.MutableStateStream.value","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-mutable-state-stream/value.html","searchKeys":["value","open override val value: Value","com.onegravity.bloc.utils.MutableStateStream.value"]},{"name":"open override var initialState: State","description":"com.onegravity.bloc.state.BlocStateBuilderImpl.initialState","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state-builder-impl/initial-state.html","searchKeys":["initialState","open override var initialState: State","com.onegravity.bloc.state.BlocStateBuilderImpl.initialState"]},{"name":"open override var initialState: State","description":"com.onegravity.bloc.state.SimpleBlocStateBuilderImpl.initialState","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-simple-bloc-state-builder-impl/initial-state.html","searchKeys":["initialState","open override var initialState: State","com.onegravity.bloc.state.SimpleBlocStateBuilderImpl.initialState"]},{"name":"open suspend override fun collect(collector: <ERROR CLASS><State>)","description":"com.onegravity.bloc.internal.BlocImpl.collect","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-impl/collect.html","searchKeys":["collect","open suspend override fun collect(collector: <ERROR CLASS><State>)","com.onegravity.bloc.internal.BlocImpl.collect"]},{"name":"open suspend override fun collect(collector: <ERROR CLASS><State>)","description":"com.onegravity.bloc.state.BlocStateBase.collect","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state-base/collect.html","searchKeys":["collect","open suspend override fun collect(collector: <ERROR CLASS><State>)","com.onegravity.bloc.state.BlocStateBase.collect"]},{"name":"open suspend override fun collect(collector: <ERROR CLASS><Value>)","description":"com.onegravity.bloc.utils.MutableStateStream.collect","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-mutable-state-stream/collect.html","searchKeys":["collect","open suspend override fun collect(collector: <ERROR CLASS><Value>)","com.onegravity.bloc.utils.MutableStateStream.collect"]},{"name":"open val lifecycle: <ERROR CLASS>","description":"com.onegravity.bloc.internal.BlocContextImpl.lifecycle","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-context-impl/lifecycle.html","searchKeys":["lifecycle","open val lifecycle: <ERROR CLASS>","com.onegravity.bloc.internal.BlocContextImpl.lifecycle"]},{"name":"private class InstanceWrapper<C>(component: C) : InstanceKeeper.Instance","description":"com.onegravity.bloc.ComponentLazy.InstanceWrapper","location":"bloc-core/-bloc -core/com.onegravity.bloc/-component-lazy/-instance-wrapper/index.html","searchKeys":["InstanceWrapper","private class InstanceWrapper<C>(component: C) : InstanceKeeper.Instance","com.onegravity.bloc.ComponentLazy.InstanceWrapper"]},{"name":"private fun <ERROR CLASS>.illegalTransition(transition: <ERROR CLASS>.() -> Unit)","description":"com.onegravity.bloc.internal.BlocLifecycleTests.illegalTransition","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-lifecycle-tests/illegal-transition.html","searchKeys":["illegalTransition","private fun <ERROR CLASS>.illegalTransition(transition: <ERROR CLASS>.() -> Unit)","com.onegravity.bloc.internal.BlocLifecycleTests.illegalTransition"]},{"name":"private fun <ERROR CLASS>.legalTransition(transition: <ERROR CLASS>.() -> Unit)","description":"com.onegravity.bloc.internal.BlocLifecycleTests.legalTransition","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-lifecycle-tests/legal-transition.html","searchKeys":["legalTransition","private fun <ERROR CLASS>.legalTransition(transition: <ERROR CLASS>.() -> Unit)","com.onegravity.bloc.internal.BlocLifecycleTests.legalTransition"]},{"name":"private fun <State : Any, Action : Any, SideEffect : Any> Bloc<State, Action, SideEffect>.toLiveData(scope: CoroutineScope): LiveData<State>","description":"com.onegravity.bloc.toLiveData","location":"bloc-core/-bloc -core/com.onegravity.bloc/to-live-data.html","searchKeys":["toLiveData","private fun <State : Any, Action : Any, SideEffect : Any> Bloc<State, Action, SideEffect>.toLiveData(scope: CoroutineScope): LiveData<State>","com.onegravity.bloc.toLiveData"]},{"name":"private fun Action()","description":"com.onegravity.bloc.internal.BlocExecutionTests.Action.Action","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-execution-tests/-action/-action.html","searchKeys":["Action","private fun Action()","com.onegravity.bloc.internal.BlocExecutionTests.Action.Action"]},{"name":"private fun ViewModel.viewModelLifeCycle(): Lifecycle","description":"com.onegravity.bloc.viewModelLifeCycle","location":"bloc-core/-bloc -core/com.onegravity.bloc/view-model-life-cycle.html","searchKeys":["viewModelLifeCycle","private fun ViewModel.viewModelLifeCycle(): Lifecycle","com.onegravity.bloc.viewModelLifeCycle"]},{"name":"private fun blocViewModel(storeOwner: ViewModelStoreOwner): BlocViewModel","description":"com.onegravity.bloc.ComponentLazy.blocViewModel","location":"bloc-core/-bloc -core/com.onegravity.bloc/-component-lazy/bloc-view-model.html","searchKeys":["blocViewModel","private fun blocViewModel(storeOwner: ViewModelStoreOwner): BlocViewModel","com.onegravity.bloc.ComponentLazy.blocViewModel"]},{"name":"private fun createComponent(): Component","description":"com.onegravity.bloc.ComponentLazy.createComponent","location":"bloc-core/-bloc -core/com.onegravity.bloc/-component-lazy/create-component.html","searchKeys":["createComponent","private fun createComponent(): Component","com.onegravity.bloc.ComponentLazy.createComponent"]},{"name":"private fun getMatchingReducers(action: Action): <ERROR CLASS>","description":"com.onegravity.bloc.internal.ReduceProcessor.getMatchingReducers","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/get-matching-reducers.html","searchKeys":["getMatchingReducers","private fun getMatchingReducers(action: Action): <ERROR CLASS>","com.onegravity.bloc.internal.ReduceProcessor.getMatchingReducers"]},{"name":"private fun nextThunkDispatcher(action: Action, startIndex: Int = 0): Dispatcher<Action>","description":"com.onegravity.bloc.internal.ThunkProcessor.nextThunkDispatcher","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-thunk-processor/next-thunk-dispatcher.html","searchKeys":["nextThunkDispatcher","private fun nextThunkDispatcher(action: Action, startIndex: Int = 0): Dispatcher<Action>","com.onegravity.bloc.internal.ThunkProcessor.nextThunkDispatcher"]},{"name":"private fun processQueue()","description":"com.onegravity.bloc.internal.ReduceProcessor.processQueue","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/process-queue.html","searchKeys":["processQueue","private fun processQueue()","com.onegravity.bloc.internal.ReduceProcessor.processQueue"]},{"name":"private fun processQueue()","description":"com.onegravity.bloc.internal.ThunkProcessor.processQueue","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-thunk-processor/process-queue.html","searchKeys":["processQueue","private fun processQueue()","com.onegravity.bloc.internal.ThunkProcessor.processQueue"]},{"name":"private fun runReducer(reduce: ReducerNoAction<State, Effect<Proposal, SideEffect>>)","description":"com.onegravity.bloc.internal.ReduceProcessor.runReducer","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/run-reducer.html","searchKeys":["runReducer","private fun runReducer(reduce: ReducerNoAction<State, Effect<Proposal, SideEffect>>)","com.onegravity.bloc.internal.ReduceProcessor.runReducer"]},{"name":"private suspend fun Reducer<State, Action, Effect<Proposal, SideEffect>>.runReducer(action: Action)","description":"com.onegravity.bloc.internal.ReduceProcessor.runReducer","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/run-reducer.html","searchKeys":["runReducer","private suspend fun Reducer<State, Action, Effect<Proposal, SideEffect>>.runReducer(action: Action)","com.onegravity.bloc.internal.ReduceProcessor.runReducer"]},{"name":"private suspend fun postSideEffects(sideEffects: List<SideEffect>)","description":"com.onegravity.bloc.internal.ReduceProcessor.postSideEffects","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/post-side-effects.html","searchKeys":["postSideEffects","private suspend fun postSideEffects(sideEffects: List<SideEffect>)","com.onegravity.bloc.internal.ReduceProcessor.postSideEffects"]},{"name":"private suspend fun runReducers(action: Action)","description":"com.onegravity.bloc.internal.ReduceProcessor.runReducers","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/run-reducers.html","searchKeys":["runReducers","private suspend fun runReducers(action: Action)","com.onegravity.bloc.internal.ReduceProcessor.runReducers"]},{"name":"private suspend fun runThunk(action: Action, index: Int)","description":"com.onegravity.bloc.internal.ThunkProcessor.runThunk","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-thunk-processor/run-thunk.html","searchKeys":["runThunk","private suspend fun runThunk(action: Action, index: Int)","com.onegravity.bloc.internal.ThunkProcessor.runThunk"]},{"name":"private suspend fun runThunks(action: Action, thunkIndex: Int = 0)","description":"com.onegravity.bloc.internal.ThunkProcessor.runThunks","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-thunk-processor/run-thunks.html","searchKeys":["runThunks","private suspend fun runThunks(action: Action, thunkIndex: Int = 0)","com.onegravity.bloc.internal.ThunkProcessor.runThunks"]},{"name":"private val _reducers: <ERROR CLASS>","description":"com.onegravity.bloc.internal.builder.BlocBuilder._reducers","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/_reducers.html","searchKeys":["_reducers","private val _reducers: <ERROR CLASS>","com.onegravity.bloc.internal.builder.BlocBuilder._reducers"]},{"name":"private val _thunks: <ERROR CLASS>","description":"com.onegravity.bloc.internal.builder.BlocBuilder._thunks","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/_thunks.html","searchKeys":["_thunks","private val _thunks: <ERROR CLASS>","com.onegravity.bloc.internal.builder.BlocBuilder._thunks"]},{"name":"private val accept: Acceptor<Proposal, State>","description":"com.onegravity.bloc.state.DefaultBlocState.accept","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-default-bloc-state/accept.html","searchKeys":["accept","private val accept: Acceptor<Proposal, State>","com.onegravity.bloc.state.DefaultBlocState.accept"]},{"name":"private val blocState: BlocState<State, Proposal>","description":"com.onegravity.bloc.internal.BlocImpl.blocState","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-impl/bloc-state.html","searchKeys":["blocState","private val blocState: BlocState<State, Proposal>","com.onegravity.bloc.internal.BlocImpl.blocState"]},{"name":"private val blocState: BlocState<State, Proposal>","description":"com.onegravity.bloc.internal.InitializeProcessor.blocState","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-initialize-processor/bloc-state.html","searchKeys":["blocState","private val blocState: BlocState<State, Proposal>","com.onegravity.bloc.internal.InitializeProcessor.blocState"]},{"name":"private val blocState: BlocState<State, Proposal>","description":"com.onegravity.bloc.internal.ReduceProcessor.blocState","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/bloc-state.html","searchKeys":["blocState","private val blocState: BlocState<State, Proposal>","com.onegravity.bloc.internal.ReduceProcessor.blocState"]},{"name":"private val blocState: BlocState<State, Proposal>","description":"com.onegravity.bloc.internal.ThunkProcessor.blocState","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-thunk-processor/bloc-state.html","searchKeys":["blocState","private val blocState: BlocState<State, Proposal>","com.onegravity.bloc.internal.ThunkProcessor.blocState"]},{"name":"private val create: (context: BlocContext) -> Component","description":"com.onegravity.bloc.ComponentLazy.create","location":"bloc-core/-bloc -core/com.onegravity.bloc/-component-lazy/create.html","searchKeys":["create","private val create: (context: BlocContext) -> Component","com.onegravity.bloc.ComponentLazy.create"]},{"name":"private val defaultPredicate: (SuperClazz) -> Boolean","description":"com.onegravity.bloc.internal.builder.Matcher.defaultPredicate","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher/default-predicate.html","searchKeys":["defaultPredicate","private val defaultPredicate: (SuperClazz) -> Boolean","com.onegravity.bloc.internal.builder.Matcher.defaultPredicate"]},{"name":"private val dispatch: (Action) -> Unit","description":"com.onegravity.bloc.internal.InitializeProcessor.dispatch","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-initialize-processor/dispatch.html","searchKeys":["dispatch","private val dispatch: (Action) -> Unit","com.onegravity.bloc.internal.InitializeProcessor.dispatch"]},{"name":"private val initDispatcher: <ERROR CLASS>","description":"com.onegravity.bloc.internal.InitializeProcessor.initDispatcher","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-initialize-processor/init-dispatcher.html","searchKeys":["initDispatcher","private val initDispatcher: <ERROR CLASS>","com.onegravity.bloc.internal.InitializeProcessor.initDispatcher"]},{"name":"private val initialize: Initializer<State, Action>? = null","description":"com.onegravity.bloc.internal.InitializeProcessor.initialize","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-initialize-processor/initialize.html","searchKeys":["initialize","private val initialize: Initializer<State, Action>? = null","com.onegravity.bloc.internal.InitializeProcessor.initialize"]},{"name":"private val initializeProcessor: InitializeProcessor<State, Action, Proposal>","description":"com.onegravity.bloc.internal.BlocImpl.initializeProcessor","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-impl/initialize-processor.html","searchKeys":["initializeProcessor","private val initializeProcessor: InitializeProcessor<State, Action, Proposal>","com.onegravity.bloc.internal.BlocImpl.initializeProcessor"]},{"name":"private val key: Any","description":"com.onegravity.bloc.ComponentLazy.key","location":"bloc-core/-bloc -core/com.onegravity.bloc/-component-lazy/key.html","searchKeys":["key","private val key: Any","com.onegravity.bloc.ComponentLazy.key"]},{"name":"private val mutex: <ERROR CLASS>","description":"com.onegravity.bloc.internal.InitializeProcessor.mutex","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-initialize-processor/mutex.html","searchKeys":["mutex","private val mutex: <ERROR CLASS>","com.onegravity.bloc.internal.InitializeProcessor.mutex"]},{"name":"private val mutex: <ERROR CLASS>","description":"com.onegravity.bloc.internal.ReduceProcessor.mutex","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/mutex.html","searchKeys":["mutex","private val mutex: <ERROR CLASS>","com.onegravity.bloc.internal.ReduceProcessor.mutex"]},{"name":"private val owner: Lazy<A>","description":"com.onegravity.bloc.ComponentLazy.owner","location":"bloc-core/-bloc -core/com.onegravity.bloc/-component-lazy/owner.html","searchKeys":["owner","private val owner: Lazy<A>","com.onegravity.bloc.ComponentLazy.owner"]},{"name":"private val predicates: <ERROR CLASS>","description":"com.onegravity.bloc.internal.builder.Matcher.predicates","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher/predicates.html","searchKeys":["predicates","private val predicates: <ERROR CLASS>","com.onegravity.bloc.internal.builder.Matcher.predicates"]},{"name":"private val reduceChannel: <ERROR CLASS>","description":"com.onegravity.bloc.internal.ReduceProcessor.reduceChannel","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/reduce-channel.html","searchKeys":["reduceChannel","private val reduceChannel: <ERROR CLASS>","com.onegravity.bloc.internal.ReduceProcessor.reduceChannel"]},{"name":"private val reduceDispatcher: <ERROR CLASS>","description":"com.onegravity.bloc.internal.ReduceProcessor.reduceDispatcher","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/reduce-dispatcher.html","searchKeys":["reduceDispatcher","private val reduceDispatcher: <ERROR CLASS>","com.onegravity.bloc.internal.ReduceProcessor.reduceDispatcher"]},{"name":"private val reduceProcessor: ReduceProcessor<State, Action, SideEffect, Proposal>","description":"com.onegravity.bloc.internal.BlocImpl.reduceProcessor","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-impl/reduce-processor.html","searchKeys":["reduceProcessor","private val reduceProcessor: ReduceProcessor<State, Action, SideEffect, Proposal>","com.onegravity.bloc.internal.BlocImpl.reduceProcessor"]},{"name":"private val reducers: List<MatcherReducer<State, Action, Effect<Proposal, SideEffect>>>","description":"com.onegravity.bloc.internal.ReduceProcessor.reducers","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/reducers.html","searchKeys":["reducers","private val reducers: List<MatcherReducer<State, Action, Effect<Proposal, SideEffect>>>","com.onegravity.bloc.internal.ReduceProcessor.reducers"]},{"name":"private val runReducers: (Action) -> Unit","description":"com.onegravity.bloc.internal.ThunkProcessor.runReducers","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-thunk-processor/run-reducers.html","searchKeys":["runReducers","private val runReducers: (Action) -> Unit","com.onegravity.bloc.internal.ThunkProcessor.runReducers"]},{"name":"private val sideEffectChannel: <ERROR CLASS>","description":"com.onegravity.bloc.internal.ReduceProcessor.sideEffectChannel","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/side-effect-channel.html","searchKeys":["sideEffectChannel","private val sideEffectChannel: <ERROR CLASS>","com.onegravity.bloc.internal.ReduceProcessor.sideEffectChannel"]},{"name":"private val state: <ERROR CLASS>","description":"com.onegravity.bloc.utils.MutableStateStream.state","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-mutable-state-stream/state.html","searchKeys":["state","private val state: <ERROR CLASS>","com.onegravity.bloc.utils.MutableStateStream.state"]},{"name":"private val thunkChannel: <ERROR CLASS>","description":"com.onegravity.bloc.internal.ThunkProcessor.thunkChannel","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-thunk-processor/thunk-channel.html","searchKeys":["thunkChannel","private val thunkChannel: <ERROR CLASS>","com.onegravity.bloc.internal.ThunkProcessor.thunkChannel"]},{"name":"private val thunkDispatcher: <ERROR CLASS>","description":"com.onegravity.bloc.internal.ThunkProcessor.thunkDispatcher","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-thunk-processor/thunk-dispatcher.html","searchKeys":["thunkDispatcher","private val thunkDispatcher: <ERROR CLASS>","com.onegravity.bloc.internal.ThunkProcessor.thunkDispatcher"]},{"name":"private val thunkProcessor: ThunkProcessor<State, Action, Proposal>","description":"com.onegravity.bloc.internal.BlocImpl.thunkProcessor","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-impl/thunk-processor.html","searchKeys":["thunkProcessor","private val thunkProcessor: ThunkProcessor<State, Action, Proposal>","com.onegravity.bloc.internal.BlocImpl.thunkProcessor"]},{"name":"private val thunks: List<MatcherThunk<State, Action, Action>>","description":"com.onegravity.bloc.internal.ThunkProcessor.thunks","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-thunk-processor/thunks.html","searchKeys":["thunks","private val thunks: List<MatcherThunk<State, Action, Action>>","com.onegravity.bloc.internal.ThunkProcessor.thunks"]},{"name":"private val value: SuperClazz? = null","description":"com.onegravity.bloc.internal.builder.Matcher.value","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher/value.html","searchKeys":["value","private val value: SuperClazz? = null","com.onegravity.bloc.internal.builder.Matcher.value"]},{"name":"private var _accept: Acceptor<Proposal, State>? = null","description":"com.onegravity.bloc.state.BlocStateBuilderImpl._accept","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state-builder-impl/_accept.html","searchKeys":["_accept","private var _accept: Acceptor<Proposal, State>? = null","com.onegravity.bloc.state.BlocStateBuilderImpl._accept"]},{"name":"private var _initDispatcher: <ERROR CLASS>","description":"com.onegravity.bloc.internal.builder.BlocBuilder._initDispatcher","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/_init-dispatcher.html","searchKeys":["_initDispatcher","private var _initDispatcher: <ERROR CLASS>","com.onegravity.bloc.internal.builder.BlocBuilder._initDispatcher"]},{"name":"private var _initialState: State? = null","description":"com.onegravity.bloc.state.BlocStateBuilderImpl._initialState","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state-builder-impl/_initial-state.html","searchKeys":["_initialState","private var _initialState: State? = null","com.onegravity.bloc.state.BlocStateBuilderImpl._initialState"]},{"name":"private var _initialState: State? = null","description":"com.onegravity.bloc.state.SimpleBlocStateBuilderImpl._initialState","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-simple-bloc-state-builder-impl/_initial-state.html","searchKeys":["_initialState","private var _initialState: State? = null","com.onegravity.bloc.state.SimpleBlocStateBuilderImpl._initialState"]},{"name":"private var _initialize: Initializer<State, Action>? = null","description":"com.onegravity.bloc.internal.builder.BlocBuilder._initialize","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/_initialize.html","searchKeys":["_initialize","private var _initialize: Initializer<State, Action>? = null","com.onegravity.bloc.internal.builder.BlocBuilder._initialize"]},{"name":"private var _reduceDispatcher: <ERROR CLASS>","description":"com.onegravity.bloc.internal.builder.BlocBuilder._reduceDispatcher","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/_reduce-dispatcher.html","searchKeys":["_reduceDispatcher","private var _reduceDispatcher: <ERROR CLASS>","com.onegravity.bloc.internal.builder.BlocBuilder._reduceDispatcher"]},{"name":"private var _thunkDispatcher: <ERROR CLASS>","description":"com.onegravity.bloc.internal.builder.BlocBuilder._thunkDispatcher","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/_thunk-dispatcher.html","searchKeys":["_thunkDispatcher","private var _thunkDispatcher: <ERROR CLASS>","com.onegravity.bloc.internal.builder.BlocBuilder._thunkDispatcher"]},{"name":"private var binding: T? = null","description":"com.onegravity.bloc.utils.FragmentViewBindingDelegate.binding","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-fragment-view-binding-delegate/binding.html","searchKeys":["binding","private var binding: T? = null","com.onegravity.bloc.utils.FragmentViewBindingDelegate.binding"]},{"name":"private var cached: Component? = null","description":"com.onegravity.bloc.ComponentLazy.cached","location":"bloc-core/-bloc -core/com.onegravity.bloc/-component-lazy/cached.html","searchKeys":["cached","private var cached: Component? = null","com.onegravity.bloc.ComponentLazy.cached"]},{"name":"private var scope: <ERROR CLASS>? = null","description":"com.onegravity.bloc.internal.InitializeProcessor.scope","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-initialize-processor/scope.html","searchKeys":["scope","private var scope: <ERROR CLASS>? = null","com.onegravity.bloc.internal.InitializeProcessor.scope"]},{"name":"private var scope: <ERROR CLASS>? = null","description":"com.onegravity.bloc.internal.ReduceProcessor.scope","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-processor/scope.html","searchKeys":["scope","private var scope: <ERROR CLASS>? = null","com.onegravity.bloc.internal.ReduceProcessor.scope"]},{"name":"private var scope: <ERROR CLASS>? = null","description":"com.onegravity.bloc.internal.ThunkProcessor.scope","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-thunk-processor/scope.html","searchKeys":["scope","private var scope: <ERROR CLASS>? = null","com.onegravity.bloc.internal.ThunkProcessor.scope"]},{"name":"protected open override fun onCleared()","description":"com.onegravity.bloc.BlocViewModel.onCleared","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc-view-model/on-cleared.html","searchKeys":["onCleared","protected open override fun onCleared()","com.onegravity.bloc.BlocViewModel.onCleared"]},{"name":"protected val state: MutableStateStream<State>","description":"com.onegravity.bloc.state.BlocStateBase.state","location":"bloc-core/-bloc -core/com.onegravity.bloc.state/-bloc-state-base/state.html","searchKeys":["state","protected val state: MutableStateStream<State>","com.onegravity.bloc.state.BlocStateBase.state"]},{"name":"sealed class Action","description":"com.onegravity.bloc.internal.BlocExecutionTests.Action","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-bloc-execution-tests/-action/index.html","searchKeys":["Action","sealed class Action","com.onegravity.bloc.internal.BlocExecutionTests.Action"]},{"name":"val action: A","description":"com.onegravity.bloc.utils.ThunkContext.action","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-thunk-context/action.html","searchKeys":["action","val action: A","com.onegravity.bloc.utils.ThunkContext.action"]},{"name":"val action: Action","description":"com.onegravity.bloc.utils.ReducerContext.action","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-reducer-context/action.html","searchKeys":["action","val action: Action","com.onegravity.bloc.utils.ReducerContext.action"]},{"name":"val action: Action? = null","description":"com.onegravity.bloc.internal.ReduceChannelElement.action","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-channel-element/action.html","searchKeys":["action","val action: Action? = null","com.onegravity.bloc.internal.ReduceChannelElement.action"]},{"name":"val clazz: KClass<ChildClazz>","description":"com.onegravity.bloc.internal.builder.Matcher.clazz","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-matcher/clazz.html","searchKeys":["clazz","val clazz: KClass<ChildClazz>","com.onegravity.bloc.internal.builder.Matcher.clazz"]},{"name":"val component: C","description":"com.onegravity.bloc.ComponentLazy.InstanceWrapper.component","location":"bloc-core/-bloc -core/com.onegravity.bloc/-component-lazy/-instance-wrapper/component.html","searchKeys":["component","val component: C","com.onegravity.bloc.ComponentLazy.InstanceWrapper.component"]},{"name":"val coroutineScope: <ERROR CLASS>","description":"com.onegravity.bloc.utils.InitializerContext.coroutineScope","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-initializer-context/coroutine-scope.html","searchKeys":["coroutineScope","val coroutineScope: <ERROR CLASS>","com.onegravity.bloc.utils.InitializerContext.coroutineScope"]},{"name":"val coroutineScope: <ERROR CLASS>","description":"com.onegravity.bloc.utils.ReducerContext.coroutineScope","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-reducer-context/coroutine-scope.html","searchKeys":["coroutineScope","val coroutineScope: <ERROR CLASS>","com.onegravity.bloc.utils.ReducerContext.coroutineScope"]},{"name":"val coroutineScope: <ERROR CLASS>","description":"com.onegravity.bloc.utils.ReducerContextNoAction.coroutineScope","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-reducer-context-no-action/coroutine-scope.html","searchKeys":["coroutineScope","val coroutineScope: <ERROR CLASS>","com.onegravity.bloc.utils.ReducerContextNoAction.coroutineScope"]},{"name":"val coroutineScope: <ERROR CLASS>","description":"com.onegravity.bloc.utils.ThunkContext.coroutineScope","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-thunk-context/coroutine-scope.html","searchKeys":["coroutineScope","val coroutineScope: <ERROR CLASS>","com.onegravity.bloc.utils.ThunkContext.coroutineScope"]},{"name":"val coroutineScope: <ERROR CLASS>","description":"com.onegravity.bloc.utils.ThunkContextNoAction.coroutineScope","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-thunk-context-no-action/coroutine-scope.html","searchKeys":["coroutineScope","val coroutineScope: <ERROR CLASS>","com.onegravity.bloc.utils.ThunkContextNoAction.coroutineScope"]},{"name":"val dispatch: Dispatcher<Action>","description":"com.onegravity.bloc.utils.InitializerContext.dispatch","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-initializer-context/dispatch.html","searchKeys":["dispatch","val dispatch: Dispatcher<Action>","com.onegravity.bloc.utils.InitializerContext.dispatch"]},{"name":"val dispatch: Dispatcher<Action>","description":"com.onegravity.bloc.utils.ThunkContext.dispatch","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-thunk-context/dispatch.html","searchKeys":["dispatch","val dispatch: Dispatcher<Action>","com.onegravity.bloc.utils.ThunkContext.dispatch"]},{"name":"val dispatch: Dispatcher<Action>","description":"com.onegravity.bloc.utils.ThunkContextNoAction.dispatch","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-thunk-context-no-action/dispatch.html","searchKeys":["dispatch","val dispatch: Dispatcher<Action>","com.onegravity.bloc.utils.ThunkContextNoAction.dispatch"]},{"name":"val fragment: Fragment","description":"com.onegravity.bloc.utils.FragmentViewBindingDelegate.fragment","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-fragment-view-binding-delegate/fragment.html","searchKeys":["fragment","val fragment: Fragment","com.onegravity.bloc.utils.FragmentViewBindingDelegate.fragment"]},{"name":"val getState: GetState<State>","description":"com.onegravity.bloc.utils.ThunkContext.getState","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-thunk-context/get-state.html","searchKeys":["getState","val getState: GetState<State>","com.onegravity.bloc.utils.ThunkContext.getState"]},{"name":"val getState: GetState<State>","description":"com.onegravity.bloc.utils.ThunkContextNoAction.getState","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-thunk-context-no-action/get-state.html","searchKeys":["getState","val getState: GetState<State>","com.onegravity.bloc.utils.ThunkContextNoAction.getState"]},{"name":"val instanceKeeper: <ERROR CLASS>","description":"com.onegravity.bloc.BlocViewModel.instanceKeeper","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc-view-model/instance-keeper.html","searchKeys":["instanceKeeper","val instanceKeeper: <ERROR CLASS>","com.onegravity.bloc.BlocViewModel.instanceKeeper"]},{"name":"val lifecycleRegistry: <ERROR CLASS>","description":"com.onegravity.bloc.BlocViewModel.lifecycleRegistry","location":"bloc-core/-bloc -core/com.onegravity.bloc/-bloc-view-model/lifecycle-registry.html","searchKeys":["lifecycleRegistry","val lifecycleRegistry: <ERROR CLASS>","com.onegravity.bloc.BlocViewModel.lifecycleRegistry"]},{"name":"val proposal: Proposal?","description":"com.onegravity.bloc.utils.Effect.proposal","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-effect/proposal.html","searchKeys":["proposal","val proposal: Proposal?","com.onegravity.bloc.utils.Effect.proposal"]},{"name":"val reducer: ReducerNoAction<State, Effect<Proposal, SideEffect>>? = null","description":"com.onegravity.bloc.internal.ReduceChannelElement.reducer","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal/-reduce-channel-element/reducer.html","searchKeys":["reducer","val reducer: ReducerNoAction<State, Effect<Proposal, SideEffect>>? = null","com.onegravity.bloc.internal.ReduceChannelElement.reducer"]},{"name":"val sideEffects: List<SideEffect>","description":"com.onegravity.bloc.utils.Effect.sideEffects","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-effect/side-effects.html","searchKeys":["sideEffects","val sideEffects: List<SideEffect>","com.onegravity.bloc.utils.Effect.sideEffects"]},{"name":"val state: State","description":"com.onegravity.bloc.utils.InitializerContext.state","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-initializer-context/state.html","searchKeys":["state","val state: State","com.onegravity.bloc.utils.InitializerContext.state"]},{"name":"val state: State","description":"com.onegravity.bloc.utils.ReducerContext.state","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-reducer-context/state.html","searchKeys":["state","val state: State","com.onegravity.bloc.utils.ReducerContext.state"]},{"name":"val state: State","description":"com.onegravity.bloc.utils.ReducerContextNoAction.state","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-reducer-context-no-action/state.html","searchKeys":["state","val state: State","com.onegravity.bloc.utils.ReducerContextNoAction.state"]},{"name":"val viewBindingFactory: (View) -> T","description":"com.onegravity.bloc.utils.FragmentViewBindingDelegate.viewBindingFactory","location":"bloc-core/-bloc -core/com.onegravity.bloc.utils/-fragment-view-binding-delegate/view-binding-factory.html","searchKeys":["viewBindingFactory","val viewBindingFactory: (View) -> T","com.onegravity.bloc.utils.FragmentViewBindingDelegate.viewBindingFactory"]},{"name":"var dispatchers: <ERROR CLASS>","description":"com.onegravity.bloc.internal.builder.BlocBuilder.dispatchers","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/dispatchers.html","searchKeys":["dispatchers","var dispatchers: <ERROR CLASS>","com.onegravity.bloc.internal.builder.BlocBuilder.dispatchers"]},{"name":"var initDispatcher: <ERROR CLASS>","description":"com.onegravity.bloc.internal.builder.BlocBuilder.initDispatcher","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/init-dispatcher.html","searchKeys":["initDispatcher","var initDispatcher: <ERROR CLASS>","com.onegravity.bloc.internal.builder.BlocBuilder.initDispatcher"]},{"name":"var reduceDispatcher: <ERROR CLASS>","description":"com.onegravity.bloc.internal.builder.BlocBuilder.reduceDispatcher","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/reduce-dispatcher.html","searchKeys":["reduceDispatcher","var reduceDispatcher: <ERROR CLASS>","com.onegravity.bloc.internal.builder.BlocBuilder.reduceDispatcher"]},{"name":"var thunkDispatcher: <ERROR CLASS>","description":"com.onegravity.bloc.internal.builder.BlocBuilder.thunkDispatcher","location":"bloc-core/-bloc -core/com.onegravity.bloc.internal.builder/-bloc-builder/thunk-dispatcher.html","searchKeys":["thunkDispatcher","var thunkDispatcher: <ERROR CLASS>","com.onegravity.bloc.internal.builder.BlocBuilder.thunkDispatcher"]},{"name":"fun <STATE : Any, ACTION : Any, SIDE_EFFECT : Any, PROPOSAL : Any> BlocOwner<STATE, ACTION, SIDE_EFFECT, PROPOSAL>.observeSideEffects(): State<SIDE_EFFECT?>","description":"com.onegravity.bloc.compose.observeSideEffects","location":"bloc-compose/-bloc -compose/com.onegravity.bloc.compose/observe-side-effects.html","searchKeys":["observeSideEffects","fun <STATE : Any, ACTION : Any, SIDE_EFFECT : Any, PROPOSAL : Any> BlocOwner<STATE, ACTION, SIDE_EFFECT, PROPOSAL>.observeSideEffects(): State<SIDE_EFFECT?>","com.onegravity.bloc.compose.observeSideEffects"]},{"name":"fun <STATE : Any, ACTION : Any, SIDE_EFFECT : Any, PROPOSAL : Any> BlocOwner<STATE, ACTION, SIDE_EFFECT, PROPOSAL>.observeState(): State<STATE>","description":"com.onegravity.bloc.compose.observeState","location":"bloc-compose/-bloc -compose/com.onegravity.bloc.compose/observe-state.html","searchKeys":["observeState","fun <STATE : Any, ACTION : Any, SIDE_EFFECT : Any, PROPOSAL : Any> BlocOwner<STATE, ACTION, SIDE_EFFECT, PROPOSAL>.observeState(): State<STATE>","com.onegravity.bloc.compose.observeState"]},{"name":"fun <STATE : Any, ACTION : Any, SIDE_EFFECT : Any> Bloc<STATE, ACTION, SIDE_EFFECT>.observeSideEffects(): State<SIDE_EFFECT?>","description":"com.onegravity.bloc.compose.observeSideEffects","location":"bloc-compose/-bloc -compose/com.onegravity.bloc.compose/observe-side-effects.html","searchKeys":["observeSideEffects","fun <STATE : Any, ACTION : Any, SIDE_EFFECT : Any> Bloc<STATE, ACTION, SIDE_EFFECT>.observeSideEffects(): State<SIDE_EFFECT?>","com.onegravity.bloc.compose.observeSideEffects"]},{"name":"fun <STATE : Any, ACTION : Any, SIDE_EFFECT : Any> Bloc<STATE, ACTION, SIDE_EFFECT>.observeState(): State<STATE>","description":"com.onegravity.bloc.compose.observeState","location":"bloc-compose/-bloc -compose/com.onegravity.bloc.compose/observe-state.html","searchKeys":["observeState","fun <STATE : Any, ACTION : Any, SIDE_EFFECT : Any> Bloc<STATE, ACTION, SIDE_EFFECT>.observeState(): State<STATE>","com.onegravity.bloc.compose.observeState"]},{"name":"fun <STATE : Any, SIDE_EFFECT : Any> BlocObservable<STATE, SIDE_EFFECT>.observeSideEffects(): State<SIDE_EFFECT?>","description":"com.onegravity.bloc.compose.observeSideEffects","location":"bloc-compose/-bloc -compose/com.onegravity.bloc.compose/observe-side-effects.html","searchKeys":["observeSideEffects","fun <STATE : Any, SIDE_EFFECT : Any> BlocObservable<STATE, SIDE_EFFECT>.observeSideEffects(): State<SIDE_EFFECT?>","com.onegravity.bloc.compose.observeSideEffects"]},{"name":"fun <STATE : Any, SIDE_EFFECT : Any> BlocObservable<STATE, SIDE_EFFECT>.observeState(): State<STATE>","description":"com.onegravity.bloc.compose.observeState","location":"bloc-compose/-bloc -compose/com.onegravity.bloc.compose/observe-state.html","searchKeys":["observeState","fun <STATE : Any, SIDE_EFFECT : Any> BlocObservable<STATE, SIDE_EFFECT>.observeState(): State<STATE>","com.onegravity.bloc.compose.observeState"]},{"name":"fun <STATE : Any, SIDE_EFFECT : Any> BlocObservableOwner<STATE, SIDE_EFFECT>.observeSideEffects(): State<SIDE_EFFECT?>","description":"com.onegravity.bloc.compose.observeSideEffects","location":"bloc-compose/-bloc -compose/com.onegravity.bloc.compose/observe-side-effects.html","searchKeys":["observeSideEffects","fun <STATE : Any, SIDE_EFFECT : Any> BlocObservableOwner<STATE, SIDE_EFFECT>.observeSideEffects(): State<SIDE_EFFECT?>","com.onegravity.bloc.compose.observeSideEffects"]},{"name":"fun <STATE : Any, SIDE_EFFECT : Any> BlocObservableOwner<STATE, SIDE_EFFECT>.observeState(): State<STATE>","description":"com.onegravity.bloc.compose.observeState","location":"bloc-compose/-bloc -compose/com.onegravity.bloc.compose/observe-state.html","searchKeys":["observeState","fun <STATE : Any, SIDE_EFFECT : Any> BlocObservableOwner<STATE, SIDE_EFFECT>.observeState(): State<STATE>","com.onegravity.bloc.compose.observeState"]},{"name":"fun previewBlocContext(): BlocContext","description":"com.onegravity.bloc.compose.previewBlocContext","location":"bloc-compose/-bloc -compose/com.onegravity.bloc.compose/preview-bloc-context.html","searchKeys":["previewBlocContext","fun previewBlocContext(): BlocContext","com.onegravity.bloc.compose.previewBlocContext"]},{"name":"private fun composableLifecycle(): Lifecycle","description":"com.onegravity.bloc.compose.composableLifecycle","location":"bloc-compose/-bloc -compose/com.onegravity.bloc.compose/composable-lifecycle.html","searchKeys":["composableLifecycle","private fun composableLifecycle(): Lifecycle","com.onegravity.bloc.compose.composableLifecycle"]}]