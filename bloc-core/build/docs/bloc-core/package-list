$dokka.format:html-v1
$dokka.linkExtension:html
$dokka.location:com.onegravity.bloc.context////PointingToDeclaration/bloc-core/com.onegravity.bloc.context/index.html
$dokka.location:com.onegravity.bloc.context/BlocContext///PointingToDeclaration/bloc-core/com.onegravity.bloc.context/-bloc-context/index.html
$dokka.location:com.onegravity.bloc.context/DefaultBlocContext///PointingToDeclaration/bloc-core/com.onegravity.bloc.context/-default-bloc-context/index.html
$dokka.location:com.onegravity.bloc.context/DefaultBlocContext/DefaultBlocContext/#Lifecycle#StateKeeper?#InstanceKeeper?#BackPressedHandler?/PointingToDeclaration/bloc-core/com.onegravity.bloc.context/-default-bloc-context/-default-bloc-context.html
$dokka.location:com.onegravity.bloc.context/DefaultBlocContext/backPressedHandler/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.context/-default-bloc-context/back-pressed-handler.html
$dokka.location:com.onegravity.bloc.context/DefaultBlocContext/instanceKeeper/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.context/-default-bloc-context/instance-keeper.html
$dokka.location:com.onegravity.bloc.context/DefaultBlocContext/lifecycle/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.context/-default-bloc-context/lifecycle.html
$dokka.location:com.onegravity.bloc.context/DefaultBlocContext/stateKeeper/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.context/-default-bloc-context/state-keeper.html
$dokka.location:com.onegravity.bloc.select////PointingToDeclaration/bloc-core/com.onegravity.bloc.select/index.html
$dokka.location:com.onegravity.bloc.select//byRefEqualityCheck/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/by-ref-equality-check.html
$dokka.location:com.onegravity.bloc.select//byValEqualityCheck/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/by-val-equality-check.html
$dokka.location:com.onegravity.bloc.select//computationMemoizer/#kotlin.Function1[kotlin.Array[kotlin.Any],TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/computation-memoizer.html
$dokka.location:com.onegravity.bloc.select//select/Store<State>[TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/select.html
$dokka.location:com.onegravity.bloc.select//selectors/Store<State>[TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[com.onegravity.bloc.select.SelectorSubscriberBuilder[TypeParam(bounds=[kotlin.Any])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/selectors.html
$dokka.location:com.onegravity.bloc.select//singleInputMemoizer/#kotlin.Function1[kotlin.Array[kotlin.Any],TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/single-input-memoizer.html
$dokka.location:com.onegravity.bloc.select/AbstractSelector///PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-abstract-selector/index.html
$dokka.location:com.onegravity.bloc.select/AbstractSelector/AbstractSelector/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-abstract-selector/-abstract-selector.html
$dokka.location:com.onegravity.bloc.select/AbstractSelector/isChanged/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-abstract-selector/is-changed.html
$dokka.location:com.onegravity.bloc.select/AbstractSelector/memoizer/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-abstract-selector/memoizer.html
$dokka.location:com.onegravity.bloc.select/AbstractSelector/recomputations/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-abstract-selector/recomputations.html
$dokka.location:com.onegravity.bloc.select/AbstractSelector/resetChanged/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-abstract-selector/reset-changed.html
$dokka.location:com.onegravity.bloc.select/AbstractSelector/signalChanged/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-abstract-selector/signal-changed.html
$dokka.location:com.onegravity.bloc.select/InputField///PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-input-field/index.html
$dokka.location:com.onegravity.bloc.select/InputField/InputField/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function2[kotlin.Any,kotlin.Any,kotlin.Boolean]/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-input-field/-input-field.html
$dokka.location:com.onegravity.bloc.select/InputField/equalityCheck/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-input-field/equality-check.html
$dokka.location:com.onegravity.bloc.select/InputField/fn/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-input-field/fn.html
$dokka.location:com.onegravity.bloc.select/InputField/invoke/#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-input-field/invoke.html
$dokka.location:com.onegravity.bloc.select/Memoizer///PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-memoizer/index.html
$dokka.location:com.onegravity.bloc.select/Memoizer/memoize/#kotlin.Any#kotlin.Array[com.onegravity.bloc.select.SelectorInput[kotlin.Any,kotlin.Any]]/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-memoizer/memoize.html
$dokka.location:com.onegravity.bloc.select/Selector///PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector/index.html
$dokka.location:com.onegravity.bloc.select/Selector/getIfChangedIn/#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector/get-if-changed-in.html
$dokka.location:com.onegravity.bloc.select/Selector/isChanged/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector/is-changed.html
$dokka.location:com.onegravity.bloc.select/Selector/onChangeIn/#TypeParam(bounds=[kotlin.Any?])#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector/on-change-in.html
$dokka.location:com.onegravity.bloc.select/Selector/recomputations/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector/recomputations.html
$dokka.location:com.onegravity.bloc.select/Selector/resetChanged/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector/reset-changed.html
$dokka.location:com.onegravity.bloc.select/Selector/signalChanged/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector/signal-changed.html
$dokka.location:com.onegravity.bloc.select/SelectorBuilder///PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector-builder/index.html
$dokka.location:com.onegravity.bloc.select/SelectorBuilder/SelectorBuilder/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector-builder/-selector-builder.html
$dokka.location:com.onegravity.bloc.select/SelectorBuilder/withSingleField/#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector-builder/with-single-field.html
$dokka.location:com.onegravity.bloc.select/SelectorBuilder/withSingleFieldByValue/#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector-builder/with-single-field-by-value.html
$dokka.location:com.onegravity.bloc.select/SelectorInput///PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector-input/index.html
$dokka.location:com.onegravity.bloc.select/SelectorInput/equalityCheck/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector-input/equality-check.html
$dokka.location:com.onegravity.bloc.select/SelectorInput/invoke/#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector-input/invoke.html
$dokka.location:com.onegravity.bloc.select/SelectorSubscriberBuilder///PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector-subscriber-builder/index.html
$dokka.location:com.onegravity.bloc.select/SelectorSubscriberBuilder/SelectorSubscriberBuilder/#Store<State>[TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector-subscriber-builder/-selector-subscriber-builder.html
$dokka.location:com.onegravity.bloc.select/SelectorSubscriberBuilder/select/#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector-subscriber-builder/select.html
$dokka.location:com.onegravity.bloc.select/SelectorSubscriberBuilder/selectorList/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector-subscriber-builder/selector-list.html
$dokka.location:com.onegravity.bloc.select/SelectorSubscriberBuilder/selectorList2/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector-subscriber-builder/selector-list2.html
$dokka.location:com.onegravity.bloc.select/SelectorSubscriberBuilder/state/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector-subscriber-builder/state.html
$dokka.location:com.onegravity.bloc.select/SelectorSubscriberBuilder/store/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector-subscriber-builder/store.html
$dokka.location:com.onegravity.bloc.select/SelectorSubscriberBuilder/withAnyChange/#kotlin.Function0[kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector-subscriber-builder/with-any-change.html
$dokka.location:com.onegravity.bloc.select/SelectorSubscriberBuilder/withAnyChangeFun/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.select/-selector-subscriber-builder/with-any-change-fun.html
$dokka.location:com.onegravity.bloc.state.redux////PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/index.html
$dokka.location:com.onegravity.bloc.state.redux//disposableScope/com.onegravity.bloc.context.BlocContext#/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/disposable-scope.html
$dokka.location:com.onegravity.bloc.state.redux//reduxBlocState/#DisposableScope#Store<ReduxModel>[TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[com.onegravity.bloc.state.redux.ReduxBlocStateBuilder[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/redux-bloc-state.html
$dokka.location:com.onegravity.bloc.state.redux//reduxBlocState/#DisposableScope#Store<ReduxModel>[TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[com.onegravity.bloc.state.redux.ReduxSimpleBlocStateBuilder[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/redux-bloc-state.html
$dokka.location:com.onegravity.bloc.state.redux//selectScoped/DisposableScope#Store<State>[TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/select-scoped.html
$dokka.location:com.onegravity.bloc.state.redux//selectScoped/Store<State>[TypeParam(bounds=[kotlin.Any])]#DisposableScope#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/select-scoped.html
$dokka.location:com.onegravity.bloc.state.redux//toBlocState/Store<ReduxModel>[TypeParam(bounds=[kotlin.Any])]#com.onegravity.bloc.context.BlocContext#TypeParam(bounds=[kotlin.Any])#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/to-bloc-state.html
$dokka.location:com.onegravity.bloc.state.redux//toBlocState/Store<ReduxModel>[TypeParam(bounds=[kotlin.Any])]#com.onegravity.bloc.context.BlocContext#TypeParam(bounds=[kotlin.Any])#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/to-bloc-state.html
$dokka.location:com.onegravity.bloc.state.redux//toBlocState/Store<State>[TypeParam(bounds=[kotlin.Any])]#com.onegravity.bloc.context.BlocContext#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/to-bloc-state.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxBlocState///PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-bloc-state/index.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxBlocState/ReduxBlocState/#DisposableScope#TypeParam(bounds=[kotlin.Any?])#Store<ReduxModel>[TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-bloc-state/-redux-bloc-state.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxBlocState/collect/#FlowCollector<State>[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-bloc-state/collect.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxBlocState/send/#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-bloc-state/send.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxBlocState/value/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-bloc-state/value.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxBlocStateBuilder///PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-bloc-state-builder/index.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxBlocStateBuilder/initialState/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-bloc-state-builder/initial-state.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxBlocStateBuilder/map/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-bloc-state-builder/map.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxBlocStateBuilder/select/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-bloc-state-builder/select.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxBlocStateBuilderImpl///PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-bloc-state-builder-impl/index.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxBlocStateBuilderImpl/ReduxBlocStateBuilderImpl/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-bloc-state-builder-impl/-redux-bloc-state-builder-impl.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxBlocStateBuilderImpl/build/#DisposableScope#Store<ReduxModel>[TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-bloc-state-builder-impl/build.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxBlocStateBuilderImpl/initialState/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-bloc-state-builder-impl/initial-state.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxBlocStateBuilderImpl/map/#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-bloc-state-builder-impl/map.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxBlocStateBuilderImpl/select/#kotlin.Function1[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-bloc-state-builder-impl/select.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxSimpleBlocStateBuilder///PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-simple-bloc-state-builder/index.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxSimpleBlocStateBuilder/initialState/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-simple-bloc-state-builder/initial-state.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxSimpleBlocStateBuilder/select/#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-simple-bloc-state-builder/select.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxSimpleBlocStateBuilderImpl///PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-simple-bloc-state-builder-impl/index.html
$dokka.location:com.onegravity.bloc.state.redux/ReduxSimpleBlocStateBuilderImpl/ReduxSimpleBlocStateBuilderImpl/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.state.redux/-redux-simple-bloc-state-builder-impl/-redux-simple-bloc-state-builder-impl.html
$dokka.location:com.onegravity.bloc.state////PointingToDeclaration/bloc-core/com.onegravity.bloc.state/index.html
$dokka.location:com.onegravity.bloc.state//blocState/#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/bloc-core/com.onegravity.bloc.state/bloc-state.html
$dokka.location:com.onegravity.bloc.state//blocState/#kotlin.Function1[com.onegravity.bloc.state.BlocStateBuilder[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state/bloc-state.html
$dokka.location:com.onegravity.bloc.state/BlocState///PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-bloc-state/index.html
$dokka.location:com.onegravity.bloc.state/BlocStateBuilder///PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-bloc-state-builder/index.html
$dokka.location:com.onegravity.bloc.state/BlocStateBuilder/accept/#kotlin.Function2[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-bloc-state-builder/accept.html
$dokka.location:com.onegravity.bloc.state/BlocStateBuilder/initialState/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-bloc-state-builder/initial-state.html
$dokka.location:com.onegravity.bloc.state/BlocStateBuilderImpl///PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-bloc-state-builder-impl/index.html
$dokka.location:com.onegravity.bloc.state/BlocStateBuilderImpl/BlocStateBuilderImpl/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-bloc-state-builder-impl/-bloc-state-builder-impl.html
$dokka.location:com.onegravity.bloc.state/BlocStateBuilderImpl/accept/#kotlin.Function2[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-bloc-state-builder-impl/accept.html
$dokka.location:com.onegravity.bloc.state/BlocStateBuilderImpl/build/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-bloc-state-builder-impl/build.html
$dokka.location:com.onegravity.bloc.state/BlocStateBuilderImpl/initialState/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-bloc-state-builder-impl/initial-state.html
$dokka.location:com.onegravity.bloc.state/BlocStateImpl///PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-bloc-state-impl/index.html
$dokka.location:com.onegravity.bloc.state/BlocStateImpl/BlocStateImpl/#TypeParam(bounds=[kotlin.Any?])#kotlin.Function2[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-bloc-state-impl/-bloc-state-impl.html
$dokka.location:com.onegravity.bloc.state/BlocStateImpl/collect/#FlowCollector<State>[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-bloc-state-impl/collect.html
$dokka.location:com.onegravity.bloc.state/BlocStateImpl/send/#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-bloc-state-impl/send.html
$dokka.location:com.onegravity.bloc.state/BlocStateImpl/value/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-bloc-state-impl/value.html
$dokka.location:com.onegravity.bloc.state/SimpleBlocStateBuilder///PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-simple-bloc-state-builder/index.html
$dokka.location:com.onegravity.bloc.state/SimpleBlocStateBuilder/build/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-simple-bloc-state-builder/build.html
$dokka.location:com.onegravity.bloc.state/SimpleBlocStateBuilder/initialState/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-simple-bloc-state-builder/initial-state.html
$dokka.location:com.onegravity.bloc.state/SimpleBlocStateBuilderImpl///PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-simple-bloc-state-builder-impl/index.html
$dokka.location:com.onegravity.bloc.state/SimpleBlocStateBuilderImpl/SimpleBlocStateBuilderImpl/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-simple-bloc-state-builder-impl/-simple-bloc-state-builder-impl.html
$dokka.location:com.onegravity.bloc.state/SimpleBlocStateBuilderImpl/build/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-simple-bloc-state-builder-impl/build.html
$dokka.location:com.onegravity.bloc.state/SimpleBlocStateBuilderImpl/initialState/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.state/-simple-bloc-state-builder-impl/initial-state.html
$dokka.location:com.onegravity.bloc.utils////PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/index.html
$dokka.location:com.onegravity.bloc.utils//logger/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/logger.html
$dokka.location:com.onegravity.bloc.utils//viewBinding/androidx.fragment.app.Fragment#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/view-binding.html
$dokka.location:com.onegravity.bloc.utils/BlocDSL///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-bloc-d-s-l/index.html
$dokka.location:com.onegravity.bloc.utils/BlocDSL/BlocDSL/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-bloc-d-s-l/-bloc-d-s-l.html
$dokka.location:com.onegravity.bloc.utils/BlocInternal///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-bloc-internal/index.html
$dokka.location:com.onegravity.bloc.utils/BlocInternal/BlocInternal/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-bloc-internal/-bloc-internal.html
$dokka.location:com.onegravity.bloc.utils/BlocObservable///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-bloc-observable/index.html
$dokka.location:com.onegravity.bloc.utils/BlocObservable/subscribe/#Lifecycle#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]?#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]?/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-bloc-observable/subscribe.html
$dokka.location:com.onegravity.bloc.utils/BlocObservableOwner///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-bloc-observable-owner/index.html
$dokka.location:com.onegravity.bloc.utils/BlocObservableOwner/observable/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-bloc-observable-owner/observable.html
$dokka.location:com.onegravity.bloc.utils/BlocOwner///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-bloc-owner/index.html
$dokka.location:com.onegravity.bloc.utils/BlocOwner/and/TypeParam(bounds=[kotlin.Any?])#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-bloc-owner/and.html
$dokka.location:com.onegravity.bloc.utils/BlocOwner/bloc/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-bloc-owner/bloc.html
$dokka.location:com.onegravity.bloc.utils/BlocOwner/noSideEffect/TypeParam(bounds=[kotlin.Any?])#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-bloc-owner/no-side-effect.html
$dokka.location:com.onegravity.bloc.utils/BlocProtected///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-bloc-protected/index.html
$dokka.location:com.onegravity.bloc.utils/BlocProtected/BlocProtected/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-bloc-protected/-bloc-protected.html
$dokka.location:com.onegravity.bloc.utils/Effect///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-effect/index.html
$dokka.location:com.onegravity.bloc.utils/Effect/Effect/#TypeParam(bounds=[kotlin.Any?])?#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-effect/-effect.html
$dokka.location:com.onegravity.bloc.utils/Effect/Effect/#TypeParam(bounds=[kotlin.Any?])?#kotlin.collections.List[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-effect/-effect.html
$dokka.location:com.onegravity.bloc.utils/Effect/and/#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-effect/and.html
$dokka.location:com.onegravity.bloc.utils/Effect/proposal/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-effect/proposal.html
$dokka.location:com.onegravity.bloc.utils/Effect/sideEffects/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-effect/side-effects.html
$dokka.location:com.onegravity.bloc.utils/FragmentViewBindingDelegate///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-fragment-view-binding-delegate/index.html
$dokka.location:com.onegravity.bloc.utils/FragmentViewBindingDelegate/FragmentViewBindingDelegate/#androidx.fragment.app.Fragment#kotlin.Function1[android.view.View,TypeParam(bounds=[androidx.viewbinding.ViewBinding])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-fragment-view-binding-delegate/-fragment-view-binding-delegate.html
$dokka.location:com.onegravity.bloc.utils/FragmentViewBindingDelegate/fragment/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-fragment-view-binding-delegate/fragment.html
$dokka.location:com.onegravity.bloc.utils/FragmentViewBindingDelegate/getValue/#androidx.fragment.app.Fragment#kotlin.reflect.KProperty[*]/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-fragment-view-binding-delegate/get-value.html
$dokka.location:com.onegravity.bloc.utils/FragmentViewBindingDelegate/viewBindingFactory/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-fragment-view-binding-delegate/view-binding-factory.html
$dokka.location:com.onegravity.bloc.utils/InitializerContext///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-initializer-context/index.html
$dokka.location:com.onegravity.bloc.utils/InitializerContext/InitializerContext/#TypeParam(bounds=[kotlin.Any?])#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-initializer-context/-initializer-context.html
$dokka.location:com.onegravity.bloc.utils/InitializerContext/dispatch/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-initializer-context/dispatch.html
$dokka.location:com.onegravity.bloc.utils/InitializerContext/state/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-initializer-context/state.html
$dokka.location:com.onegravity.bloc.utils/Logger///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-logger/index.html
$dokka.location:com.onegravity.bloc.utils/Logger/d/#kotlin.String/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-logger/d.html
$dokka.location:com.onegravity.bloc.utils/Logger/e/#kotlin.String#kotlin.Throwable?/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-logger/e.html
$dokka.location:com.onegravity.bloc.utils/Logger/i/#kotlin.String/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-logger/i.html
$dokka.location:com.onegravity.bloc.utils/Logger/w/#kotlin.String/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-logger/w.html
$dokka.location:com.onegravity.bloc.utils/LoggerImpl///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-logger-impl/index.html
$dokka.location:com.onegravity.bloc.utils/LoggerImpl/d/#kotlin.String/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-logger-impl/d.html
$dokka.location:com.onegravity.bloc.utils/LoggerImpl/e/#kotlin.String#kotlin.Throwable?/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-logger-impl/e.html
$dokka.location:com.onegravity.bloc.utils/LoggerImpl/i/#kotlin.String/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-logger-impl/i.html
$dokka.location:com.onegravity.bloc.utils/LoggerImpl/w/#kotlin.String/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-logger-impl/w.html
$dokka.location:com.onegravity.bloc.utils/Matcher.Companion///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher/-companion/index.html
$dokka.location:com.onegravity.bloc.utils/Matcher.Companion/any/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher/-companion/any.html
$dokka.location:com.onegravity.bloc.utils/Matcher.Companion/eq/#TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher/-companion/eq.html
$dokka.location:com.onegravity.bloc.utils/Matcher///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher/index.html
$dokka.location:com.onegravity.bloc.utils/Matcher/Matcher/#kotlin.reflect.KClass[TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher/-matcher.html
$dokka.location:com.onegravity.bloc.utils/Matcher/clazz/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher/clazz.html
$dokka.location:com.onegravity.bloc.utils/Matcher/clazzName/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher/clazz-name.html
$dokka.location:com.onegravity.bloc.utils/Matcher/equals/#kotlin.Any?/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher/equals.html
$dokka.location:com.onegravity.bloc.utils/Matcher/hashCode/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher/hash-code.html
$dokka.location:com.onegravity.bloc.utils/Matcher/matches/#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher/matches.html
$dokka.location:com.onegravity.bloc.utils/Matcher/where/#kotlin.Function1[TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])]),kotlin.Boolean]/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher/where.html
$dokka.location:com.onegravity.bloc.utils/MatcherReducer///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher-reducer/index.html
$dokka.location:com.onegravity.bloc.utils/MatcherReducer/MatcherReducer/#com.onegravity.bloc.utils.Matcher[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]?#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.ReducerContext[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any])],TypeParam(bounds=[kotlin.Any?])]#kotlin.Boolean/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher-reducer/-matcher-reducer.html
$dokka.location:com.onegravity.bloc.utils/MatcherReducer/expectsProposal/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher-reducer/expects-proposal.html
$dokka.location:com.onegravity.bloc.utils/MatcherReducer/matcher/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher-reducer/matcher.html
$dokka.location:com.onegravity.bloc.utils/MatcherReducer/reducer/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher-reducer/reducer.html
$dokka.location:com.onegravity.bloc.utils/MatcherThunk///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher-thunk/index.html
$dokka.location:com.onegravity.bloc.utils/MatcherThunk/MatcherThunk/#com.onegravity.bloc.utils.Matcher[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]?#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.ThunkContext[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher-thunk/-matcher-thunk.html
$dokka.location:com.onegravity.bloc.utils/MatcherThunk/matcher/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher-thunk/matcher.html
$dokka.location:com.onegravity.bloc.utils/MatcherThunk/thunk/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-matcher-thunk/thunk.html
$dokka.location:com.onegravity.bloc.utils/ReducerContext///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-reducer-context/index.html
$dokka.location:com.onegravity.bloc.utils/ReducerContext/ReducerContext/#TypeParam(bounds=[kotlin.Any?])#TypeParam(bounds=[kotlin.Any?])#CoroutineScope/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-reducer-context/-reducer-context.html
$dokka.location:com.onegravity.bloc.utils/ReducerContext/action/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-reducer-context/action.html
$dokka.location:com.onegravity.bloc.utils/ReducerContext/coroutineScope/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-reducer-context/coroutine-scope.html
$dokka.location:com.onegravity.bloc.utils/ReducerContext/state/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-reducer-context/state.html
$dokka.location:com.onegravity.bloc.utils/ReducerContextNoAction///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-reducer-context-no-action/index.html
$dokka.location:com.onegravity.bloc.utils/ReducerContextNoAction/ReducerContextNoAction/#TypeParam(bounds=[kotlin.Any?])#CoroutineScope/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-reducer-context-no-action/-reducer-context-no-action.html
$dokka.location:com.onegravity.bloc.utils/ReducerContextNoAction/scope/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-reducer-context-no-action/scope.html
$dokka.location:com.onegravity.bloc.utils/ReducerContextNoAction/state/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-reducer-context-no-action/state.html
$dokka.location:com.onegravity.bloc.utils/Sink///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-sink/index.html
$dokka.location:com.onegravity.bloc.utils/Sink/send/#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-sink/send.html
$dokka.location:com.onegravity.bloc.utils/StateStream///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-state-stream/index.html
$dokka.location:com.onegravity.bloc.utils/StateStream/collect/#FlowCollector<Value>[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-state-stream/collect.html
$dokka.location:com.onegravity.bloc.utils/StateStream/value/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-state-stream/value.html
$dokka.location:com.onegravity.bloc.utils/ThunkContext///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-thunk-context/index.html
$dokka.location:com.onegravity.bloc.utils/ThunkContext/ThunkContext/#GetState<State>[TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[TypeParam(bounds=[kotlin.Any?])])#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-thunk-context/-thunk-context.html
$dokka.location:com.onegravity.bloc.utils/ThunkContext/action/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-thunk-context/action.html
$dokka.location:com.onegravity.bloc.utils/ThunkContext/dispatch/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-thunk-context/dispatch.html
$dokka.location:com.onegravity.bloc.utils/ThunkContext/getState/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-thunk-context/get-state.html
$dokka.location:com.onegravity.bloc.utils/ThunkContextNoAction///PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-thunk-context-no-action/index.html
$dokka.location:com.onegravity.bloc.utils/ThunkContextNoAction/ThunkContextNoAction/#GetState<State>[TypeParam(bounds=[kotlin.Any?])]#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-thunk-context-no-action/-thunk-context-no-action.html
$dokka.location:com.onegravity.bloc.utils/ThunkContextNoAction/dispatch/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-thunk-context-no-action/dispatch.html
$dokka.location:com.onegravity.bloc.utils/ThunkContextNoAction/getState/#/PointingToDeclaration/bloc-core/com.onegravity.bloc.utils/-thunk-context-no-action/get-state.html
$dokka.location:com.onegravity.bloc////PointingToDeclaration/bloc-core/com.onegravity.bloc/index.html
$dokka.location:com.onegravity.bloc//activityBlocContext/androidx.appcompat.app.AppCompatActivity#/PointingToDeclaration/bloc-core/com.onegravity.bloc/activity-bloc-context.html
$dokka.location:com.onegravity.bloc//activityBlocContext/androidx.fragment.app.Fragment#/PointingToDeclaration/bloc-core/com.onegravity.bloc/activity-bloc-context.html
$dokka.location:com.onegravity.bloc//bind/androidx.appcompat.app.AppCompatActivity#kotlin.Int#kotlin.Function1[TypeParam(bounds=[androidx.databinding.ViewDataBinding]),kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc/bind.html
$dokka.location:com.onegravity.bloc//bloc/#com.onegravity.bloc.context.BlocContext#TypeParam(bounds=[kotlin.Any?])#kotlin.Function1[com.onegravity.bloc.BlocBuilder[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc/bloc.html
$dokka.location:com.onegravity.bloc//bloc/#com.onegravity.bloc.context.BlocContext#TypeParam(bounds=[kotlin.Any?])#kotlin.Function1[com.onegravity.bloc.BlocBuilder[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),kotlin.Unit,TypeParam(bounds=[kotlin.Any?])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc/bloc.html
$dokka.location:com.onegravity.bloc//bloc/#com.onegravity.bloc.context.BlocContext#com.onegravity.bloc.state.BlocState[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[com.onegravity.bloc.BlocBuilder[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc/[common]bloc.html
$dokka.location:com.onegravity.bloc//bloc/#com.onegravity.bloc.context.BlocContext#com.onegravity.bloc.state.BlocState[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[com.onegravity.bloc.BlocBuilder[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),kotlin.Unit,TypeParam(bounds=[kotlin.Any?])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc/bloc.html
$dokka.location:com.onegravity.bloc//defaultBlocContext/TypeParam(bounds=[androidx.savedstate.SavedStateRegistryOwner, androidx.activity.OnBackPressedDispatcherOwner, androidx.lifecycle.ViewModelStoreOwner, androidx.lifecycle.LifecycleOwner])#/PointingToDeclaration/bloc-core/com.onegravity.bloc/default-bloc-context.html
$dokka.location:com.onegravity.bloc//defaultBlocContext/androidx.lifecycle.ViewModel#com.onegravity.bloc.ActivityBlocContext#androidx.lifecycle.LifecycleRegistry/PointingToDeclaration/bloc-core/com.onegravity.bloc/default-bloc-context.html
$dokka.location:com.onegravity.bloc//factory/androidx.appcompat.app.AppCompatActivity#kotlin.Function1[com.onegravity.bloc.ActivityBlocContext,TypeParam(bounds=[androidx.lifecycle.ViewModel])]/PointingToDeclaration/bloc-core/com.onegravity.bloc/factory.html
$dokka.location:com.onegravity.bloc//factory/androidx.fragment.app.Fragment#kotlin.Function1[com.onegravity.bloc.ActivityBlocContext,TypeParam(bounds=[androidx.lifecycle.ViewModel])]/PointingToDeclaration/bloc-core/com.onegravity.bloc/factory.html
$dokka.location:com.onegravity.bloc//onCreate/com.onegravity.bloc.Bloc[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.InitializerContext[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc/on-create.html
$dokka.location:com.onegravity.bloc//onCreate/com.onegravity.bloc.utils.BlocOwner[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.InitializerContext[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc/on-create.html
$dokka.location:com.onegravity.bloc//reduce/com.onegravity.bloc.Bloc[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.ReducerContextNoAction[TypeParam(bounds=[kotlin.Any?])],TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc/reduce.html
$dokka.location:com.onegravity.bloc//reduce/com.onegravity.bloc.utils.BlocOwner[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.ReducerContextNoAction[TypeParam(bounds=[kotlin.Any?])],TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc/reduce.html
$dokka.location:com.onegravity.bloc//reduceAnd/com.onegravity.bloc.Bloc[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.ReducerContextNoAction[TypeParam(bounds=[kotlin.Any?])],com.onegravity.bloc.utils.Effect[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/bloc-core/com.onegravity.bloc/reduce-and.html
$dokka.location:com.onegravity.bloc//reduceAnd/com.onegravity.bloc.utils.BlocOwner[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.ReducerContextNoAction[TypeParam(bounds=[kotlin.Any?])],com.onegravity.bloc.utils.Effect[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/bloc-core/com.onegravity.bloc/reduce-and.html
$dokka.location:com.onegravity.bloc//sideEffect/com.onegravity.bloc.Bloc[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[com.onegravity.bloc.utils.ReducerContextNoAction[TypeParam(bounds=[kotlin.Any?])],TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc/side-effect.html
$dokka.location:com.onegravity.bloc//sideEffect/com.onegravity.bloc.utils.BlocOwner[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[com.onegravity.bloc.utils.ReducerContextNoAction[TypeParam(bounds=[kotlin.Any?])],TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc/side-effect.html
$dokka.location:com.onegravity.bloc//subscribe/com.onegravity.bloc.Bloc[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#Lifecycle#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]?#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]?/PointingToDeclaration/bloc-core/com.onegravity.bloc/subscribe.html
$dokka.location:com.onegravity.bloc//subscribe/com.onegravity.bloc.utils.BlocObservableOwner[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#Lifecycle#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]?#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]?/PointingToDeclaration/bloc-core/com.onegravity.bloc/subscribe.html
$dokka.location:com.onegravity.bloc//subscribe/com.onegravity.bloc.utils.BlocObservableOwner[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#androidx.appcompat.app.AppCompatActivity#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]?#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]?/PointingToDeclaration/bloc-core/com.onegravity.bloc/subscribe.html
$dokka.location:com.onegravity.bloc//subscribe/com.onegravity.bloc.utils.BlocObservableOwner[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#androidx.fragment.app.Fragment#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]?#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]?/PointingToDeclaration/bloc-core/com.onegravity.bloc/subscribe.html
$dokka.location:com.onegravity.bloc//subscribe/com.onegravity.bloc.utils.BlocOwner[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#Lifecycle#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]?#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]?/PointingToDeclaration/bloc-core/com.onegravity.bloc/subscribe.html
$dokka.location:com.onegravity.bloc//subscribe/com.onegravity.bloc.utils.BlocOwner[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#androidx.appcompat.app.AppCompatActivity#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]?#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]?/PointingToDeclaration/bloc-core/com.onegravity.bloc/subscribe.html
$dokka.location:com.onegravity.bloc//subscribe/com.onegravity.bloc.utils.BlocOwner[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#androidx.fragment.app.Fragment#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]?#kotlin.coroutines.SuspendFunction1[TypeParam(bounds=[kotlin.Any?]),kotlin.Unit]?/PointingToDeclaration/bloc-core/com.onegravity.bloc/subscribe.html
$dokka.location:com.onegravity.bloc//thunk/com.onegravity.bloc.Bloc[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.ThunkContextNoAction[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc/thunk.html
$dokka.location:com.onegravity.bloc//thunk/com.onegravity.bloc.utils.BlocOwner[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.ThunkContextNoAction[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc/thunk.html
$dokka.location:com.onegravity.bloc//toLiveData/androidx.lifecycle.ViewModel#com.onegravity.bloc.utils.StateStream[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc/to-live-data.html
$dokka.location:com.onegravity.bloc//toLiveData/com.onegravity.bloc.utils.StateStream[TypeParam(bounds=[kotlin.Any?])]#kotlinx.coroutines.CoroutineScope/PointingToDeclaration/bloc-core/com.onegravity.bloc/to-live-data.html
$dokka.location:com.onegravity.bloc//toObservable/com.onegravity.bloc.Bloc[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/bloc-core/com.onegravity.bloc/to-observable.html
$dokka.location:com.onegravity.bloc//toObservable/com.onegravity.bloc.Bloc[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#com.onegravity.bloc.Bloc[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc/to-observable.html
$dokka.location:com.onegravity.bloc//toObservable/kotlin.collections.List[com.onegravity.bloc.Bloc[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]]#/PointingToDeclaration/bloc-core/com.onegravity.bloc/to-observable.html
$dokka.location:com.onegravity.bloc/ActivityBlocContext///PointingToDeclaration/bloc-core/com.onegravity.bloc/-activity-bloc-context/index.html
$dokka.location:com.onegravity.bloc/ActivityBlocContext/ActivityBlocContext/#androidx.savedstate.SavedStateRegistry?#androidx.lifecycle.ViewModelStore?#androidx.activity.OnBackPressedDispatcher?/PointingToDeclaration/bloc-core/com.onegravity.bloc/-activity-bloc-context/-activity-bloc-context.html
$dokka.location:com.onegravity.bloc/ActivityBlocContext/onBackPressedDispatcher/#/PointingToDeclaration/bloc-core/com.onegravity.bloc/-activity-bloc-context/on-back-pressed-dispatcher.html
$dokka.location:com.onegravity.bloc/ActivityBlocContext/savedStateRegistry/#/PointingToDeclaration/bloc-core/com.onegravity.bloc/-activity-bloc-context/saved-state-registry.html
$dokka.location:com.onegravity.bloc/ActivityBlocContext/viewModelStore/#/PointingToDeclaration/bloc-core/com.onegravity.bloc/-activity-bloc-context/view-model-store.html
$dokka.location:com.onegravity.bloc/BaseViewModel///PointingToDeclaration/bloc-core/com.onegravity.bloc/-base-view-model/index.html
$dokka.location:com.onegravity.bloc/BaseViewModel/BaseViewModel/#com.onegravity.bloc.ActivityBlocContext/PointingToDeclaration/bloc-core/com.onegravity.bloc/-base-view-model/-base-view-model.html
$dokka.location:com.onegravity.bloc/BaseViewModel/getLifecycle/#/PointingToDeclaration/bloc-core/com.onegravity.bloc/-base-view-model/get-lifecycle.html
$dokka.location:com.onegravity.bloc/Bloc///PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc/index.html
$dokka.location:com.onegravity.bloc/BlocBuilder///PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-builder/index.html
$dokka.location:com.onegravity.bloc/BlocBuilder/BlocBuilder/#/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-builder/-bloc-builder.html
$dokka.location:com.onegravity.bloc/BlocBuilder/addReducer/#com.onegravity.bloc.utils.Matcher[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])]#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.ReducerContext[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any])],com.onegravity.bloc.utils.Effect[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]]#kotlin.Boolean/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-builder/add-reducer.html
$dokka.location:com.onegravity.bloc/BlocBuilder/addThunk/#com.onegravity.bloc.utils.Matcher[TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])]#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.ThunkContext[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-builder/add-thunk.html
$dokka.location:com.onegravity.bloc/BlocBuilder/and/TypeParam(bounds=[kotlin.Any?])#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-builder/and.html
$dokka.location:com.onegravity.bloc/BlocBuilder/build/#com.onegravity.bloc.context.BlocContext#com.onegravity.bloc.state.BlocState[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-builder/build.html
$dokka.location:com.onegravity.bloc/BlocBuilder/dispatcher/#/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-builder/dispatcher.html
$dokka.location:com.onegravity.bloc/BlocBuilder/noSideEffect/TypeParam(bounds=[kotlin.Any?])#/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-builder/no-side-effect.html
$dokka.location:com.onegravity.bloc/BlocBuilder/onCreate/#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.InitializerContext[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-builder/on-create.html
$dokka.location:com.onegravity.bloc/BlocBuilder/reduce/#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.ReducerContext[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])],TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-builder/reduce.html
$dokka.location:com.onegravity.bloc/BlocBuilder/reduce/#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.ReducerContext[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any])],TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-builder/reduce.html
$dokka.location:com.onegravity.bloc/BlocBuilder/reduceAnd/#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.ReducerContext[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any])],com.onegravity.bloc.utils.Effect[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-builder/reduce-and.html
$dokka.location:com.onegravity.bloc/BlocBuilder/sideEffect/#kotlin.Function1[com.onegravity.bloc.utils.ReducerContext[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])],TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-builder/side-effect.html
$dokka.location:com.onegravity.bloc/BlocBuilder/sideEffect/#kotlin.Function1[com.onegravity.bloc.utils.ReducerContext[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any])],TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-builder/side-effect.html
$dokka.location:com.onegravity.bloc/BlocBuilder/thunk/#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.ThunkContext[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[TypeParam(bounds=[kotlin.Any])])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-builder/thunk.html
$dokka.location:com.onegravity.bloc/BlocBuilder/thunk/#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.ThunkContext[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-builder/thunk.html
$dokka.location:com.onegravity.bloc/BlocFacade///PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-facade/index.html
$dokka.location:com.onegravity.bloc/BlocFacade/sideEffects/#/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-facade/side-effects.html
$dokka.location:com.onegravity.bloc/BlocImpl///PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-impl/index.html
$dokka.location:com.onegravity.bloc/BlocImpl/BlocImpl/#com.onegravity.bloc.context.BlocContext#com.onegravity.bloc.state.BlocState[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.InitializerContext[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any])],kotlin.Unit]#kotlin.collections.List[com.onegravity.bloc.utils.MatcherThunk[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),TypeParam(bounds=[kotlin.Any])]]#kotlin.collections.List[com.onegravity.bloc.utils.MatcherReducer[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any]),com.onegravity.bloc.utils.Effect[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]]]#CoroutineContext/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-impl/-bloc-impl.html
$dokka.location:com.onegravity.bloc/BlocImpl/collect/#FlowCollector<State>[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-impl/collect.html
$dokka.location:com.onegravity.bloc/BlocImpl/coroutineScope/#/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-impl/coroutine-scope.html
$dokka.location:com.onegravity.bloc/BlocImpl/runInitializer/#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.InitializerContext[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-impl/run-initializer.html
$dokka.location:com.onegravity.bloc/BlocImpl/runReducer/#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.ReducerContextNoAction[TypeParam(bounds=[kotlin.Any?])],com.onegravity.bloc.utils.Effect[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-impl/run-reducer.html
$dokka.location:com.onegravity.bloc/BlocImpl/runThunk/#kotlin.coroutines.SuspendFunction1[com.onegravity.bloc.utils.ThunkContextNoAction[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any])],kotlin.Unit]/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-impl/run-thunk.html
$dokka.location:com.onegravity.bloc/BlocImpl/send/#TypeParam(bounds=[kotlin.Any])/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-impl/send.html
$dokka.location:com.onegravity.bloc/BlocImpl/sideEffects/#/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-impl/side-effects.html
$dokka.location:com.onegravity.bloc/BlocImpl/value/#/PointingToDeclaration/bloc-core/com.onegravity.bloc/-bloc-impl/value.html
com.onegravity.bloc
com.onegravity.bloc.context
com.onegravity.bloc.select
com.onegravity.bloc.state
com.onegravity.bloc.state.redux
com.onegravity.bloc.utils

